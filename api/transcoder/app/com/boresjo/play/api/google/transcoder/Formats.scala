package com.boresjo.play.api.google.transcoder

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtJob: Format[Schema.Job] = Json.format[Schema.Job]
	given fmtJobConfig: Format[Schema.JobConfig] = Json.format[Schema.JobConfig]
	given fmtJobStateEnum: Format[Schema.Job.StateEnum] = JsonEnumFormat[Schema.Job.StateEnum]
	given fmtStatus: Format[Schema.Status] = Json.format[Schema.Status]
	given fmtJobModeEnum: Format[Schema.Job.ModeEnum] = JsonEnumFormat[Schema.Job.ModeEnum]
	given fmtJobOptimizationEnum: Format[Schema.Job.OptimizationEnum] = JsonEnumFormat[Schema.Job.OptimizationEnum]
	given fmtInput: Format[Schema.Input] = Json.format[Schema.Input]
	given fmtEditAtom: Format[Schema.EditAtom] = Json.format[Schema.EditAtom]
	given fmtElementaryStream: Format[Schema.ElementaryStream] = Json.format[Schema.ElementaryStream]
	given fmtMuxStream: Format[Schema.MuxStream] = Json.format[Schema.MuxStream]
	given fmtManifest: Format[Schema.Manifest] = Json.format[Schema.Manifest]
	given fmtOutput: Format[Schema.Output] = Json.format[Schema.Output]
	given fmtAdBreak: Format[Schema.AdBreak] = Json.format[Schema.AdBreak]
	given fmtPubsubDestination: Format[Schema.PubsubDestination] = Json.format[Schema.PubsubDestination]
	given fmtSpriteSheet: Format[Schema.SpriteSheet] = Json.format[Schema.SpriteSheet]
	given fmtOverlay: Format[Schema.Overlay] = Json.format[Schema.Overlay]
	given fmtEncryption: Format[Schema.Encryption] = Json.format[Schema.Encryption]
	given fmtPreprocessingConfig: Format[Schema.PreprocessingConfig] = Json.format[Schema.PreprocessingConfig]
	given fmtColor: Format[Schema.Color] = Json.format[Schema.Color]
	given fmtDenoise: Format[Schema.Denoise] = Json.format[Schema.Denoise]
	given fmtDeblock: Format[Schema.Deblock] = Json.format[Schema.Deblock]
	given fmtAudio: Format[Schema.Audio] = Json.format[Schema.Audio]
	given fmtCrop: Format[Schema.Crop] = Json.format[Schema.Crop]
	given fmtPad: Format[Schema.Pad] = Json.format[Schema.Pad]
	given fmtDeinterlace: Format[Schema.Deinterlace] = Json.format[Schema.Deinterlace]
	given fmtYadifConfig: Format[Schema.YadifConfig] = Json.format[Schema.YadifConfig]
	given fmtBwdifConfig: Format[Schema.BwdifConfig] = Json.format[Schema.BwdifConfig]
	given fmtVideoStream: Format[Schema.VideoStream] = Json.format[Schema.VideoStream]
	given fmtAudioStream: Format[Schema.AudioStream] = Json.format[Schema.AudioStream]
	given fmtTextStream: Format[Schema.TextStream] = Json.format[Schema.TextStream]
	given fmtH264CodecSettings: Format[Schema.H264CodecSettings] = Json.format[Schema.H264CodecSettings]
	given fmtH265CodecSettings: Format[Schema.H265CodecSettings] = Json.format[Schema.H265CodecSettings]
	given fmtVp9CodecSettings: Format[Schema.Vp9CodecSettings] = Json.format[Schema.Vp9CodecSettings]
	given fmtH264CodecSettingsFrameRateConversionStrategyEnum: Format[Schema.H264CodecSettings.FrameRateConversionStrategyEnum] = JsonEnumFormat[Schema.H264CodecSettings.FrameRateConversionStrategyEnum]
	given fmtH264ColorFormatSDR: Format[Schema.H264ColorFormatSDR] = Json.format[Schema.H264ColorFormatSDR]
	given fmtH264ColorFormatHLG: Format[Schema.H264ColorFormatHLG] = Json.format[Schema.H264ColorFormatHLG]
	given fmtH265CodecSettingsFrameRateConversionStrategyEnum: Format[Schema.H265CodecSettings.FrameRateConversionStrategyEnum] = JsonEnumFormat[Schema.H265CodecSettings.FrameRateConversionStrategyEnum]
	given fmtH265ColorFormatSDR: Format[Schema.H265ColorFormatSDR] = Json.format[Schema.H265ColorFormatSDR]
	given fmtH265ColorFormatHLG: Format[Schema.H265ColorFormatHLG] = Json.format[Schema.H265ColorFormatHLG]
	given fmtH265ColorFormatHDR10: Format[Schema.H265ColorFormatHDR10] = Json.format[Schema.H265ColorFormatHDR10]
	given fmtVp9CodecSettingsFrameRateConversionStrategyEnum: Format[Schema.Vp9CodecSettings.FrameRateConversionStrategyEnum] = JsonEnumFormat[Schema.Vp9CodecSettings.FrameRateConversionStrategyEnum]
	given fmtVp9ColorFormatSDR: Format[Schema.Vp9ColorFormatSDR] = Json.format[Schema.Vp9ColorFormatSDR]
	given fmtVp9ColorFormatHLG: Format[Schema.Vp9ColorFormatHLG] = Json.format[Schema.Vp9ColorFormatHLG]
	given fmtAudioMapping: Format[Schema.AudioMapping] = Json.format[Schema.AudioMapping]
	given fmtTextMapping: Format[Schema.TextMapping] = Json.format[Schema.TextMapping]
	given fmtSegmentSettings: Format[Schema.SegmentSettings] = Json.format[Schema.SegmentSettings]
	given fmtFmp4Config: Format[Schema.Fmp4Config] = Json.format[Schema.Fmp4Config]
	given fmtManifestTypeEnum: Format[Schema.Manifest.TypeEnum] = JsonEnumFormat[Schema.Manifest.TypeEnum]
	given fmtDashConfig: Format[Schema.DashConfig] = Json.format[Schema.DashConfig]
	given fmtDashConfigSegmentReferenceSchemeEnum: Format[Schema.DashConfig.SegmentReferenceSchemeEnum] = JsonEnumFormat[Schema.DashConfig.SegmentReferenceSchemeEnum]
	given fmtImage: Format[Schema.Image] = Json.format[Schema.Image]
	given fmtAnimation: Format[Schema.Animation] = Json.format[Schema.Animation]
	given fmtNormalizedCoordinate: Format[Schema.NormalizedCoordinate] = Json.format[Schema.NormalizedCoordinate]
	given fmtAnimationStatic: Format[Schema.AnimationStatic] = Json.format[Schema.AnimationStatic]
	given fmtAnimationFade: Format[Schema.AnimationFade] = Json.format[Schema.AnimationFade]
	given fmtAnimationEnd: Format[Schema.AnimationEnd] = Json.format[Schema.AnimationEnd]
	given fmtAnimationFadeFadeTypeEnum: Format[Schema.AnimationFade.FadeTypeEnum] = JsonEnumFormat[Schema.AnimationFade.FadeTypeEnum]
	given fmtAes128Encryption: Format[Schema.Aes128Encryption] = Json.format[Schema.Aes128Encryption]
	given fmtSampleAesEncryption: Format[Schema.SampleAesEncryption] = Json.format[Schema.SampleAesEncryption]
	given fmtMpegCommonEncryption: Format[Schema.MpegCommonEncryption] = Json.format[Schema.MpegCommonEncryption]
	given fmtSecretManagerSource: Format[Schema.SecretManagerSource] = Json.format[Schema.SecretManagerSource]
	given fmtDrmSystems: Format[Schema.DrmSystems] = Json.format[Schema.DrmSystems]
	given fmtWidevine: Format[Schema.Widevine] = Json.format[Schema.Widevine]
	given fmtFairplay: Format[Schema.Fairplay] = Json.format[Schema.Fairplay]
	given fmtPlayready: Format[Schema.Playready] = Json.format[Schema.Playready]
	given fmtClearkey: Format[Schema.Clearkey] = Json.format[Schema.Clearkey]
	given fmtListJobsResponse: Format[Schema.ListJobsResponse] = Json.format[Schema.ListJobsResponse]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtJobTemplate: Format[Schema.JobTemplate] = Json.format[Schema.JobTemplate]
	given fmtListJobTemplatesResponse: Format[Schema.ListJobTemplatesResponse] = Json.format[Schema.ListJobTemplatesResponse]
}
