package com.boresjo.play.api.google.containeranalysis

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaNote: Conversion[List[Schema.Note], Option[List[Schema.Note]]] = (fun: List[Schema.Note]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaVersion: Conversion[Schema.Version, Option[Schema.Version]] = (fun: Schema.Version) => Option(fun)
		given putSchemaSBOMStatusSbomStateEnum: Conversion[Schema.SBOMStatus.SbomStateEnum, Option[Schema.SBOMStatus.SbomStateEnum]] = (fun: Schema.SBOMStatus.SbomStateEnum) => Option(fun)
		given putSchemaTimeSpan: Conversion[Schema.TimeSpan, Option[Schema.TimeSpan]] = (fun: Schema.TimeSpan) => Option(fun)
		given putListSchemaVolume: Conversion[List[Schema.Volume], Option[List[Schema.Volume]]] = (fun: List[Schema.Volume]) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListInt: Conversion[List[Int], Option[List[Int]]] = (fun: List[Int]) => Option(fun)
		given putSchemaBuildStepStatusEnum: Conversion[Schema.BuildStep.StatusEnum, Option[Schema.BuildStep.StatusEnum]] = (fun: Schema.BuildStep.StatusEnum) => Option(fun)
		given putSchemaRepoId: Conversion[Schema.RepoId, Option[Schema.RepoId]] = (fun: Schema.RepoId) => Option(fun)
		given putSchemaAliasContext: Conversion[Schema.AliasContext, Option[Schema.AliasContext]] = (fun: Schema.AliasContext) => Option(fun)
		given putListSchemaOccurrence: Conversion[List[Schema.Occurrence], Option[List[Schema.Occurrence]]] = (fun: List[Schema.Occurrence]) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putListSchemaBinding: Conversion[List[Schema.Binding], Option[List[Schema.Binding]]] = (fun: List[Schema.Binding]) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact]) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage]) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage]) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects) => Option(fun)
		given putSchemaInTotoStatement: Conversion[Schema.InTotoStatement, Option[Schema.InTotoStatement]] = (fun: Schema.InTotoStatement) => Option(fun)
		given putSchemaInTotoSlsaProvenanceV1: Conversion[Schema.InTotoSlsaProvenanceV1, Option[Schema.InTotoSlsaProvenanceV1]] = (fun: Schema.InTotoSlsaProvenanceV1) => Option(fun)
		given putSchemaInTotoProvenance: Conversion[Schema.InTotoProvenance, Option[Schema.InTotoProvenance]] = (fun: Schema.InTotoProvenance) => Option(fun)
		given putSchemaBuildProvenance: Conversion[Schema.BuildProvenance, Option[Schema.BuildProvenance]] = (fun: Schema.BuildProvenance) => Option(fun)
		given putSchemaAliasContextKindEnum: Conversion[Schema.AliasContext.KindEnum, Option[Schema.AliasContext.KindEnum]] = (fun: Schema.AliasContext.KindEnum) => Option(fun)
		given putSchemaSlsaProvenance: Conversion[Schema.SlsaProvenance, Option[Schema.SlsaProvenance]] = (fun: Schema.SlsaProvenance) => Option(fun)
		given putSchemaSlsaProvenanceZeroTwo: Conversion[Schema.SlsaProvenanceZeroTwo, Option[Schema.SlsaProvenanceZeroTwo]] = (fun: Schema.SlsaProvenanceZeroTwo) => Option(fun)
		given putListSchemaSubject: Conversion[List[Schema.Subject], Option[List[Schema.Subject]]] = (fun: List[Schema.Subject]) => Option(fun)
		given putSchemaPackageOccurrenceArchitectureEnum: Conversion[Schema.PackageOccurrence.ArchitectureEnum, Option[Schema.PackageOccurrence.ArchitectureEnum]] = (fun: Schema.PackageOccurrence.ArchitectureEnum) => Option(fun)
		given putListSchemaLocation: Conversion[List[Schema.Location], Option[List[Schema.Location]]] = (fun: List[Schema.Location]) => Option(fun)
		given putSchemaLicense: Conversion[Schema.License, Option[Schema.License]] = (fun: Schema.License) => Option(fun)
		given putSchemaRemediationRemediationTypeEnum: Conversion[Schema.Remediation.RemediationTypeEnum, Option[Schema.Remediation.RemediationTypeEnum]] = (fun: Schema.Remediation.RemediationTypeEnum) => Option(fun)
		given putSchemaRelatedUrl: Conversion[Schema.RelatedUrl, Option[Schema.RelatedUrl]] = (fun: Schema.RelatedUrl) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1Hash: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Hash], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Hash]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Hash]) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1GitConfigHttpConfig: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1GitConfigHttpConfig, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1GitConfigHttpConfig]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1GitConfigHttpConfig) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaCVSSv3IntegrityImpactEnum: Conversion[Schema.CVSSv3.IntegrityImpactEnum, Option[Schema.CVSSv3.IntegrityImpactEnum]] = (fun: Schema.CVSSv3.IntegrityImpactEnum) => Option(fun)
		given putSchemaCVSSv3ConfidentialityImpactEnum: Conversion[Schema.CVSSv3.ConfidentialityImpactEnum, Option[Schema.CVSSv3.ConfidentialityImpactEnum]] = (fun: Schema.CVSSv3.ConfidentialityImpactEnum) => Option(fun)
		given putSchemaCVSSv3UserInteractionEnum: Conversion[Schema.CVSSv3.UserInteractionEnum, Option[Schema.CVSSv3.UserInteractionEnum]] = (fun: Schema.CVSSv3.UserInteractionEnum) => Option(fun)
		given putSchemaCVSSv3AvailabilityImpactEnum: Conversion[Schema.CVSSv3.AvailabilityImpactEnum, Option[Schema.CVSSv3.AvailabilityImpactEnum]] = (fun: Schema.CVSSv3.AvailabilityImpactEnum) => Option(fun)
		given putSchemaCVSSv3PrivilegesRequiredEnum: Conversion[Schema.CVSSv3.PrivilegesRequiredEnum, Option[Schema.CVSSv3.PrivilegesRequiredEnum]] = (fun: Schema.CVSSv3.PrivilegesRequiredEnum) => Option(fun)
		given putSchemaCVSSv3AttackVectorEnum: Conversion[Schema.CVSSv3.AttackVectorEnum, Option[Schema.CVSSv3.AttackVectorEnum]] = (fun: Schema.CVSSv3.AttackVectorEnum) => Option(fun)
		given putSchemaCVSSv3AttackComplexityEnum: Conversion[Schema.CVSSv3.AttackComplexityEnum, Option[Schema.CVSSv3.AttackComplexityEnum]] = (fun: Schema.CVSSv3.AttackComplexityEnum) => Option(fun)
		given putSchemaCVSSv3ScopeEnum: Conversion[Schema.CVSSv3.ScopeEnum, Option[Schema.CVSSv3.ScopeEnum]] = (fun: Schema.CVSSv3.ScopeEnum) => Option(fun)
		given putSchemaSbomReferenceIntotoPredicate: Conversion[Schema.SbomReferenceIntotoPredicate, Option[Schema.SbomReferenceIntotoPredicate]] = (fun: Schema.SbomReferenceIntotoPredicate) => Option(fun)
		given putSchemaDeploymentOccurrencePlatformEnum: Conversion[Schema.DeploymentOccurrence.PlatformEnum, Option[Schema.DeploymentOccurrence.PlatformEnum]] = (fun: Schema.DeploymentOccurrence.PlatformEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1HashTypeEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Hash.TypeEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Hash.TypeEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Hash.TypeEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsSubstitutionOptionEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.SubstitutionOptionEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.SubstitutionOptionEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.SubstitutionOptionEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsLogStreamingOptionEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.LogStreamingOptionEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.LogStreamingOptionEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.LogStreamingOptionEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsDefaultLogsBucketBehaviorEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.DefaultLogsBucketBehaviorEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.DefaultLogsBucketBehaviorEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.DefaultLogsBucketBehaviorEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsMachineTypeEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.MachineTypeEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.MachineTypeEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.MachineTypeEnum) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsSourceProvenanceHashEnum: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.SourceProvenanceHashEnum], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.SourceProvenanceHashEnum]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.SourceProvenanceHashEnum]) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsRequestedVerifyOptionEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.RequestedVerifyOptionEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.RequestedVerifyOptionEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.RequestedVerifyOptionEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsLoggingEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.LoggingEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.LoggingEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.LoggingEnum) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1Volume: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Volume], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Volume]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Volume]) => Option(fun)
		given putListSchemaResourceDescriptor: Conversion[List[Schema.ResourceDescriptor], Option[List[Schema.ResourceDescriptor]]] = (fun: List[Schema.ResourceDescriptor]) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1Secret: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Secret], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Secret]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Secret]) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1SourceProvenance) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1Results: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Results, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Results]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Results) => Option(fun)
		given putMapStringSchemaContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan: Conversion[Map[String, Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan], Option[Map[String, Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan]]] = (fun: Map[String, Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan]) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildStatusEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Build.StatusEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Build.StatusEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Build.StatusEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1Source: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Source, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Source]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Source) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning]) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep]) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1Secrets: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Secrets) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1GitConfig: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1GitConfig, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1GitConfig]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1GitConfig) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo) => Option(fun)
		given putSchemaCVSSUserInteractionEnum: Conversion[Schema.CVSS.UserInteractionEnum, Option[Schema.CVSS.UserInteractionEnum]] = (fun: Schema.CVSS.UserInteractionEnum) => Option(fun)
		given putSchemaCVSSAvailabilityImpactEnum: Conversion[Schema.CVSS.AvailabilityImpactEnum, Option[Schema.CVSS.AvailabilityImpactEnum]] = (fun: Schema.CVSS.AvailabilityImpactEnum) => Option(fun)
		given putSchemaCVSSPrivilegesRequiredEnum: Conversion[Schema.CVSS.PrivilegesRequiredEnum, Option[Schema.CVSS.PrivilegesRequiredEnum]] = (fun: Schema.CVSS.PrivilegesRequiredEnum) => Option(fun)
		given putSchemaCVSSAttackVectorEnum: Conversion[Schema.CVSS.AttackVectorEnum, Option[Schema.CVSS.AttackVectorEnum]] = (fun: Schema.CVSS.AttackVectorEnum) => Option(fun)
		given putSchemaCVSSAttackComplexityEnum: Conversion[Schema.CVSS.AttackComplexityEnum, Option[Schema.CVSS.AttackComplexityEnum]] = (fun: Schema.CVSS.AttackComplexityEnum) => Option(fun)
		given putSchemaCVSSConfidentialityImpactEnum: Conversion[Schema.CVSS.ConfidentialityImpactEnum, Option[Schema.CVSS.ConfidentialityImpactEnum]] = (fun: Schema.CVSS.ConfidentialityImpactEnum) => Option(fun)
		given putSchemaCVSSScopeEnum: Conversion[Schema.CVSS.ScopeEnum, Option[Schema.CVSS.ScopeEnum]] = (fun: Schema.CVSS.ScopeEnum) => Option(fun)
		given putSchemaCVSSIntegrityImpactEnum: Conversion[Schema.CVSS.IntegrityImpactEnum, Option[Schema.CVSS.IntegrityImpactEnum]] = (fun: Schema.CVSS.IntegrityImpactEnum) => Option(fun)
		given putSchemaCVSSAuthenticationEnum: Conversion[Schema.CVSS.AuthenticationEnum, Option[Schema.CVSS.AuthenticationEnum]] = (fun: Schema.CVSS.AuthenticationEnum) => Option(fun)
		given putSchemaWindowsUpdate: Conversion[Schema.WindowsUpdate, Option[Schema.WindowsUpdate]] = (fun: Schema.WindowsUpdate) => Option(fun)
		given putListSchemaUpgradeDistribution: Conversion[List[Schema.UpgradeDistribution], Option[List[Schema.UpgradeDistribution]]] = (fun: List[Schema.UpgradeDistribution]) => Option(fun)
		given putListSchemaEnvelopeSignature: Conversion[List[Schema.EnvelopeSignature], Option[List[Schema.EnvelopeSignature]]] = (fun: List[Schema.EnvelopeSignature]) => Option(fun)
		given putListSchemaFixableTotalByDigest: Conversion[List[Schema.FixableTotalByDigest], Option[List[Schema.FixableTotalByDigest]]] = (fun: List[Schema.FixableTotalByDigest]) => Option(fun)
		given putListSchemaRemediation: Conversion[List[Schema.Remediation], Option[List[Schema.Remediation]]] = (fun: List[Schema.Remediation]) => Option(fun)
		given putListSchemaRelatedUrl: Conversion[List[Schema.RelatedUrl], Option[List[Schema.RelatedUrl]]] = (fun: List[Schema.RelatedUrl]) => Option(fun)
		given putSchemaJustification: Conversion[Schema.Justification, Option[Schema.Justification]] = (fun: Schema.Justification) => Option(fun)
		given putSchemaAssessmentStateEnum: Conversion[Schema.Assessment.StateEnum, Option[Schema.Assessment.StateEnum]] = (fun: Schema.Assessment.StateEnum) => Option(fun)
		given putSchemaSbomReferenceIntotoPayload: Conversion[Schema.SbomReferenceIntotoPayload, Option[Schema.SbomReferenceIntotoPayload]] = (fun: Schema.SbomReferenceIntotoPayload) => Option(fun)
		given putSchemaFingerprint: Conversion[Schema.Fingerprint, Option[Schema.Fingerprint]] = (fun: Schema.Fingerprint) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1GitSource: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1GitSource, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1GitSource]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1GitSource) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest) => Option(fun)
		given putMapStringSchemaContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes: Conversion[Map[String, Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes], Option[Map[String, Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes]]] = (fun: Map[String, Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes]) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository) => Option(fun)
		given putSchemaDistributionArchitectureEnum: Conversion[Schema.Distribution.ArchitectureEnum, Option[Schema.Distribution.ArchitectureEnum]] = (fun: Schema.Distribution.ArchitectureEnum) => Option(fun)
		given putListSchemaLayer: Conversion[List[Schema.Layer], Option[List[Schema.Layer]]] = (fun: List[Schema.Layer]) => Option(fun)
		given putSchemaProvenanceBuilder: Conversion[Schema.ProvenanceBuilder, Option[Schema.ProvenanceBuilder]] = (fun: Schema.ProvenanceBuilder) => Option(fun)
		given putSchemaBuildMetadata: Conversion[Schema.BuildMetadata, Option[Schema.BuildMetadata]] = (fun: Schema.BuildMetadata) => Option(fun)
		given putSchemaIdentity: Conversion[Schema.Identity, Option[Schema.Identity]] = (fun: Schema.Identity) => Option(fun)
		given putListSchemaCategory: Conversion[List[Schema.Category], Option[List[Schema.Category]]] = (fun: List[Schema.Category]) => Option(fun)
		given putSchemaVersionKindEnum: Conversion[Schema.Version.KindEnum, Option[Schema.Version.KindEnum]] = (fun: Schema.Version.KindEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfoTypeEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo.TypeEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo.TypeEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildFailureInfo.TypeEnum) => Option(fun)
		given putSchemaDiscoveryOccurrenceAnalysisStatusEnum: Conversion[Schema.DiscoveryOccurrence.AnalysisStatusEnum, Option[Schema.DiscoveryOccurrence.AnalysisStatusEnum]] = (fun: Schema.DiscoveryOccurrence.AnalysisStatusEnum) => Option(fun)
		given putSchemaSBOMStatus: Conversion[Schema.SBOMStatus, Option[Schema.SBOMStatus]] = (fun: Schema.SBOMStatus) => Option(fun)
		given putSchemaDiscoveryOccurrenceContinuousAnalysisEnum: Conversion[Schema.DiscoveryOccurrence.ContinuousAnalysisEnum, Option[Schema.DiscoveryOccurrence.ContinuousAnalysisEnum]] = (fun: Schema.DiscoveryOccurrence.ContinuousAnalysisEnum) => Option(fun)
		given putListSchemaStatus: Conversion[List[Schema.Status], Option[List[Schema.Status]]] = (fun: List[Schema.Status]) => Option(fun)
		given putSchemaAnalysisCompleted: Conversion[Schema.AnalysisCompleted, Option[Schema.AnalysisCompleted]] = (fun: Schema.AnalysisCompleted) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putSchemaGrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource: Conversion[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource, Option[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource]] = (fun: Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource) => Option(fun)
		given putSchemaVexAssessmentStateEnum: Conversion[Schema.VexAssessment.StateEnum, Option[Schema.VexAssessment.StateEnum]] = (fun: Schema.VexAssessment.StateEnum) => Option(fun)
		given putSchemaRunDetails: Conversion[Schema.RunDetails, Option[Schema.RunDetails]] = (fun: Schema.RunDetails) => Option(fun)
		given putSchemaBuildDefinition: Conversion[Schema.BuildDefinition, Option[Schema.BuildDefinition]] = (fun: Schema.BuildDefinition) => Option(fun)
		given putSchemaProjectRepoId: Conversion[Schema.ProjectRepoId, Option[Schema.ProjectRepoId]] = (fun: Schema.ProjectRepoId) => Option(fun)
		given putSchemaGrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness: Conversion[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness, Option[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness]] = (fun: Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness) => Option(fun)
		given putSchemaDSSEHint: Conversion[Schema.DSSEHint, Option[Schema.DSSEHint]] = (fun: Schema.DSSEHint) => Option(fun)
		given putSchemaJustificationJustificationTypeEnum: Conversion[Schema.Justification.JustificationTypeEnum, Option[Schema.Justification.JustificationTypeEnum]] = (fun: Schema.Justification.JustificationTypeEnum) => Option(fun)
		given putListSchemaComplianceVersion: Conversion[List[Schema.ComplianceVersion], Option[List[Schema.ComplianceVersion]]] = (fun: List[Schema.ComplianceVersion]) => Option(fun)
		given putSchemaCisBenchmark: Conversion[Schema.CisBenchmark, Option[Schema.CisBenchmark]] = (fun: Schema.CisBenchmark) => Option(fun)
		given putListSchemaSignature: Conversion[List[Schema.Signature], Option[List[Schema.Signature]]] = (fun: List[Schema.Signature]) => Option(fun)
		given putListSchemaJwt: Conversion[List[Schema.Jwt], Option[List[Schema.Jwt]]] = (fun: List[Schema.Jwt]) => Option(fun)
		given putSchemaPolicy: Conversion[Schema.Policy, Option[Schema.Policy]] = (fun: Schema.Policy) => Option(fun)
		given putSchemaDiscoveryNoteAnalysisKindEnum: Conversion[Schema.DiscoveryNote.AnalysisKindEnum, Option[Schema.DiscoveryNote.AnalysisKindEnum]] = (fun: Schema.DiscoveryNote.AnalysisKindEnum) => Option(fun)
		given putSchemaVulnerabilityOccurrenceSeverityEnum: Conversion[Schema.VulnerabilityOccurrence.SeverityEnum, Option[Schema.VulnerabilityOccurrence.SeverityEnum]] = (fun: Schema.VulnerabilityOccurrence.SeverityEnum) => Option(fun)
		given putSchemaVexAssessment: Conversion[Schema.VexAssessment, Option[Schema.VexAssessment]] = (fun: Schema.VexAssessment) => Option(fun)
		given putSchemaVulnerabilityOccurrenceCvssVersionEnum: Conversion[Schema.VulnerabilityOccurrence.CvssVersionEnum, Option[Schema.VulnerabilityOccurrence.CvssVersionEnum]] = (fun: Schema.VulnerabilityOccurrence.CvssVersionEnum) => Option(fun)
		given putListSchemaPackageIssue: Conversion[List[Schema.PackageIssue], Option[List[Schema.PackageIssue]]] = (fun: List[Schema.PackageIssue]) => Option(fun)
		given putSchemaVulnerabilityOccurrenceEffectiveSeverityEnum: Conversion[Schema.VulnerabilityOccurrence.EffectiveSeverityEnum, Option[Schema.VulnerabilityOccurrence.EffectiveSeverityEnum]] = (fun: Schema.VulnerabilityOccurrence.EffectiveSeverityEnum) => Option(fun)
		given putSchemaCVSS: Conversion[Schema.CVSS, Option[Schema.CVSS]] = (fun: Schema.CVSS) => Option(fun)
		given putListSchemaHash: Conversion[List[Schema.Hash], Option[List[Schema.Hash]]] = (fun: List[Schema.Hash]) => Option(fun)
		given putSchemaCloudRepoSourceContext: Conversion[Schema.CloudRepoSourceContext, Option[Schema.CloudRepoSourceContext]] = (fun: Schema.CloudRepoSourceContext) => Option(fun)
		given putSchemaGitSourceContext: Conversion[Schema.GitSourceContext, Option[Schema.GitSourceContext]] = (fun: Schema.GitSourceContext) => Option(fun)
		given putSchemaGerritSourceContext: Conversion[Schema.GerritSourceContext, Option[Schema.GerritSourceContext]] = (fun: Schema.GerritSourceContext) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1UploadedNpmPackage: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedNpmPackage], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedNpmPackage]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedNpmPackage]) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage]) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact]) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage]) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret]) => Option(fun)
		given putListSchemaContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret: Conversion[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret], Option[List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret]]] = (fun: List[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret]) => Option(fun)
		given putSchemaCloudStorageLocation: Conversion[Schema.CloudStorageLocation, Option[Schema.CloudStorageLocation]] = (fun: Schema.CloudStorageLocation) => Option(fun)
		given putSchemaGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation: Conversion[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation, Option[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation]] = (fun: Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation) => Option(fun)
		given putSchemaGrafeasV1SlsaProvenanceZeroTwoSlsaMetadata: Conversion[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata, Option[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata]] = (fun: Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata) => Option(fun)
		given putSchemaGrafeasV1SlsaProvenanceZeroTwoSlsaBuilder: Conversion[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder, Option[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder]] = (fun: Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder) => Option(fun)
		given putListSchemaGrafeasV1SlsaProvenanceZeroTwoSlsaMaterial: Conversion[List[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial], Option[List[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial]]] = (fun: List[Schema.GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial]) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildStepStatusEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep.StatusEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep.StatusEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildStep.StatusEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResultDecisionEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.DecisionEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.DecisionEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.DecisionEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1DeveloperConnectConfig: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1DeveloperConnectConfig, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1DeveloperConnectConfig]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1DeveloperConnectConfig) => Option(fun)
		given putSchemaExpr: Conversion[Schema.Expr, Option[Schema.Expr]] = (fun: Schema.Expr) => Option(fun)
		given putListSchemaMaterial: Conversion[List[Schema.Material], Option[List[Schema.Material]]] = (fun: List[Schema.Material]) => Option(fun)
		given putSchemaSlsaMetadata: Conversion[Schema.SlsaMetadata, Option[Schema.SlsaMetadata]] = (fun: Schema.SlsaMetadata) => Option(fun)
		given putSchemaSlsaBuilder: Conversion[Schema.SlsaBuilder, Option[Schema.SlsaBuilder]] = (fun: Schema.SlsaBuilder) => Option(fun)
		given putSchemaSlsaRecipe: Conversion[Schema.SlsaRecipe, Option[Schema.SlsaRecipe]] = (fun: Schema.SlsaRecipe) => Option(fun)
		given putSchemaComplianceVersion: Conversion[Schema.ComplianceVersion, Option[Schema.ComplianceVersion]] = (fun: Schema.ComplianceVersion) => Option(fun)
		given putListSchemaNonCompliantFile: Conversion[List[Schema.NonCompliantFile], Option[List[Schema.NonCompliantFile]]] = (fun: List[Schema.NonCompliantFile]) => Option(fun)
		given putSchemaGetPolicyOptions: Conversion[Schema.GetPolicyOptions, Option[Schema.GetPolicyOptions]] = (fun: Schema.GetPolicyOptions) => Option(fun)
		given putSchemaSlsaCompleteness: Conversion[Schema.SlsaCompleteness, Option[Schema.SlsaCompleteness]] = (fun: Schema.SlsaCompleteness) => Option(fun)
		given putListSchemaDistribution: Conversion[List[Schema.Distribution], Option[List[Schema.Distribution]]] = (fun: List[Schema.Distribution]) => Option(fun)
		given putListSchemaDigest: Conversion[List[Schema.Digest], Option[List[Schema.Digest]]] = (fun: List[Schema.Digest]) => Option(fun)
		given putSchemaPackageNoteArchitectureEnum: Conversion[Schema.PackageNote.ArchitectureEnum, Option[Schema.PackageNote.ArchitectureEnum]] = (fun: Schema.PackageNote.ArchitectureEnum) => Option(fun)
		given putListSchemaKnowledgeBase: Conversion[List[Schema.KnowledgeBase], Option[List[Schema.KnowledgeBase]]] = (fun: List[Schema.KnowledgeBase]) => Option(fun)
		given putSchemaSlsaProvenanceV1: Conversion[Schema.SlsaProvenanceV1, Option[Schema.SlsaProvenanceV1]] = (fun: Schema.SlsaProvenanceV1) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarningPriorityEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.PriorityEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.PriorityEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.PriorityEnum) => Option(fun)
		given putMapStringSchemaFileHashes: Conversion[Map[String, Schema.FileHashes], Option[Map[String, Schema.FileHashes]]] = (fun: Map[String, Schema.FileHashes]) => Option(fun)
		given putListSchemaSourceContext: Conversion[List[Schema.SourceContext], Option[List[Schema.SourceContext]]] = (fun: List[Schema.SourceContext]) => Option(fun)
		given putSchemaSourceContext: Conversion[Schema.SourceContext, Option[Schema.SourceContext]] = (fun: Schema.SourceContext) => Option(fun)
		given putSchemaMetadata: Conversion[Schema.Metadata, Option[Schema.Metadata]] = (fun: Schema.Metadata) => Option(fun)
		given putSchemaBuilderConfig: Conversion[Schema.BuilderConfig, Option[Schema.BuilderConfig]] = (fun: Schema.BuilderConfig) => Option(fun)
		given putSchemaRecipe: Conversion[Schema.Recipe, Option[Schema.Recipe]] = (fun: Schema.Recipe) => Option(fun)
		given putSchemaImageNote: Conversion[Schema.ImageNote, Option[Schema.ImageNote]] = (fun: Schema.ImageNote) => Option(fun)
		given putSchemaVulnerabilityAssessmentNote: Conversion[Schema.VulnerabilityAssessmentNote, Option[Schema.VulnerabilityAssessmentNote]] = (fun: Schema.VulnerabilityAssessmentNote) => Option(fun)
		given putSchemaComplianceNote: Conversion[Schema.ComplianceNote, Option[Schema.ComplianceNote]] = (fun: Schema.ComplianceNote) => Option(fun)
		given putSchemaAttestationNote: Conversion[Schema.AttestationNote, Option[Schema.AttestationNote]] = (fun: Schema.AttestationNote) => Option(fun)
		given putSchemaUpgradeNote: Conversion[Schema.UpgradeNote, Option[Schema.UpgradeNote]] = (fun: Schema.UpgradeNote) => Option(fun)
		given putSchemaSBOMReferenceNote: Conversion[Schema.SBOMReferenceNote, Option[Schema.SBOMReferenceNote]] = (fun: Schema.SBOMReferenceNote) => Option(fun)
		given putSchemaNoteKindEnum: Conversion[Schema.Note.KindEnum, Option[Schema.Note.KindEnum]] = (fun: Schema.Note.KindEnum) => Option(fun)
		given putSchemaVulnerabilityNote: Conversion[Schema.VulnerabilityNote, Option[Schema.VulnerabilityNote]] = (fun: Schema.VulnerabilityNote) => Option(fun)
		given putSchemaDiscoveryNote: Conversion[Schema.DiscoveryNote, Option[Schema.DiscoveryNote]] = (fun: Schema.DiscoveryNote) => Option(fun)
		given putSchemaDeploymentNote: Conversion[Schema.DeploymentNote, Option[Schema.DeploymentNote]] = (fun: Schema.DeploymentNote) => Option(fun)
		given putSchemaBuildNote: Conversion[Schema.BuildNote, Option[Schema.BuildNote]] = (fun: Schema.BuildNote) => Option(fun)
		given putSchemaPackageNote: Conversion[Schema.PackageNote, Option[Schema.PackageNote]] = (fun: Schema.PackageNote) => Option(fun)
		given putSchemaDSSEAttestationNote: Conversion[Schema.DSSEAttestationNote, Option[Schema.DSSEAttestationNote]] = (fun: Schema.DSSEAttestationNote) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putListSchemaCommand: Conversion[List[Schema.Command], Option[List[Schema.Command]]] = (fun: List[Schema.Command]) => Option(fun)
		given putSchemaSource: Conversion[Schema.Source, Option[Schema.Source]] = (fun: Schema.Source) => Option(fun)
		given putListSchemaArtifact: Conversion[List[Schema.Artifact], Option[List[Schema.Artifact]]] = (fun: List[Schema.Artifact]) => Option(fun)
		given putSchemaCompleteness: Conversion[Schema.Completeness, Option[Schema.Completeness]] = (fun: Schema.Completeness) => Option(fun)
		given putSchemaEnvelope: Conversion[Schema.Envelope, Option[Schema.Envelope]] = (fun: Schema.Envelope) => Option(fun)
		given putSchemaFixableTotalByDigestSeverityEnum: Conversion[Schema.FixableTotalByDigest.SeverityEnum, Option[Schema.FixableTotalByDigest.SeverityEnum]] = (fun: Schema.FixableTotalByDigest.SeverityEnum) => Option(fun)
		given putMapStringSchemaNote: Conversion[Map[String, Schema.Note], Option[Map[String, Schema.Note]]] = (fun: Map[String, Schema.Note]) => Option(fun)
		given putSchemaUpgradeDistribution: Conversion[Schema.UpgradeDistribution, Option[Schema.UpgradeDistribution]] = (fun: Schema.UpgradeDistribution) => Option(fun)
		given putListSchemaGrafeasV1FileLocation: Conversion[List[Schema.GrafeasV1FileLocation], Option[List[Schema.GrafeasV1FileLocation]]] = (fun: List[Schema.GrafeasV1FileLocation]) => Option(fun)
		given putSchemaPackageIssueEffectiveSeverityEnum: Conversion[Schema.PackageIssue.EffectiveSeverityEnum, Option[Schema.PackageIssue.EffectiveSeverityEnum]] = (fun: Schema.PackageIssue.EffectiveSeverityEnum) => Option(fun)
		given putSchemaPublisher: Conversion[Schema.Publisher, Option[Schema.Publisher]] = (fun: Schema.Publisher) => Option(fun)
		given putSchemaAssessment: Conversion[Schema.Assessment, Option[Schema.Assessment]] = (fun: Schema.Assessment) => Option(fun)
		given putSchemaProduct: Conversion[Schema.Product, Option[Schema.Product]] = (fun: Schema.Product) => Option(fun)
		given putListSchemaDetail: Conversion[List[Schema.Detail], Option[List[Schema.Detail]]] = (fun: List[Schema.Detail]) => Option(fun)
		given putSchemaVulnerabilityNoteCvssVersionEnum: Conversion[Schema.VulnerabilityNote.CvssVersionEnum, Option[Schema.VulnerabilityNote.CvssVersionEnum]] = (fun: Schema.VulnerabilityNote.CvssVersionEnum) => Option(fun)
		given putSchemaVulnerabilityNoteSeverityEnum: Conversion[Schema.VulnerabilityNote.SeverityEnum, Option[Schema.VulnerabilityNote.SeverityEnum]] = (fun: Schema.VulnerabilityNote.SeverityEnum) => Option(fun)
		given putSchemaCVSSv3: Conversion[Schema.CVSSv3, Option[Schema.CVSSv3]] = (fun: Schema.CVSSv3) => Option(fun)
		given putListSchemaWindowsDetail: Conversion[List[Schema.WindowsDetail], Option[List[Schema.WindowsDetail]]] = (fun: List[Schema.WindowsDetail]) => Option(fun)
		given putSchemaDiscoveryOccurrence: Conversion[Schema.DiscoveryOccurrence, Option[Schema.DiscoveryOccurrence]] = (fun: Schema.DiscoveryOccurrence) => Option(fun)
		given putSchemaUpgradeOccurrence: Conversion[Schema.UpgradeOccurrence, Option[Schema.UpgradeOccurrence]] = (fun: Schema.UpgradeOccurrence) => Option(fun)
		given putSchemaAttestationOccurrence: Conversion[Schema.AttestationOccurrence, Option[Schema.AttestationOccurrence]] = (fun: Schema.AttestationOccurrence) => Option(fun)
		given putSchemaComplianceOccurrence: Conversion[Schema.ComplianceOccurrence, Option[Schema.ComplianceOccurrence]] = (fun: Schema.ComplianceOccurrence) => Option(fun)
		given putSchemaDeploymentOccurrence: Conversion[Schema.DeploymentOccurrence, Option[Schema.DeploymentOccurrence]] = (fun: Schema.DeploymentOccurrence) => Option(fun)
		given putSchemaVulnerabilityOccurrence: Conversion[Schema.VulnerabilityOccurrence, Option[Schema.VulnerabilityOccurrence]] = (fun: Schema.VulnerabilityOccurrence) => Option(fun)
		given putSchemaOccurrenceKindEnum: Conversion[Schema.Occurrence.KindEnum, Option[Schema.Occurrence.KindEnum]] = (fun: Schema.Occurrence.KindEnum) => Option(fun)
		given putSchemaSBOMReferenceOccurrence: Conversion[Schema.SBOMReferenceOccurrence, Option[Schema.SBOMReferenceOccurrence]] = (fun: Schema.SBOMReferenceOccurrence) => Option(fun)
		given putSchemaBuildOccurrence: Conversion[Schema.BuildOccurrence, Option[Schema.BuildOccurrence]] = (fun: Schema.BuildOccurrence) => Option(fun)
		given putSchemaPackageOccurrence: Conversion[Schema.PackageOccurrence, Option[Schema.PackageOccurrence]] = (fun: Schema.PackageOccurrence) => Option(fun)
		given putSchemaDSSEAttestationOccurrence: Conversion[Schema.DSSEAttestationOccurrence, Option[Schema.DSSEAttestationOccurrence]] = (fun: Schema.DSSEAttestationOccurrence) => Option(fun)
		given putSchemaImageOccurrence: Conversion[Schema.ImageOccurrence, Option[Schema.ImageOccurrence]] = (fun: Schema.ImageOccurrence) => Option(fun)
		given putSchemaHint: Conversion[Schema.Hint, Option[Schema.Hint]] = (fun: Schema.Hint) => Option(fun)
		given putSchemaCisBenchmarkSeverityEnum: Conversion[Schema.CisBenchmark.SeverityEnum, Option[Schema.CisBenchmark.SeverityEnum]] = (fun: Schema.CisBenchmark.SeverityEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1BuildApprovalStateEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval.StateEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval.StateEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1BuildApproval.StateEnum) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalConfig) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult) => Option(fun)
		given putSchemaContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceSourceFetcherEnum: Conversion[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource.SourceFetcherEnum, Option[Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource.SourceFetcherEnum]] = (fun: Schema.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource.SourceFetcherEnum) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
