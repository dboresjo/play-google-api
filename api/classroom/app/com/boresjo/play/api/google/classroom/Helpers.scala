package com.boresjo.play.api.google.classroom

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putSchemaCourseCourseStateEnum: Conversion[Schema.Course.CourseStateEnum, Option[Schema.Course.CourseStateEnum]] = (fun: Schema.Course.CourseStateEnum) => Option(fun)
		given putSchemaDriveFolder: Conversion[Schema.DriveFolder, Option[Schema.DriveFolder]] = (fun: Schema.DriveFolder) => Option(fun)
		given putListSchemaCourseMaterialSet: Conversion[List[Schema.CourseMaterialSet], Option[List[Schema.CourseMaterialSet]]] = (fun: List[Schema.CourseMaterialSet]) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaGradebookSettings: Conversion[Schema.GradebookSettings, Option[Schema.GradebookSettings]] = (fun: Schema.GradebookSettings) => Option(fun)
		given putListSchemaCourseMaterial: Conversion[List[Schema.CourseMaterial], Option[List[Schema.CourseMaterial]]] = (fun: List[Schema.CourseMaterial]) => Option(fun)
		given putSchemaDriveFile: Conversion[Schema.DriveFile, Option[Schema.DriveFile]] = (fun: Schema.DriveFile) => Option(fun)
		given putSchemaYouTubeVideo: Conversion[Schema.YouTubeVideo, Option[Schema.YouTubeVideo]] = (fun: Schema.YouTubeVideo) => Option(fun)
		given putSchemaLink: Conversion[Schema.Link, Option[Schema.Link]] = (fun: Schema.Link) => Option(fun)
		given putSchemaForm: Conversion[Schema.Form, Option[Schema.Form]] = (fun: Schema.Form) => Option(fun)
		given putSchemaGradebookSettingsCalculationTypeEnum: Conversion[Schema.GradebookSettings.CalculationTypeEnum, Option[Schema.GradebookSettings.CalculationTypeEnum]] = (fun: Schema.GradebookSettings.CalculationTypeEnum) => Option(fun)
		given putSchemaGradebookSettingsDisplaySettingEnum: Conversion[Schema.GradebookSettings.DisplaySettingEnum, Option[Schema.GradebookSettings.DisplaySettingEnum]] = (fun: Schema.GradebookSettings.DisplaySettingEnum) => Option(fun)
		given putListSchemaGradeCategory: Conversion[List[Schema.GradeCategory], Option[List[Schema.GradeCategory]]] = (fun: List[Schema.GradeCategory]) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListSchemaCourse: Conversion[List[Schema.Course], Option[List[Schema.Course]]] = (fun: List[Schema.Course]) => Option(fun)
		given putListSchemaCourseAlias: Conversion[List[Schema.CourseAlias], Option[List[Schema.CourseAlias]]] = (fun: List[Schema.CourseAlias]) => Option(fun)
		given putListSchemaMaterial: Conversion[List[Schema.Material], Option[List[Schema.Material]]] = (fun: List[Schema.Material]) => Option(fun)
		given putSchemaCourseWorkStateEnum: Conversion[Schema.CourseWork.StateEnum, Option[Schema.CourseWork.StateEnum]] = (fun: Schema.CourseWork.StateEnum) => Option(fun)
		given putSchemaDate: Conversion[Schema.Date, Option[Schema.Date]] = (fun: Schema.Date) => Option(fun)
		given putSchemaTimeOfDay: Conversion[Schema.TimeOfDay, Option[Schema.TimeOfDay]] = (fun: Schema.TimeOfDay) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaCourseWorkWorkTypeEnum: Conversion[Schema.CourseWork.WorkTypeEnum, Option[Schema.CourseWork.WorkTypeEnum]] = (fun: Schema.CourseWork.WorkTypeEnum) => Option(fun)
		given putSchemaCourseWorkAssigneeModeEnum: Conversion[Schema.CourseWork.AssigneeModeEnum, Option[Schema.CourseWork.AssigneeModeEnum]] = (fun: Schema.CourseWork.AssigneeModeEnum) => Option(fun)
		given putSchemaIndividualStudentsOptions: Conversion[Schema.IndividualStudentsOptions, Option[Schema.IndividualStudentsOptions]] = (fun: Schema.IndividualStudentsOptions) => Option(fun)
		given putSchemaCourseWorkSubmissionModificationModeEnum: Conversion[Schema.CourseWork.SubmissionModificationModeEnum, Option[Schema.CourseWork.SubmissionModificationModeEnum]] = (fun: Schema.CourseWork.SubmissionModificationModeEnum) => Option(fun)
		given putSchemaAssignment: Conversion[Schema.Assignment, Option[Schema.Assignment]] = (fun: Schema.Assignment) => Option(fun)
		given putSchemaMultipleChoiceQuestion: Conversion[Schema.MultipleChoiceQuestion, Option[Schema.MultipleChoiceQuestion]] = (fun: Schema.MultipleChoiceQuestion) => Option(fun)
		given putSchemaGradeCategory: Conversion[Schema.GradeCategory, Option[Schema.GradeCategory]] = (fun: Schema.GradeCategory) => Option(fun)
		given putSchemaSharedDriveFile: Conversion[Schema.SharedDriveFile, Option[Schema.SharedDriveFile]] = (fun: Schema.SharedDriveFile) => Option(fun)
		given putSchemaSharedDriveFileShareModeEnum: Conversion[Schema.SharedDriveFile.ShareModeEnum, Option[Schema.SharedDriveFile.ShareModeEnum]] = (fun: Schema.SharedDriveFile.ShareModeEnum) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putListSchemaCourseWork: Conversion[List[Schema.CourseWork], Option[List[Schema.CourseWork]]] = (fun: List[Schema.CourseWork]) => Option(fun)
		given putSchemaAnnouncementStateEnum: Conversion[Schema.Announcement.StateEnum, Option[Schema.Announcement.StateEnum]] = (fun: Schema.Announcement.StateEnum) => Option(fun)
		given putSchemaAnnouncementAssigneeModeEnum: Conversion[Schema.Announcement.AssigneeModeEnum, Option[Schema.Announcement.AssigneeModeEnum]] = (fun: Schema.Announcement.AssigneeModeEnum) => Option(fun)
		given putListSchemaAnnouncement: Conversion[List[Schema.Announcement], Option[List[Schema.Announcement]]] = (fun: List[Schema.Announcement]) => Option(fun)
		given putSchemaCourseWorkMaterialStateEnum: Conversion[Schema.CourseWorkMaterial.StateEnum, Option[Schema.CourseWorkMaterial.StateEnum]] = (fun: Schema.CourseWorkMaterial.StateEnum) => Option(fun)
		given putSchemaCourseWorkMaterialAssigneeModeEnum: Conversion[Schema.CourseWorkMaterial.AssigneeModeEnum, Option[Schema.CourseWorkMaterial.AssigneeModeEnum]] = (fun: Schema.CourseWorkMaterial.AssigneeModeEnum) => Option(fun)
		given putListSchemaCourseWorkMaterial: Conversion[List[Schema.CourseWorkMaterial], Option[List[Schema.CourseWorkMaterial]]] = (fun: List[Schema.CourseWorkMaterial]) => Option(fun)
		given putSchemaStudentSubmissionStateEnum: Conversion[Schema.StudentSubmission.StateEnum, Option[Schema.StudentSubmission.StateEnum]] = (fun: Schema.StudentSubmission.StateEnum) => Option(fun)
		given putSchemaStudentSubmissionCourseWorkTypeEnum: Conversion[Schema.StudentSubmission.CourseWorkTypeEnum, Option[Schema.StudentSubmission.CourseWorkTypeEnum]] = (fun: Schema.StudentSubmission.CourseWorkTypeEnum) => Option(fun)
		given putSchemaAssignmentSubmission: Conversion[Schema.AssignmentSubmission, Option[Schema.AssignmentSubmission]] = (fun: Schema.AssignmentSubmission) => Option(fun)
		given putSchemaShortAnswerSubmission: Conversion[Schema.ShortAnswerSubmission, Option[Schema.ShortAnswerSubmission]] = (fun: Schema.ShortAnswerSubmission) => Option(fun)
		given putSchemaMultipleChoiceSubmission: Conversion[Schema.MultipleChoiceSubmission, Option[Schema.MultipleChoiceSubmission]] = (fun: Schema.MultipleChoiceSubmission) => Option(fun)
		given putListSchemaSubmissionHistory: Conversion[List[Schema.SubmissionHistory], Option[List[Schema.SubmissionHistory]]] = (fun: List[Schema.SubmissionHistory]) => Option(fun)
		given putListSchemaAttachment: Conversion[List[Schema.Attachment], Option[List[Schema.Attachment]]] = (fun: List[Schema.Attachment]) => Option(fun)
		given putSchemaStateHistory: Conversion[Schema.StateHistory, Option[Schema.StateHistory]] = (fun: Schema.StateHistory) => Option(fun)
		given putSchemaGradeHistory: Conversion[Schema.GradeHistory, Option[Schema.GradeHistory]] = (fun: Schema.GradeHistory) => Option(fun)
		given putSchemaStateHistoryStateEnum: Conversion[Schema.StateHistory.StateEnum, Option[Schema.StateHistory.StateEnum]] = (fun: Schema.StateHistory.StateEnum) => Option(fun)
		given putSchemaGradeHistoryGradeChangeTypeEnum: Conversion[Schema.GradeHistory.GradeChangeTypeEnum, Option[Schema.GradeHistory.GradeChangeTypeEnum]] = (fun: Schema.GradeHistory.GradeChangeTypeEnum) => Option(fun)
		given putListSchemaStudentSubmission: Conversion[List[Schema.StudentSubmission], Option[List[Schema.StudentSubmission]]] = (fun: List[Schema.StudentSubmission]) => Option(fun)
		given putSchemaModifyCourseWorkAssigneesRequestAssigneeModeEnum: Conversion[Schema.ModifyCourseWorkAssigneesRequest.AssigneeModeEnum, Option[Schema.ModifyCourseWorkAssigneesRequest.AssigneeModeEnum]] = (fun: Schema.ModifyCourseWorkAssigneesRequest.AssigneeModeEnum) => Option(fun)
		given putSchemaModifyIndividualStudentsOptions: Conversion[Schema.ModifyIndividualStudentsOptions, Option[Schema.ModifyIndividualStudentsOptions]] = (fun: Schema.ModifyIndividualStudentsOptions) => Option(fun)
		given putSchemaModifyAnnouncementAssigneesRequestAssigneeModeEnum: Conversion[Schema.ModifyAnnouncementAssigneesRequest.AssigneeModeEnum, Option[Schema.ModifyAnnouncementAssigneesRequest.AssigneeModeEnum]] = (fun: Schema.ModifyAnnouncementAssigneesRequest.AssigneeModeEnum) => Option(fun)
		given putListSchemaTopic: Conversion[List[Schema.Topic], Option[List[Schema.Topic]]] = (fun: List[Schema.Topic]) => Option(fun)
		given putSchemaStudentContext: Conversion[Schema.StudentContext, Option[Schema.StudentContext]] = (fun: Schema.StudentContext) => Option(fun)
		given putSchemaTeacherContext: Conversion[Schema.TeacherContext, Option[Schema.TeacherContext]] = (fun: Schema.TeacherContext) => Option(fun)
		given putSchemaEmbedUri: Conversion[Schema.EmbedUri, Option[Schema.EmbedUri]] = (fun: Schema.EmbedUri) => Option(fun)
		given putListSchemaCopyHistory: Conversion[List[Schema.CopyHistory], Option[List[Schema.CopyHistory]]] = (fun: List[Schema.CopyHistory]) => Option(fun)
		given putListSchemaAddOnAttachment: Conversion[List[Schema.AddOnAttachment], Option[List[Schema.AddOnAttachment]]] = (fun: List[Schema.AddOnAttachment]) => Option(fun)
		given putSchemaAddOnAttachmentStudentSubmissionPostSubmissionStateEnum: Conversion[Schema.AddOnAttachmentStudentSubmission.PostSubmissionStateEnum, Option[Schema.AddOnAttachmentStudentSubmission.PostSubmissionStateEnum]] = (fun: Schema.AddOnAttachmentStudentSubmission.PostSubmissionStateEnum) => Option(fun)
		given putListSchemaGuardianInvitation: Conversion[List[Schema.GuardianInvitation], Option[List[Schema.GuardianInvitation]]] = (fun: List[Schema.GuardianInvitation]) => Option(fun)
		given putSchemaGuardianInvitationStateEnum: Conversion[Schema.GuardianInvitation.StateEnum, Option[Schema.GuardianInvitation.StateEnum]] = (fun: Schema.GuardianInvitation.StateEnum) => Option(fun)
		given putSchemaName: Conversion[Schema.Name, Option[Schema.Name]] = (fun: Schema.Name) => Option(fun)
		given putListSchemaGlobalPermission: Conversion[List[Schema.GlobalPermission], Option[List[Schema.GlobalPermission]]] = (fun: List[Schema.GlobalPermission]) => Option(fun)
		given putSchemaGlobalPermissionPermissionEnum: Conversion[Schema.GlobalPermission.PermissionEnum, Option[Schema.GlobalPermission.PermissionEnum]] = (fun: Schema.GlobalPermission.PermissionEnum) => Option(fun)
		given putSchemaUserProfile: Conversion[Schema.UserProfile, Option[Schema.UserProfile]] = (fun: Schema.UserProfile) => Option(fun)
		given putListSchemaTeacher: Conversion[List[Schema.Teacher], Option[List[Schema.Teacher]]] = (fun: List[Schema.Teacher]) => Option(fun)
		given putListSchemaStudent: Conversion[List[Schema.Student], Option[List[Schema.Student]]] = (fun: List[Schema.Student]) => Option(fun)
		given putListSchemaGuardian: Conversion[List[Schema.Guardian], Option[List[Schema.Guardian]]] = (fun: List[Schema.Guardian]) => Option(fun)
		given putSchemaInvitationRoleEnum: Conversion[Schema.Invitation.RoleEnum, Option[Schema.Invitation.RoleEnum]] = (fun: Schema.Invitation.RoleEnum) => Option(fun)
		given putListSchemaInvitation: Conversion[List[Schema.Invitation], Option[List[Schema.Invitation]]] = (fun: List[Schema.Invitation]) => Option(fun)
		given putSchemaFeed: Conversion[Schema.Feed, Option[Schema.Feed]] = (fun: Schema.Feed) => Option(fun)
		given putSchemaCloudPubsubTopic: Conversion[Schema.CloudPubsubTopic, Option[Schema.CloudPubsubTopic]] = (fun: Schema.CloudPubsubTopic) => Option(fun)
		given putSchemaFeedFeedTypeEnum: Conversion[Schema.Feed.FeedTypeEnum, Option[Schema.Feed.FeedTypeEnum]] = (fun: Schema.Feed.FeedTypeEnum) => Option(fun)
		given putSchemaCourseRosterChangesInfo: Conversion[Schema.CourseRosterChangesInfo, Option[Schema.CourseRosterChangesInfo]] = (fun: Schema.CourseRosterChangesInfo) => Option(fun)
		given putSchemaCourseWorkChangesInfo: Conversion[Schema.CourseWorkChangesInfo, Option[Schema.CourseWorkChangesInfo]] = (fun: Schema.CourseWorkChangesInfo) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
