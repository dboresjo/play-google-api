package com.boresjo.play.api.google.migrationcenter

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaOperation: Conversion[List[Schema.Operation], Option[List[Schema.Operation]]] = (fun: List[Schema.Operation]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putListSchemaAsset: Conversion[List[Schema.Asset], Option[List[Schema.Asset]]] = (fun: List[Schema.Asset]) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putSchemaMachineDetails: Conversion[Schema.MachineDetails, Option[Schema.MachineDetails]] = (fun: Schema.MachineDetails) => Option(fun)
		given putSchemaInsightList: Conversion[Schema.InsightList, Option[Schema.InsightList]] = (fun: Schema.InsightList) => Option(fun)
		given putSchemaAssetPerformanceData: Conversion[Schema.AssetPerformanceData, Option[Schema.AssetPerformanceData]] = (fun: Schema.AssetPerformanceData) => Option(fun)
		given putSchemaMachineDetailsPowerStateEnum: Conversion[Schema.MachineDetails.PowerStateEnum, Option[Schema.MachineDetails.PowerStateEnum]] = (fun: Schema.MachineDetails.PowerStateEnum) => Option(fun)
		given putSchemaMachineArchitectureDetails: Conversion[Schema.MachineArchitectureDetails, Option[Schema.MachineArchitectureDetails]] = (fun: Schema.MachineArchitectureDetails) => Option(fun)
		given putSchemaGuestOsDetails: Conversion[Schema.GuestOsDetails, Option[Schema.GuestOsDetails]] = (fun: Schema.GuestOsDetails) => Option(fun)
		given putSchemaMachineNetworkDetails: Conversion[Schema.MachineNetworkDetails, Option[Schema.MachineNetworkDetails]] = (fun: Schema.MachineNetworkDetails) => Option(fun)
		given putSchemaMachineDiskDetails: Conversion[Schema.MachineDiskDetails, Option[Schema.MachineDiskDetails]] = (fun: Schema.MachineDiskDetails) => Option(fun)
		given putSchemaPlatformDetails: Conversion[Schema.PlatformDetails, Option[Schema.PlatformDetails]] = (fun: Schema.PlatformDetails) => Option(fun)
		given putSchemaBiosDetails: Conversion[Schema.BiosDetails, Option[Schema.BiosDetails]] = (fun: Schema.BiosDetails) => Option(fun)
		given putSchemaMachineArchitectureDetailsFirmwareTypeEnum: Conversion[Schema.MachineArchitectureDetails.FirmwareTypeEnum, Option[Schema.MachineArchitectureDetails.FirmwareTypeEnum]] = (fun: Schema.MachineArchitectureDetails.FirmwareTypeEnum) => Option(fun)
		given putSchemaMachineArchitectureDetailsHyperthreadingEnum: Conversion[Schema.MachineArchitectureDetails.HyperthreadingEnum, Option[Schema.MachineArchitectureDetails.HyperthreadingEnum]] = (fun: Schema.MachineArchitectureDetails.HyperthreadingEnum) => Option(fun)
		given putSchemaDate: Conversion[Schema.Date, Option[Schema.Date]] = (fun: Schema.Date) => Option(fun)
		given putSchemaGuestOsDetailsFamilyEnum: Conversion[Schema.GuestOsDetails.FamilyEnum, Option[Schema.GuestOsDetails.FamilyEnum]] = (fun: Schema.GuestOsDetails.FamilyEnum) => Option(fun)
		given putSchemaGuestConfigDetails: Conversion[Schema.GuestConfigDetails, Option[Schema.GuestConfigDetails]] = (fun: Schema.GuestConfigDetails) => Option(fun)
		given putSchemaGuestRuntimeDetails: Conversion[Schema.GuestRuntimeDetails, Option[Schema.GuestRuntimeDetails]] = (fun: Schema.GuestRuntimeDetails) => Option(fun)
		given putSchemaFstabEntryList: Conversion[Schema.FstabEntryList, Option[Schema.FstabEntryList]] = (fun: Schema.FstabEntryList) => Option(fun)
		given putSchemaHostsEntryList: Conversion[Schema.HostsEntryList, Option[Schema.HostsEntryList]] = (fun: Schema.HostsEntryList) => Option(fun)
		given putSchemaNfsExportList: Conversion[Schema.NfsExportList, Option[Schema.NfsExportList]] = (fun: Schema.NfsExportList) => Option(fun)
		given putSchemaGuestConfigDetailsSelinuxModeEnum: Conversion[Schema.GuestConfigDetails.SelinuxModeEnum, Option[Schema.GuestConfigDetails.SelinuxModeEnum]] = (fun: Schema.GuestConfigDetails.SelinuxModeEnum) => Option(fun)
		given putListSchemaFstabEntry: Conversion[List[Schema.FstabEntry], Option[List[Schema.FstabEntry]]] = (fun: List[Schema.FstabEntry]) => Option(fun)
		given putListSchemaHostsEntry: Conversion[List[Schema.HostsEntry], Option[List[Schema.HostsEntry]]] = (fun: List[Schema.HostsEntry]) => Option(fun)
		given putListSchemaNfsExport: Conversion[List[Schema.NfsExport], Option[List[Schema.NfsExport]]] = (fun: List[Schema.NfsExport]) => Option(fun)
		given putSchemaRunningServiceList: Conversion[Schema.RunningServiceList, Option[Schema.RunningServiceList]] = (fun: Schema.RunningServiceList) => Option(fun)
		given putSchemaRunningProcessList: Conversion[Schema.RunningProcessList, Option[Schema.RunningProcessList]] = (fun: Schema.RunningProcessList) => Option(fun)
		given putSchemaRuntimeNetworkInfo: Conversion[Schema.RuntimeNetworkInfo, Option[Schema.RuntimeNetworkInfo]] = (fun: Schema.RuntimeNetworkInfo) => Option(fun)
		given putSchemaGuestInstalledApplicationList: Conversion[Schema.GuestInstalledApplicationList, Option[Schema.GuestInstalledApplicationList]] = (fun: Schema.GuestInstalledApplicationList) => Option(fun)
		given putSchemaOpenFileList: Conversion[Schema.OpenFileList, Option[Schema.OpenFileList]] = (fun: Schema.OpenFileList) => Option(fun)
		given putListSchemaRunningService: Conversion[List[Schema.RunningService], Option[List[Schema.RunningService]]] = (fun: List[Schema.RunningService]) => Option(fun)
		given putSchemaRunningServiceStateEnum: Conversion[Schema.RunningService.StateEnum, Option[Schema.RunningService.StateEnum]] = (fun: Schema.RunningService.StateEnum) => Option(fun)
		given putSchemaRunningServiceStartModeEnum: Conversion[Schema.RunningService.StartModeEnum, Option[Schema.RunningService.StartModeEnum]] = (fun: Schema.RunningService.StartModeEnum) => Option(fun)
		given putListSchemaRunningProcess: Conversion[List[Schema.RunningProcess], Option[List[Schema.RunningProcess]]] = (fun: List[Schema.RunningProcess]) => Option(fun)
		given putSchemaNetworkConnectionList: Conversion[Schema.NetworkConnectionList, Option[Schema.NetworkConnectionList]] = (fun: Schema.NetworkConnectionList) => Option(fun)
		given putListSchemaNetworkConnection: Conversion[List[Schema.NetworkConnection], Option[List[Schema.NetworkConnection]]] = (fun: List[Schema.NetworkConnection]) => Option(fun)
		given putSchemaNetworkConnectionStateEnum: Conversion[Schema.NetworkConnection.StateEnum, Option[Schema.NetworkConnection.StateEnum]] = (fun: Schema.NetworkConnection.StateEnum) => Option(fun)
		given putListSchemaGuestInstalledApplication: Conversion[List[Schema.GuestInstalledApplication], Option[List[Schema.GuestInstalledApplication]]] = (fun: List[Schema.GuestInstalledApplication]) => Option(fun)
		given putListSchemaOpenFileDetails: Conversion[List[Schema.OpenFileDetails], Option[List[Schema.OpenFileDetails]]] = (fun: List[Schema.OpenFileDetails]) => Option(fun)
		given putSchemaNetworkAdapterList: Conversion[Schema.NetworkAdapterList, Option[Schema.NetworkAdapterList]] = (fun: Schema.NetworkAdapterList) => Option(fun)
		given putListSchemaNetworkAdapterDetails: Conversion[List[Schema.NetworkAdapterDetails], Option[List[Schema.NetworkAdapterDetails]]] = (fun: List[Schema.NetworkAdapterDetails]) => Option(fun)
		given putSchemaNetworkAddressList: Conversion[Schema.NetworkAddressList, Option[Schema.NetworkAddressList]] = (fun: Schema.NetworkAddressList) => Option(fun)
		given putListSchemaNetworkAddress: Conversion[List[Schema.NetworkAddress], Option[List[Schema.NetworkAddress]]] = (fun: List[Schema.NetworkAddress]) => Option(fun)
		given putSchemaNetworkAddressAssignmentEnum: Conversion[Schema.NetworkAddress.AssignmentEnum, Option[Schema.NetworkAddress.AssignmentEnum]] = (fun: Schema.NetworkAddress.AssignmentEnum) => Option(fun)
		given putSchemaDiskEntryList: Conversion[Schema.DiskEntryList, Option[Schema.DiskEntryList]] = (fun: Schema.DiskEntryList) => Option(fun)
		given putListSchemaDiskEntry: Conversion[List[Schema.DiskEntry], Option[List[Schema.DiskEntry]]] = (fun: List[Schema.DiskEntry]) => Option(fun)
		given putSchemaDiskEntryInterfaceTypeEnum: Conversion[Schema.DiskEntry.InterfaceTypeEnum, Option[Schema.DiskEntry.InterfaceTypeEnum]] = (fun: Schema.DiskEntry.InterfaceTypeEnum) => Option(fun)
		given putSchemaDiskPartitionList: Conversion[Schema.DiskPartitionList, Option[Schema.DiskPartitionList]] = (fun: Schema.DiskPartitionList) => Option(fun)
		given putSchemaVmwareDiskConfig: Conversion[Schema.VmwareDiskConfig, Option[Schema.VmwareDiskConfig]] = (fun: Schema.VmwareDiskConfig) => Option(fun)
		given putListSchemaDiskPartition: Conversion[List[Schema.DiskPartition], Option[List[Schema.DiskPartition]]] = (fun: List[Schema.DiskPartition]) => Option(fun)
		given putSchemaVmwareDiskConfigBackingTypeEnum: Conversion[Schema.VmwareDiskConfig.BackingTypeEnum, Option[Schema.VmwareDiskConfig.BackingTypeEnum]] = (fun: Schema.VmwareDiskConfig.BackingTypeEnum) => Option(fun)
		given putSchemaVmwareDiskConfigVmdkModeEnum: Conversion[Schema.VmwareDiskConfig.VmdkModeEnum, Option[Schema.VmwareDiskConfig.VmdkModeEnum]] = (fun: Schema.VmwareDiskConfig.VmdkModeEnum) => Option(fun)
		given putSchemaVmwareDiskConfigRdmCompatibilityEnum: Conversion[Schema.VmwareDiskConfig.RdmCompatibilityEnum, Option[Schema.VmwareDiskConfig.RdmCompatibilityEnum]] = (fun: Schema.VmwareDiskConfig.RdmCompatibilityEnum) => Option(fun)
		given putSchemaVmwarePlatformDetails: Conversion[Schema.VmwarePlatformDetails, Option[Schema.VmwarePlatformDetails]] = (fun: Schema.VmwarePlatformDetails) => Option(fun)
		given putSchemaAwsEc2PlatformDetails: Conversion[Schema.AwsEc2PlatformDetails, Option[Schema.AwsEc2PlatformDetails]] = (fun: Schema.AwsEc2PlatformDetails) => Option(fun)
		given putSchemaAzureVmPlatformDetails: Conversion[Schema.AzureVmPlatformDetails, Option[Schema.AzureVmPlatformDetails]] = (fun: Schema.AzureVmPlatformDetails) => Option(fun)
		given putSchemaGenericPlatformDetails: Conversion[Schema.GenericPlatformDetails, Option[Schema.GenericPlatformDetails]] = (fun: Schema.GenericPlatformDetails) => Option(fun)
		given putSchemaPhysicalPlatformDetails: Conversion[Schema.PhysicalPlatformDetails, Option[Schema.PhysicalPlatformDetails]] = (fun: Schema.PhysicalPlatformDetails) => Option(fun)
		given putSchemaVmwarePlatformDetailsEsxHyperthreadingEnum: Conversion[Schema.VmwarePlatformDetails.EsxHyperthreadingEnum, Option[Schema.VmwarePlatformDetails.EsxHyperthreadingEnum]] = (fun: Schema.VmwarePlatformDetails.EsxHyperthreadingEnum) => Option(fun)
		given putSchemaAwsEc2PlatformDetailsHyperthreadingEnum: Conversion[Schema.AwsEc2PlatformDetails.HyperthreadingEnum, Option[Schema.AwsEc2PlatformDetails.HyperthreadingEnum]] = (fun: Schema.AwsEc2PlatformDetails.HyperthreadingEnum) => Option(fun)
		given putSchemaAzureVmPlatformDetailsHyperthreadingEnum: Conversion[Schema.AzureVmPlatformDetails.HyperthreadingEnum, Option[Schema.AzureVmPlatformDetails.HyperthreadingEnum]] = (fun: Schema.AzureVmPlatformDetails.HyperthreadingEnum) => Option(fun)
		given putSchemaGenericPlatformDetailsHyperthreadingEnum: Conversion[Schema.GenericPlatformDetails.HyperthreadingEnum, Option[Schema.GenericPlatformDetails.HyperthreadingEnum]] = (fun: Schema.GenericPlatformDetails.HyperthreadingEnum) => Option(fun)
		given putSchemaPhysicalPlatformDetailsHyperthreadingEnum: Conversion[Schema.PhysicalPlatformDetails.HyperthreadingEnum, Option[Schema.PhysicalPlatformDetails.HyperthreadingEnum]] = (fun: Schema.PhysicalPlatformDetails.HyperthreadingEnum) => Option(fun)
		given putListSchemaInsight: Conversion[List[Schema.Insight], Option[List[Schema.Insight]]] = (fun: List[Schema.Insight]) => Option(fun)
		given putSchemaMigrationInsight: Conversion[Schema.MigrationInsight, Option[Schema.MigrationInsight]] = (fun: Schema.MigrationInsight) => Option(fun)
		given putSchemaGenericInsight: Conversion[Schema.GenericInsight, Option[Schema.GenericInsight]] = (fun: Schema.GenericInsight) => Option(fun)
		given putSchemaFitDescriptor: Conversion[Schema.FitDescriptor, Option[Schema.FitDescriptor]] = (fun: Schema.FitDescriptor) => Option(fun)
		given putSchemaComputeEngineMigrationTarget: Conversion[Schema.ComputeEngineMigrationTarget, Option[Schema.ComputeEngineMigrationTarget]] = (fun: Schema.ComputeEngineMigrationTarget) => Option(fun)
		given putSchemaFitDescriptorFitLevelEnum: Conversion[Schema.FitDescriptor.FitLevelEnum, Option[Schema.FitDescriptor.FitLevelEnum]] = (fun: Schema.FitDescriptor.FitLevelEnum) => Option(fun)
		given putSchemaComputeEngineShapeDescriptor: Conversion[Schema.ComputeEngineShapeDescriptor, Option[Schema.ComputeEngineShapeDescriptor]] = (fun: Schema.ComputeEngineShapeDescriptor) => Option(fun)
		given putListSchemaComputeStorageDescriptor: Conversion[List[Schema.ComputeStorageDescriptor], Option[List[Schema.ComputeStorageDescriptor]]] = (fun: List[Schema.ComputeStorageDescriptor]) => Option(fun)
		given putSchemaComputeStorageDescriptorTypeEnum: Conversion[Schema.ComputeStorageDescriptor.TypeEnum, Option[Schema.ComputeStorageDescriptor.TypeEnum]] = (fun: Schema.ComputeStorageDescriptor.TypeEnum) => Option(fun)
		given putListSchemaDailyResourceUsageAggregation: Conversion[List[Schema.DailyResourceUsageAggregation], Option[List[Schema.DailyResourceUsageAggregation]]] = (fun: List[Schema.DailyResourceUsageAggregation]) => Option(fun)
		given putSchemaDailyResourceUsageAggregationCPU: Conversion[Schema.DailyResourceUsageAggregationCPU, Option[Schema.DailyResourceUsageAggregationCPU]] = (fun: Schema.DailyResourceUsageAggregationCPU) => Option(fun)
		given putSchemaDailyResourceUsageAggregationMemory: Conversion[Schema.DailyResourceUsageAggregationMemory, Option[Schema.DailyResourceUsageAggregationMemory]] = (fun: Schema.DailyResourceUsageAggregationMemory) => Option(fun)
		given putSchemaDailyResourceUsageAggregationNetwork: Conversion[Schema.DailyResourceUsageAggregationNetwork, Option[Schema.DailyResourceUsageAggregationNetwork]] = (fun: Schema.DailyResourceUsageAggregationNetwork) => Option(fun)
		given putSchemaDailyResourceUsageAggregationDisk: Conversion[Schema.DailyResourceUsageAggregationDisk, Option[Schema.DailyResourceUsageAggregationDisk]] = (fun: Schema.DailyResourceUsageAggregationDisk) => Option(fun)
		given putSchemaDailyResourceUsageAggregationStats: Conversion[Schema.DailyResourceUsageAggregationStats, Option[Schema.DailyResourceUsageAggregationStats]] = (fun: Schema.DailyResourceUsageAggregationStats) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putListSchemaUpdateAssetRequest: Conversion[List[Schema.UpdateAssetRequest], Option[List[Schema.UpdateAssetRequest]]] = (fun: List[Schema.UpdateAssetRequest]) => Option(fun)
		given putSchemaAsset: Conversion[Schema.Asset, Option[Schema.Asset]] = (fun: Schema.Asset) => Option(fun)
		given putListSchemaAssetFrame: Conversion[List[Schema.AssetFrame], Option[List[Schema.AssetFrame]]] = (fun: List[Schema.AssetFrame]) => Option(fun)
		given putListSchemaPerformanceSample: Conversion[List[Schema.PerformanceSample], Option[List[Schema.PerformanceSample]]] = (fun: List[Schema.PerformanceSample]) => Option(fun)
		given putSchemaAssetFrameCollectionTypeEnum: Conversion[Schema.AssetFrame.CollectionTypeEnum, Option[Schema.AssetFrame.CollectionTypeEnum]] = (fun: Schema.AssetFrame.CollectionTypeEnum) => Option(fun)
		given putSchemaMemoryUsageSample: Conversion[Schema.MemoryUsageSample, Option[Schema.MemoryUsageSample]] = (fun: Schema.MemoryUsageSample) => Option(fun)
		given putSchemaCpuUsageSample: Conversion[Schema.CpuUsageSample, Option[Schema.CpuUsageSample]] = (fun: Schema.CpuUsageSample) => Option(fun)
		given putSchemaNetworkUsageSample: Conversion[Schema.NetworkUsageSample, Option[Schema.NetworkUsageSample]] = (fun: Schema.NetworkUsageSample) => Option(fun)
		given putSchemaDiskUsageSample: Conversion[Schema.DiskUsageSample, Option[Schema.DiskUsageSample]] = (fun: Schema.DiskUsageSample) => Option(fun)
		given putListSchemaAggregation: Conversion[List[Schema.Aggregation], Option[List[Schema.Aggregation]]] = (fun: List[Schema.Aggregation]) => Option(fun)
		given putSchemaAggregationCount: Conversion[Schema.AggregationCount, Option[Schema.AggregationCount]] = (fun: Schema.AggregationCount) => Option(fun)
		given putSchemaAggregationSum: Conversion[Schema.AggregationSum, Option[Schema.AggregationSum]] = (fun: Schema.AggregationSum) => Option(fun)
		given putSchemaAggregationHistogram: Conversion[Schema.AggregationHistogram, Option[Schema.AggregationHistogram]] = (fun: Schema.AggregationHistogram) => Option(fun)
		given putSchemaAggregationFrequency: Conversion[Schema.AggregationFrequency, Option[Schema.AggregationFrequency]] = (fun: Schema.AggregationFrequency) => Option(fun)
		given putListBigDecimal: Conversion[List[BigDecimal], Option[List[BigDecimal]]] = (fun: List[BigDecimal]) => Option(fun)
		given putListSchemaAggregationResult: Conversion[List[Schema.AggregationResult], Option[List[Schema.AggregationResult]]] = (fun: List[Schema.AggregationResult]) => Option(fun)
		given putSchemaAggregationResultCount: Conversion[Schema.AggregationResultCount, Option[Schema.AggregationResultCount]] = (fun: Schema.AggregationResultCount) => Option(fun)
		given putSchemaAggregationResultSum: Conversion[Schema.AggregationResultSum, Option[Schema.AggregationResultSum]] = (fun: Schema.AggregationResultSum) => Option(fun)
		given putSchemaAggregationResultHistogram: Conversion[Schema.AggregationResultHistogram, Option[Schema.AggregationResultHistogram]] = (fun: Schema.AggregationResultHistogram) => Option(fun)
		given putSchemaAggregationResultFrequency: Conversion[Schema.AggregationResultFrequency, Option[Schema.AggregationResultFrequency]] = (fun: Schema.AggregationResultFrequency) => Option(fun)
		given putListSchemaAggregationResultHistogramBucket: Conversion[List[Schema.AggregationResultHistogramBucket], Option[List[Schema.AggregationResultHistogramBucket]]] = (fun: List[Schema.AggregationResultHistogramBucket]) => Option(fun)
		given putSchemaImportJobStateEnum: Conversion[Schema.ImportJob.StateEnum, Option[Schema.ImportJob.StateEnum]] = (fun: Schema.ImportJob.StateEnum) => Option(fun)
		given putSchemaValidationReport: Conversion[Schema.ValidationReport, Option[Schema.ValidationReport]] = (fun: Schema.ValidationReport) => Option(fun)
		given putSchemaExecutionReport: Conversion[Schema.ExecutionReport, Option[Schema.ExecutionReport]] = (fun: Schema.ExecutionReport) => Option(fun)
		given putListSchemaFileValidationReport: Conversion[List[Schema.FileValidationReport], Option[List[Schema.FileValidationReport]]] = (fun: List[Schema.FileValidationReport]) => Option(fun)
		given putListSchemaImportError: Conversion[List[Schema.ImportError], Option[List[Schema.ImportError]]] = (fun: List[Schema.ImportError]) => Option(fun)
		given putListSchemaImportRowError: Conversion[List[Schema.ImportRowError], Option[List[Schema.ImportRowError]]] = (fun: List[Schema.ImportRowError]) => Option(fun)
		given putSchemaImportRowErrorCsvErrorDetails: Conversion[Schema.ImportRowErrorCsvErrorDetails, Option[Schema.ImportRowErrorCsvErrorDetails]] = (fun: Schema.ImportRowErrorCsvErrorDetails) => Option(fun)
		given putSchemaImportRowErrorXlsxErrorDetails: Conversion[Schema.ImportRowErrorXlsxErrorDetails, Option[Schema.ImportRowErrorXlsxErrorDetails]] = (fun: Schema.ImportRowErrorXlsxErrorDetails) => Option(fun)
		given putSchemaImportErrorSeverityEnum: Conversion[Schema.ImportError.SeverityEnum, Option[Schema.ImportError.SeverityEnum]] = (fun: Schema.ImportError.SeverityEnum) => Option(fun)
		given putListSchemaImportJob: Conversion[List[Schema.ImportJob], Option[List[Schema.ImportJob]]] = (fun: List[Schema.ImportJob]) => Option(fun)
		given putSchemaImportDataFileFormatEnum: Conversion[Schema.ImportDataFile.FormatEnum, Option[Schema.ImportDataFile.FormatEnum]] = (fun: Schema.ImportDataFile.FormatEnum) => Option(fun)
		given putSchemaImportDataFileStateEnum: Conversion[Schema.ImportDataFile.StateEnum, Option[Schema.ImportDataFile.StateEnum]] = (fun: Schema.ImportDataFile.StateEnum) => Option(fun)
		given putSchemaUploadFileInfo: Conversion[Schema.UploadFileInfo, Option[Schema.UploadFileInfo]] = (fun: Schema.UploadFileInfo) => Option(fun)
		given putListSchemaImportDataFile: Conversion[List[Schema.ImportDataFile], Option[List[Schema.ImportDataFile]]] = (fun: List[Schema.ImportDataFile]) => Option(fun)
		given putListSchemaGroup: Conversion[List[Schema.Group], Option[List[Schema.Group]]] = (fun: List[Schema.Group]) => Option(fun)
		given putSchemaAssetList: Conversion[Schema.AssetList, Option[Schema.AssetList]] = (fun: Schema.AssetList) => Option(fun)
		given putListSchemaErrorFrame: Conversion[List[Schema.ErrorFrame], Option[List[Schema.ErrorFrame]]] = (fun: List[Schema.ErrorFrame]) => Option(fun)
		given putListSchemaFrameViolationEntry: Conversion[List[Schema.FrameViolationEntry], Option[List[Schema.FrameViolationEntry]]] = (fun: List[Schema.FrameViolationEntry]) => Option(fun)
		given putSchemaAssetFrame: Conversion[Schema.AssetFrame, Option[Schema.AssetFrame]] = (fun: Schema.AssetFrame) => Option(fun)
		given putListSchemaSource: Conversion[List[Schema.Source], Option[List[Schema.Source]]] = (fun: List[Schema.Source]) => Option(fun)
		given putSchemaSourceTypeEnum: Conversion[Schema.Source.TypeEnum, Option[Schema.Source.TypeEnum]] = (fun: Schema.Source.TypeEnum) => Option(fun)
		given putSchemaSourceStateEnum: Conversion[Schema.Source.StateEnum, Option[Schema.Source.StateEnum]] = (fun: Schema.Source.StateEnum) => Option(fun)
		given putListSchemaPreferenceSet: Conversion[List[Schema.PreferenceSet], Option[List[Schema.PreferenceSet]]] = (fun: List[Schema.PreferenceSet]) => Option(fun)
		given putSchemaVirtualMachinePreferences: Conversion[Schema.VirtualMachinePreferences, Option[Schema.VirtualMachinePreferences]] = (fun: Schema.VirtualMachinePreferences) => Option(fun)
		given putSchemaVirtualMachinePreferencesTargetProductEnum: Conversion[Schema.VirtualMachinePreferences.TargetProductEnum, Option[Schema.VirtualMachinePreferences.TargetProductEnum]] = (fun: Schema.VirtualMachinePreferences.TargetProductEnum) => Option(fun)
		given putSchemaRegionPreferences: Conversion[Schema.RegionPreferences, Option[Schema.RegionPreferences]] = (fun: Schema.RegionPreferences) => Option(fun)
		given putSchemaVirtualMachinePreferencesCommitmentPlanEnum: Conversion[Schema.VirtualMachinePreferences.CommitmentPlanEnum, Option[Schema.VirtualMachinePreferences.CommitmentPlanEnum]] = (fun: Schema.VirtualMachinePreferences.CommitmentPlanEnum) => Option(fun)
		given putSchemaVirtualMachinePreferencesSizingOptimizationStrategyEnum: Conversion[Schema.VirtualMachinePreferences.SizingOptimizationStrategyEnum, Option[Schema.VirtualMachinePreferences.SizingOptimizationStrategyEnum]] = (fun: Schema.VirtualMachinePreferences.SizingOptimizationStrategyEnum) => Option(fun)
		given putSchemaComputeEnginePreferences: Conversion[Schema.ComputeEnginePreferences, Option[Schema.ComputeEnginePreferences]] = (fun: Schema.ComputeEnginePreferences) => Option(fun)
		given putSchemaVmwareEnginePreferences: Conversion[Schema.VmwareEnginePreferences, Option[Schema.VmwareEnginePreferences]] = (fun: Schema.VmwareEnginePreferences) => Option(fun)
		given putSchemaSoleTenancyPreferences: Conversion[Schema.SoleTenancyPreferences, Option[Schema.SoleTenancyPreferences]] = (fun: Schema.SoleTenancyPreferences) => Option(fun)
		given putSchemaComputeEnginePreferencesPersistentDiskTypeEnum: Conversion[Schema.ComputeEnginePreferences.PersistentDiskTypeEnum, Option[Schema.ComputeEnginePreferences.PersistentDiskTypeEnum]] = (fun: Schema.ComputeEnginePreferences.PersistentDiskTypeEnum) => Option(fun)
		given putSchemaMachinePreferences: Conversion[Schema.MachinePreferences, Option[Schema.MachinePreferences]] = (fun: Schema.MachinePreferences) => Option(fun)
		given putSchemaComputeEnginePreferencesLicenseTypeEnum: Conversion[Schema.ComputeEnginePreferences.LicenseTypeEnum, Option[Schema.ComputeEnginePreferences.LicenseTypeEnum]] = (fun: Schema.ComputeEnginePreferences.LicenseTypeEnum) => Option(fun)
		given putListSchemaMachineSeries: Conversion[List[Schema.MachineSeries], Option[List[Schema.MachineSeries]]] = (fun: List[Schema.MachineSeries]) => Option(fun)
		given putSchemaVmwareEnginePreferencesCommitmentPlanEnum: Conversion[Schema.VmwareEnginePreferences.CommitmentPlanEnum, Option[Schema.VmwareEnginePreferences.CommitmentPlanEnum]] = (fun: Schema.VmwareEnginePreferences.CommitmentPlanEnum) => Option(fun)
		given putSchemaSoleTenancyPreferencesHostMaintenancePolicyEnum: Conversion[Schema.SoleTenancyPreferences.HostMaintenancePolicyEnum, Option[Schema.SoleTenancyPreferences.HostMaintenancePolicyEnum]] = (fun: Schema.SoleTenancyPreferences.HostMaintenancePolicyEnum) => Option(fun)
		given putSchemaSoleTenancyPreferencesCommitmentPlanEnum: Conversion[Schema.SoleTenancyPreferences.CommitmentPlanEnum, Option[Schema.SoleTenancyPreferences.CommitmentPlanEnum]] = (fun: Schema.SoleTenancyPreferences.CommitmentPlanEnum) => Option(fun)
		given putListSchemaSoleTenantNodeType: Conversion[List[Schema.SoleTenantNodeType], Option[List[Schema.SoleTenantNodeType]]] = (fun: List[Schema.SoleTenantNodeType]) => Option(fun)
		given putListSchemaReportConfigGroupPreferenceSetAssignment: Conversion[List[Schema.ReportConfigGroupPreferenceSetAssignment], Option[List[Schema.ReportConfigGroupPreferenceSetAssignment]]] = (fun: List[Schema.ReportConfigGroupPreferenceSetAssignment]) => Option(fun)
		given putListSchemaReportConfig: Conversion[List[Schema.ReportConfig], Option[List[Schema.ReportConfig]]] = (fun: List[Schema.ReportConfig]) => Option(fun)
		given putSchemaReportTypeEnum: Conversion[Schema.Report.TypeEnum, Option[Schema.Report.TypeEnum]] = (fun: Schema.Report.TypeEnum) => Option(fun)
		given putSchemaReportStateEnum: Conversion[Schema.Report.StateEnum, Option[Schema.Report.StateEnum]] = (fun: Schema.Report.StateEnum) => Option(fun)
		given putSchemaReportSummary: Conversion[Schema.ReportSummary, Option[Schema.ReportSummary]] = (fun: Schema.ReportSummary) => Option(fun)
		given putSchemaReportSummaryAssetAggregateStats: Conversion[Schema.ReportSummaryAssetAggregateStats, Option[Schema.ReportSummaryAssetAggregateStats]] = (fun: Schema.ReportSummaryAssetAggregateStats) => Option(fun)
		given putListSchemaReportSummaryGroupFinding: Conversion[List[Schema.ReportSummaryGroupFinding], Option[List[Schema.ReportSummaryGroupFinding]]] = (fun: List[Schema.ReportSummaryGroupFinding]) => Option(fun)
		given putSchemaReportSummaryUtilizationChartData: Conversion[Schema.ReportSummaryUtilizationChartData, Option[Schema.ReportSummaryUtilizationChartData]] = (fun: Schema.ReportSummaryUtilizationChartData) => Option(fun)
		given putSchemaReportSummaryChartData: Conversion[Schema.ReportSummaryChartData, Option[Schema.ReportSummaryChartData]] = (fun: Schema.ReportSummaryChartData) => Option(fun)
		given putSchemaReportSummaryHistogramChartData: Conversion[Schema.ReportSummaryHistogramChartData, Option[Schema.ReportSummaryHistogramChartData]] = (fun: Schema.ReportSummaryHistogramChartData) => Option(fun)
		given putListSchemaReportSummaryChartDataDataPoint: Conversion[List[Schema.ReportSummaryChartDataDataPoint], Option[List[Schema.ReportSummaryChartDataDataPoint]]] = (fun: List[Schema.ReportSummaryChartDataDataPoint]) => Option(fun)
		given putListSchemaReportSummaryHistogramChartDataBucket: Conversion[List[Schema.ReportSummaryHistogramChartDataBucket], Option[List[Schema.ReportSummaryHistogramChartDataBucket]]] = (fun: List[Schema.ReportSummaryHistogramChartDataBucket]) => Option(fun)
		given putListSchemaReportSummaryGroupPreferenceSetFinding: Conversion[List[Schema.ReportSummaryGroupPreferenceSetFinding], Option[List[Schema.ReportSummaryGroupPreferenceSetFinding]]] = (fun: List[Schema.ReportSummaryGroupPreferenceSetFinding]) => Option(fun)
		given putSchemaMoney: Conversion[Schema.Money, Option[Schema.Money]] = (fun: Schema.Money) => Option(fun)
		given putSchemaReportSummaryComputeEngineFinding: Conversion[Schema.ReportSummaryComputeEngineFinding, Option[Schema.ReportSummaryComputeEngineFinding]] = (fun: Schema.ReportSummaryComputeEngineFinding) => Option(fun)
		given putSchemaReportSummaryVmwareEngineFinding: Conversion[Schema.ReportSummaryVmwareEngineFinding, Option[Schema.ReportSummaryVmwareEngineFinding]] = (fun: Schema.ReportSummaryVmwareEngineFinding) => Option(fun)
		given putSchemaReportSummarySoleTenantFinding: Conversion[Schema.ReportSummarySoleTenantFinding, Option[Schema.ReportSummarySoleTenantFinding]] = (fun: Schema.ReportSummarySoleTenantFinding) => Option(fun)
		given putListSchemaReportSummaryMachineSeriesAllocation: Conversion[List[Schema.ReportSummaryMachineSeriesAllocation], Option[List[Schema.ReportSummaryMachineSeriesAllocation]]] = (fun: List[Schema.ReportSummaryMachineSeriesAllocation]) => Option(fun)
		given putListSchemaReportSummaryComputeEngineFindingAllocatedDiskTypesEnum: Conversion[List[Schema.ReportSummaryComputeEngineFinding.AllocatedDiskTypesEnum], Option[List[Schema.ReportSummaryComputeEngineFinding.AllocatedDiskTypesEnum]]] = (fun: List[Schema.ReportSummaryComputeEngineFinding.AllocatedDiskTypesEnum]) => Option(fun)
		given putSchemaMachineSeries: Conversion[Schema.MachineSeries, Option[Schema.MachineSeries]] = (fun: Schema.MachineSeries) => Option(fun)
		given putListSchemaReportSummaryVmwareNodeAllocation: Conversion[List[Schema.ReportSummaryVmwareNodeAllocation], Option[List[Schema.ReportSummaryVmwareNodeAllocation]]] = (fun: List[Schema.ReportSummaryVmwareNodeAllocation]) => Option(fun)
		given putSchemaReportSummaryVmwareNode: Conversion[Schema.ReportSummaryVmwareNode, Option[Schema.ReportSummaryVmwareNode]] = (fun: Schema.ReportSummaryVmwareNode) => Option(fun)
		given putListSchemaReportSummarySoleTenantNodeAllocation: Conversion[List[Schema.ReportSummarySoleTenantNodeAllocation], Option[List[Schema.ReportSummarySoleTenantNodeAllocation]]] = (fun: List[Schema.ReportSummarySoleTenantNodeAllocation]) => Option(fun)
		given putSchemaSoleTenantNodeType: Conversion[Schema.SoleTenantNodeType, Option[Schema.SoleTenantNodeType]] = (fun: Schema.SoleTenantNodeType) => Option(fun)
		given putListSchemaReport: Conversion[List[Schema.Report], Option[List[Schema.Report]]] = (fun: List[Schema.Report]) => Option(fun)
		given putSchemaDiscoveryClientStateEnum: Conversion[Schema.DiscoveryClient.StateEnum, Option[Schema.DiscoveryClient.StateEnum]] = (fun: Schema.DiscoveryClient.StateEnum) => Option(fun)
		given putListSchemaStatus: Conversion[List[Schema.Status], Option[List[Schema.Status]]] = (fun: List[Schema.Status]) => Option(fun)
		given putListSchemaDiscoveryClient: Conversion[List[Schema.DiscoveryClient], Option[List[Schema.DiscoveryClient]]] = (fun: List[Schema.DiscoveryClient]) => Option(fun)
		given putListSchemaLocation: Conversion[List[Schema.Location], Option[List[Schema.Location]]] = (fun: List[Schema.Location]) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
