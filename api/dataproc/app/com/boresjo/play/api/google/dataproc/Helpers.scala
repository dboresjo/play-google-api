package com.boresjo.play.api.google.dataproc

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaOperation: Conversion[List[Schema.Operation], Option[List[Schema.Operation]]] = (fun: List[Schema.Operation]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putSchemaBasicAutoscalingAlgorithm: Conversion[Schema.BasicAutoscalingAlgorithm, Option[Schema.BasicAutoscalingAlgorithm]] = (fun: Schema.BasicAutoscalingAlgorithm) => Option(fun)
		given putSchemaInstanceGroupAutoscalingPolicyConfig: Conversion[Schema.InstanceGroupAutoscalingPolicyConfig, Option[Schema.InstanceGroupAutoscalingPolicyConfig]] = (fun: Schema.InstanceGroupAutoscalingPolicyConfig) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putSchemaBasicYarnAutoscalingConfig: Conversion[Schema.BasicYarnAutoscalingConfig, Option[Schema.BasicYarnAutoscalingConfig]] = (fun: Schema.BasicYarnAutoscalingConfig) => Option(fun)
		given putSchemaSparkStandaloneAutoscalingConfig: Conversion[Schema.SparkStandaloneAutoscalingConfig, Option[Schema.SparkStandaloneAutoscalingConfig]] = (fun: Schema.SparkStandaloneAutoscalingConfig) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putListSchemaAutoscalingPolicy: Conversion[List[Schema.AutoscalingPolicy], Option[List[Schema.AutoscalingPolicy]]] = (fun: List[Schema.AutoscalingPolicy]) => Option(fun)
		given putSchemaPySparkBatch: Conversion[Schema.PySparkBatch, Option[Schema.PySparkBatch]] = (fun: Schema.PySparkBatch) => Option(fun)
		given putSchemaSparkBatch: Conversion[Schema.SparkBatch, Option[Schema.SparkBatch]] = (fun: Schema.SparkBatch) => Option(fun)
		given putSchemaSparkRBatch: Conversion[Schema.SparkRBatch, Option[Schema.SparkRBatch]] = (fun: Schema.SparkRBatch) => Option(fun)
		given putSchemaSparkSqlBatch: Conversion[Schema.SparkSqlBatch, Option[Schema.SparkSqlBatch]] = (fun: Schema.SparkSqlBatch) => Option(fun)
		given putSchemaRuntimeInfo: Conversion[Schema.RuntimeInfo, Option[Schema.RuntimeInfo]] = (fun: Schema.RuntimeInfo) => Option(fun)
		given putSchemaBatchStateEnum: Conversion[Schema.Batch.StateEnum, Option[Schema.Batch.StateEnum]] = (fun: Schema.Batch.StateEnum) => Option(fun)
		given putSchemaRuntimeConfig: Conversion[Schema.RuntimeConfig, Option[Schema.RuntimeConfig]] = (fun: Schema.RuntimeConfig) => Option(fun)
		given putSchemaEnvironmentConfig: Conversion[Schema.EnvironmentConfig, Option[Schema.EnvironmentConfig]] = (fun: Schema.EnvironmentConfig) => Option(fun)
		given putListSchemaStateHistory: Conversion[List[Schema.StateHistory], Option[List[Schema.StateHistory]]] = (fun: List[Schema.StateHistory]) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putSchemaUsageMetrics: Conversion[Schema.UsageMetrics, Option[Schema.UsageMetrics]] = (fun: Schema.UsageMetrics) => Option(fun)
		given putSchemaUsageSnapshot: Conversion[Schema.UsageSnapshot, Option[Schema.UsageSnapshot]] = (fun: Schema.UsageSnapshot) => Option(fun)
		given putSchemaRepositoryConfig: Conversion[Schema.RepositoryConfig, Option[Schema.RepositoryConfig]] = (fun: Schema.RepositoryConfig) => Option(fun)
		given putSchemaAutotuningConfig: Conversion[Schema.AutotuningConfig, Option[Schema.AutotuningConfig]] = (fun: Schema.AutotuningConfig) => Option(fun)
		given putSchemaPyPiRepositoryConfig: Conversion[Schema.PyPiRepositoryConfig, Option[Schema.PyPiRepositoryConfig]] = (fun: Schema.PyPiRepositoryConfig) => Option(fun)
		given putListSchemaAutotuningConfigScenariosEnum: Conversion[List[Schema.AutotuningConfig.ScenariosEnum], Option[List[Schema.AutotuningConfig.ScenariosEnum]]] = (fun: List[Schema.AutotuningConfig.ScenariosEnum]) => Option(fun)
		given putSchemaExecutionConfig: Conversion[Schema.ExecutionConfig, Option[Schema.ExecutionConfig]] = (fun: Schema.ExecutionConfig) => Option(fun)
		given putSchemaPeripheralsConfig: Conversion[Schema.PeripheralsConfig, Option[Schema.PeripheralsConfig]] = (fun: Schema.PeripheralsConfig) => Option(fun)
		given putSchemaSparkHistoryServerConfig: Conversion[Schema.SparkHistoryServerConfig, Option[Schema.SparkHistoryServerConfig]] = (fun: Schema.SparkHistoryServerConfig) => Option(fun)
		given putSchemaStateHistoryStateEnum: Conversion[Schema.StateHistory.StateEnum, Option[Schema.StateHistory.StateEnum]] = (fun: Schema.StateHistory.StateEnum) => Option(fun)
		given putListSchemaBatch: Conversion[List[Schema.Batch], Option[List[Schema.Batch]]] = (fun: List[Schema.Batch]) => Option(fun)
		given putListSchemaSparkWrapperObject: Conversion[List[Schema.SparkWrapperObject], Option[List[Schema.SparkWrapperObject]]] = (fun: List[Schema.SparkWrapperObject]) => Option(fun)
		given putSchemaApplicationInfo: Conversion[Schema.ApplicationInfo, Option[Schema.ApplicationInfo]] = (fun: Schema.ApplicationInfo) => Option(fun)
		given putSchemaApplicationEnvironmentInfo: Conversion[Schema.ApplicationEnvironmentInfo, Option[Schema.ApplicationEnvironmentInfo]] = (fun: Schema.ApplicationEnvironmentInfo) => Option(fun)
		given putSchemaResourceProfileInfo: Conversion[Schema.ResourceProfileInfo, Option[Schema.ResourceProfileInfo]] = (fun: Schema.ResourceProfileInfo) => Option(fun)
		given putSchemaAppSummary: Conversion[Schema.AppSummary, Option[Schema.AppSummary]] = (fun: Schema.AppSummary) => Option(fun)
		given putSchemaJobData: Conversion[Schema.JobData, Option[Schema.JobData]] = (fun: Schema.JobData) => Option(fun)
		given putSchemaStageData: Conversion[Schema.StageData, Option[Schema.StageData]] = (fun: Schema.StageData) => Option(fun)
		given putSchemaTaskData: Conversion[Schema.TaskData, Option[Schema.TaskData]] = (fun: Schema.TaskData) => Option(fun)
		given putSchemaExecutorStageSummary: Conversion[Schema.ExecutorStageSummary, Option[Schema.ExecutorStageSummary]] = (fun: Schema.ExecutorStageSummary) => Option(fun)
		given putSchemaSpeculationStageSummary: Conversion[Schema.SpeculationStageSummary, Option[Schema.SpeculationStageSummary]] = (fun: Schema.SpeculationStageSummary) => Option(fun)
		given putSchemaExecutorSummary: Conversion[Schema.ExecutorSummary, Option[Schema.ExecutorSummary]] = (fun: Schema.ExecutorSummary) => Option(fun)
		given putSchemaRddStorageInfo: Conversion[Schema.RddStorageInfo, Option[Schema.RddStorageInfo]] = (fun: Schema.RddStorageInfo) => Option(fun)
		given putSchemaStreamBlockData: Conversion[Schema.StreamBlockData, Option[Schema.StreamBlockData]] = (fun: Schema.StreamBlockData) => Option(fun)
		given putSchemaRddOperationGraph: Conversion[Schema.RddOperationGraph, Option[Schema.RddOperationGraph]] = (fun: Schema.RddOperationGraph) => Option(fun)
		given putSchemaPoolData: Conversion[Schema.PoolData, Option[Schema.PoolData]] = (fun: Schema.PoolData) => Option(fun)
		given putSchemaProcessSummary: Conversion[Schema.ProcessSummary, Option[Schema.ProcessSummary]] = (fun: Schema.ProcessSummary) => Option(fun)
		given putSchemaSqlExecutionUiData: Conversion[Schema.SqlExecutionUiData, Option[Schema.SqlExecutionUiData]] = (fun: Schema.SqlExecutionUiData) => Option(fun)
		given putSchemaSparkPlanGraph: Conversion[Schema.SparkPlanGraph, Option[Schema.SparkPlanGraph]] = (fun: Schema.SparkPlanGraph) => Option(fun)
		given putSchemaStreamingQueryData: Conversion[Schema.StreamingQueryData, Option[Schema.StreamingQueryData]] = (fun: Schema.StreamingQueryData) => Option(fun)
		given putSchemaStreamingQueryProgress: Conversion[Schema.StreamingQueryProgress, Option[Schema.StreamingQueryProgress]] = (fun: Schema.StreamingQueryProgress) => Option(fun)
		given putListSchemaApplicationAttemptInfo: Conversion[List[Schema.ApplicationAttemptInfo], Option[List[Schema.ApplicationAttemptInfo]]] = (fun: List[Schema.ApplicationAttemptInfo]) => Option(fun)
		given putSchemaApplicationInfoApplicationContextIngestionStatusEnum: Conversion[Schema.ApplicationInfo.ApplicationContextIngestionStatusEnum, Option[Schema.ApplicationInfo.ApplicationContextIngestionStatusEnum]] = (fun: Schema.ApplicationInfo.ApplicationContextIngestionStatusEnum) => Option(fun)
		given putSchemaApplicationInfoQuantileDataStatusEnum: Conversion[Schema.ApplicationInfo.QuantileDataStatusEnum, Option[Schema.ApplicationInfo.QuantileDataStatusEnum]] = (fun: Schema.ApplicationInfo.QuantileDataStatusEnum) => Option(fun)
		given putSchemaSparkRuntimeInfo: Conversion[Schema.SparkRuntimeInfo, Option[Schema.SparkRuntimeInfo]] = (fun: Schema.SparkRuntimeInfo) => Option(fun)
		given putListSchemaResourceProfileInfo: Conversion[List[Schema.ResourceProfileInfo], Option[List[Schema.ResourceProfileInfo]]] = (fun: List[Schema.ResourceProfileInfo]) => Option(fun)
		given putMapStringSchemaExecutorResourceRequest: Conversion[Map[String, Schema.ExecutorResourceRequest], Option[Map[String, Schema.ExecutorResourceRequest]]] = (fun: Map[String, Schema.ExecutorResourceRequest]) => Option(fun)
		given putMapStringSchemaTaskResourceRequest: Conversion[Map[String, Schema.TaskResourceRequest], Option[Map[String, Schema.TaskResourceRequest]]] = (fun: Map[String, Schema.TaskResourceRequest]) => Option(fun)
		given putSchemaJobDataStatusEnum: Conversion[Schema.JobData.StatusEnum, Option[Schema.JobData.StatusEnum]] = (fun: Schema.JobData.StatusEnum) => Option(fun)
		given putMapStringInt: Conversion[Map[String, Int], Option[Map[String, Int]]] = (fun: Map[String, Int]) => Option(fun)
		given putListInt: Conversion[List[Int], Option[List[Int]]] = (fun: List[Int]) => Option(fun)
		given putSchemaStageDataStatusEnum: Conversion[Schema.StageData.StatusEnum, Option[Schema.StageData.StatusEnum]] = (fun: Schema.StageData.StatusEnum) => Option(fun)
		given putSchemaStageMetrics: Conversion[Schema.StageMetrics, Option[Schema.StageMetrics]] = (fun: Schema.StageMetrics) => Option(fun)
		given putListSchemaAccumulableInfo: Conversion[List[Schema.AccumulableInfo], Option[List[Schema.AccumulableInfo]]] = (fun: List[Schema.AccumulableInfo]) => Option(fun)
		given putMapStringSchemaTaskData: Conversion[Map[String, Schema.TaskData], Option[Map[String, Schema.TaskData]]] = (fun: Map[String, Schema.TaskData]) => Option(fun)
		given putMapStringSchemaExecutorStageSummary: Conversion[Map[String, Schema.ExecutorStageSummary], Option[Map[String, Schema.ExecutorStageSummary]]] = (fun: Map[String, Schema.ExecutorStageSummary]) => Option(fun)
		given putSchemaExecutorMetrics: Conversion[Schema.ExecutorMetrics, Option[Schema.ExecutorMetrics]] = (fun: Schema.ExecutorMetrics) => Option(fun)
		given putSchemaExecutorMetricsDistributions: Conversion[Schema.ExecutorMetricsDistributions, Option[Schema.ExecutorMetricsDistributions]] = (fun: Schema.ExecutorMetricsDistributions) => Option(fun)
		given putSchemaTaskQuantileMetrics: Conversion[Schema.TaskQuantileMetrics, Option[Schema.TaskQuantileMetrics]] = (fun: Schema.TaskQuantileMetrics) => Option(fun)
		given putSchemaStageInputMetrics: Conversion[Schema.StageInputMetrics, Option[Schema.StageInputMetrics]] = (fun: Schema.StageInputMetrics) => Option(fun)
		given putSchemaStageOutputMetrics: Conversion[Schema.StageOutputMetrics, Option[Schema.StageOutputMetrics]] = (fun: Schema.StageOutputMetrics) => Option(fun)
		given putSchemaStageShuffleReadMetrics: Conversion[Schema.StageShuffleReadMetrics, Option[Schema.StageShuffleReadMetrics]] = (fun: Schema.StageShuffleReadMetrics) => Option(fun)
		given putSchemaStageShuffleWriteMetrics: Conversion[Schema.StageShuffleWriteMetrics, Option[Schema.StageShuffleWriteMetrics]] = (fun: Schema.StageShuffleWriteMetrics) => Option(fun)
		given putSchemaStageShufflePushReadMetrics: Conversion[Schema.StageShufflePushReadMetrics, Option[Schema.StageShufflePushReadMetrics]] = (fun: Schema.StageShufflePushReadMetrics) => Option(fun)
		given putSchemaTaskMetrics: Conversion[Schema.TaskMetrics, Option[Schema.TaskMetrics]] = (fun: Schema.TaskMetrics) => Option(fun)
		given putSchemaInputMetrics: Conversion[Schema.InputMetrics, Option[Schema.InputMetrics]] = (fun: Schema.InputMetrics) => Option(fun)
		given putSchemaOutputMetrics: Conversion[Schema.OutputMetrics, Option[Schema.OutputMetrics]] = (fun: Schema.OutputMetrics) => Option(fun)
		given putSchemaShuffleReadMetrics: Conversion[Schema.ShuffleReadMetrics, Option[Schema.ShuffleReadMetrics]] = (fun: Schema.ShuffleReadMetrics) => Option(fun)
		given putSchemaShuffleWriteMetrics: Conversion[Schema.ShuffleWriteMetrics, Option[Schema.ShuffleWriteMetrics]] = (fun: Schema.ShuffleWriteMetrics) => Option(fun)
		given putSchemaShufflePushReadMetrics: Conversion[Schema.ShufflePushReadMetrics, Option[Schema.ShufflePushReadMetrics]] = (fun: Schema.ShufflePushReadMetrics) => Option(fun)
		given putListBigDecimal: Conversion[List[BigDecimal], Option[List[BigDecimal]]] = (fun: List[BigDecimal]) => Option(fun)
		given putSchemaExecutorPeakMetricsDistributions: Conversion[Schema.ExecutorPeakMetricsDistributions, Option[Schema.ExecutorPeakMetricsDistributions]] = (fun: Schema.ExecutorPeakMetricsDistributions) => Option(fun)
		given putListSchemaExecutorMetrics: Conversion[List[Schema.ExecutorMetrics], Option[List[Schema.ExecutorMetrics]]] = (fun: List[Schema.ExecutorMetrics]) => Option(fun)
		given putSchemaQuantiles: Conversion[Schema.Quantiles, Option[Schema.Quantiles]] = (fun: Schema.Quantiles) => Option(fun)
		given putSchemaInputQuantileMetrics: Conversion[Schema.InputQuantileMetrics, Option[Schema.InputQuantileMetrics]] = (fun: Schema.InputQuantileMetrics) => Option(fun)
		given putSchemaOutputQuantileMetrics: Conversion[Schema.OutputQuantileMetrics, Option[Schema.OutputQuantileMetrics]] = (fun: Schema.OutputQuantileMetrics) => Option(fun)
		given putSchemaShuffleReadQuantileMetrics: Conversion[Schema.ShuffleReadQuantileMetrics, Option[Schema.ShuffleReadQuantileMetrics]] = (fun: Schema.ShuffleReadQuantileMetrics) => Option(fun)
		given putSchemaShuffleWriteQuantileMetrics: Conversion[Schema.ShuffleWriteQuantileMetrics, Option[Schema.ShuffleWriteQuantileMetrics]] = (fun: Schema.ShuffleWriteQuantileMetrics) => Option(fun)
		given putSchemaShufflePushReadQuantileMetrics: Conversion[Schema.ShufflePushReadQuantileMetrics, Option[Schema.ShufflePushReadQuantileMetrics]] = (fun: Schema.ShufflePushReadQuantileMetrics) => Option(fun)
		given putSchemaMemoryMetrics: Conversion[Schema.MemoryMetrics, Option[Schema.MemoryMetrics]] = (fun: Schema.MemoryMetrics) => Option(fun)
		given putMapStringSchemaResourceInformation: Conversion[Map[String, Schema.ResourceInformation], Option[Map[String, Schema.ResourceInformation]]] = (fun: Map[String, Schema.ResourceInformation]) => Option(fun)
		given putListSchemaRddDataDistribution: Conversion[List[Schema.RddDataDistribution], Option[List[Schema.RddDataDistribution]]] = (fun: List[Schema.RddDataDistribution]) => Option(fun)
		given putListSchemaRddPartitionInfo: Conversion[List[Schema.RddPartitionInfo], Option[List[Schema.RddPartitionInfo]]] = (fun: List[Schema.RddPartitionInfo]) => Option(fun)
		given putListSchemaRddOperationEdge: Conversion[List[Schema.RddOperationEdge], Option[List[Schema.RddOperationEdge]]] = (fun: List[Schema.RddOperationEdge]) => Option(fun)
		given putSchemaRddOperationCluster: Conversion[Schema.RddOperationCluster, Option[Schema.RddOperationCluster]] = (fun: Schema.RddOperationCluster) => Option(fun)
		given putListSchemaRddOperationNode: Conversion[List[Schema.RddOperationNode], Option[List[Schema.RddOperationNode]]] = (fun: List[Schema.RddOperationNode]) => Option(fun)
		given putListSchemaRddOperationCluster: Conversion[List[Schema.RddOperationCluster], Option[List[Schema.RddOperationCluster]]] = (fun: List[Schema.RddOperationCluster]) => Option(fun)
		given putSchemaRddOperationNodeOutputDeterministicLevelEnum: Conversion[Schema.RddOperationNode.OutputDeterministicLevelEnum, Option[Schema.RddOperationNode.OutputDeterministicLevelEnum]] = (fun: Schema.RddOperationNode.OutputDeterministicLevelEnum) => Option(fun)
		given putListSchemaSqlPlanMetric: Conversion[List[Schema.SqlPlanMetric], Option[List[Schema.SqlPlanMetric]]] = (fun: List[Schema.SqlPlanMetric]) => Option(fun)
		given putMapStringSchemaSqlExecutionUiDataJobsEnum: Conversion[Map[String, Schema.SqlExecutionUiData.JobsEnum], Option[Map[String, Schema.SqlExecutionUiData.JobsEnum]]] = (fun: Map[String, Schema.SqlExecutionUiData.JobsEnum]) => Option(fun)
		given putListSchemaSparkPlanGraphNodeWrapper: Conversion[List[Schema.SparkPlanGraphNodeWrapper], Option[List[Schema.SparkPlanGraphNodeWrapper]]] = (fun: List[Schema.SparkPlanGraphNodeWrapper]) => Option(fun)
		given putListSchemaSparkPlanGraphEdge: Conversion[List[Schema.SparkPlanGraphEdge], Option[List[Schema.SparkPlanGraphEdge]]] = (fun: List[Schema.SparkPlanGraphEdge]) => Option(fun)
		given putSchemaSparkPlanGraphNode: Conversion[Schema.SparkPlanGraphNode, Option[Schema.SparkPlanGraphNode]] = (fun: Schema.SparkPlanGraphNode) => Option(fun)
		given putSchemaSparkPlanGraphCluster: Conversion[Schema.SparkPlanGraphCluster, Option[Schema.SparkPlanGraphCluster]] = (fun: Schema.SparkPlanGraphCluster) => Option(fun)
		given putListSchemaStateOperatorProgress: Conversion[List[Schema.StateOperatorProgress], Option[List[Schema.StateOperatorProgress]]] = (fun: List[Schema.StateOperatorProgress]) => Option(fun)
		given putListSchemaSourceProgress: Conversion[List[Schema.SourceProgress], Option[List[Schema.SourceProgress]]] = (fun: List[Schema.SourceProgress]) => Option(fun)
		given putSchemaSinkProgress: Conversion[Schema.SinkProgress, Option[Schema.SinkProgress]] = (fun: Schema.SinkProgress) => Option(fun)
		given putListSchemaSparkApplication: Conversion[List[Schema.SparkApplication], Option[List[Schema.SparkApplication]]] = (fun: List[Schema.SparkApplication]) => Option(fun)
		given putListSchemaJobData: Conversion[List[Schema.JobData], Option[List[Schema.JobData]]] = (fun: List[Schema.JobData]) => Option(fun)
		given putListSchemaStageData: Conversion[List[Schema.StageData], Option[List[Schema.StageData]]] = (fun: List[Schema.StageData]) => Option(fun)
		given putListSchemaTaskData: Conversion[List[Schema.TaskData], Option[List[Schema.TaskData]]] = (fun: List[Schema.TaskData]) => Option(fun)
		given putListSchemaExecutorSummary: Conversion[List[Schema.ExecutorSummary], Option[List[Schema.ExecutorSummary]]] = (fun: List[Schema.ExecutorSummary]) => Option(fun)
		given putListSchemaExecutorStageSummary: Conversion[List[Schema.ExecutorStageSummary], Option[List[Schema.ExecutorStageSummary]]] = (fun: List[Schema.ExecutorStageSummary]) => Option(fun)
		given putListSchemaSqlExecutionUiData: Conversion[List[Schema.SqlExecutionUiData], Option[List[Schema.SqlExecutionUiData]]] = (fun: List[Schema.SqlExecutionUiData]) => Option(fun)
		given putSchemaJobsSummary: Conversion[Schema.JobsSummary, Option[Schema.JobsSummary]] = (fun: Schema.JobsSummary) => Option(fun)
		given putSchemaStagesSummary: Conversion[Schema.StagesSummary, Option[Schema.StagesSummary]] = (fun: Schema.StagesSummary) => Option(fun)
		given putSchemaStageAttemptTasksSummary: Conversion[Schema.StageAttemptTasksSummary, Option[Schema.StageAttemptTasksSummary]] = (fun: Schema.StageAttemptTasksSummary) => Option(fun)
		given putSchemaConsolidatedExecutorSummary: Conversion[Schema.ConsolidatedExecutorSummary, Option[Schema.ConsolidatedExecutorSummary]] = (fun: Schema.ConsolidatedExecutorSummary) => Option(fun)
		given putSchemaClusterConfig: Conversion[Schema.ClusterConfig, Option[Schema.ClusterConfig]] = (fun: Schema.ClusterConfig) => Option(fun)
		given putSchemaVirtualClusterConfig: Conversion[Schema.VirtualClusterConfig, Option[Schema.VirtualClusterConfig]] = (fun: Schema.VirtualClusterConfig) => Option(fun)
		given putSchemaClusterStatus: Conversion[Schema.ClusterStatus, Option[Schema.ClusterStatus]] = (fun: Schema.ClusterStatus) => Option(fun)
		given putListSchemaClusterStatus: Conversion[List[Schema.ClusterStatus], Option[List[Schema.ClusterStatus]]] = (fun: List[Schema.ClusterStatus]) => Option(fun)
		given putSchemaClusterMetrics: Conversion[Schema.ClusterMetrics, Option[Schema.ClusterMetrics]] = (fun: Schema.ClusterMetrics) => Option(fun)
		given putSchemaGceClusterConfig: Conversion[Schema.GceClusterConfig, Option[Schema.GceClusterConfig]] = (fun: Schema.GceClusterConfig) => Option(fun)
		given putSchemaInstanceGroupConfig: Conversion[Schema.InstanceGroupConfig, Option[Schema.InstanceGroupConfig]] = (fun: Schema.InstanceGroupConfig) => Option(fun)
		given putSchemaSoftwareConfig: Conversion[Schema.SoftwareConfig, Option[Schema.SoftwareConfig]] = (fun: Schema.SoftwareConfig) => Option(fun)
		given putListSchemaNodeInitializationAction: Conversion[List[Schema.NodeInitializationAction], Option[List[Schema.NodeInitializationAction]]] = (fun: List[Schema.NodeInitializationAction]) => Option(fun)
		given putSchemaEncryptionConfig: Conversion[Schema.EncryptionConfig, Option[Schema.EncryptionConfig]] = (fun: Schema.EncryptionConfig) => Option(fun)
		given putSchemaAutoscalingConfig: Conversion[Schema.AutoscalingConfig, Option[Schema.AutoscalingConfig]] = (fun: Schema.AutoscalingConfig) => Option(fun)
		given putSchemaSecurityConfig: Conversion[Schema.SecurityConfig, Option[Schema.SecurityConfig]] = (fun: Schema.SecurityConfig) => Option(fun)
		given putSchemaLifecycleConfig: Conversion[Schema.LifecycleConfig, Option[Schema.LifecycleConfig]] = (fun: Schema.LifecycleConfig) => Option(fun)
		given putSchemaEndpointConfig: Conversion[Schema.EndpointConfig, Option[Schema.EndpointConfig]] = (fun: Schema.EndpointConfig) => Option(fun)
		given putSchemaMetastoreConfig: Conversion[Schema.MetastoreConfig, Option[Schema.MetastoreConfig]] = (fun: Schema.MetastoreConfig) => Option(fun)
		given putSchemaGkeClusterConfig: Conversion[Schema.GkeClusterConfig, Option[Schema.GkeClusterConfig]] = (fun: Schema.GkeClusterConfig) => Option(fun)
		given putSchemaDataprocMetricConfig: Conversion[Schema.DataprocMetricConfig, Option[Schema.DataprocMetricConfig]] = (fun: Schema.DataprocMetricConfig) => Option(fun)
		given putListSchemaAuxiliaryNodeGroup: Conversion[List[Schema.AuxiliaryNodeGroup], Option[List[Schema.AuxiliaryNodeGroup]]] = (fun: List[Schema.AuxiliaryNodeGroup]) => Option(fun)
		given putSchemaGceClusterConfigPrivateIpv6GoogleAccessEnum: Conversion[Schema.GceClusterConfig.PrivateIpv6GoogleAccessEnum, Option[Schema.GceClusterConfig.PrivateIpv6GoogleAccessEnum]] = (fun: Schema.GceClusterConfig.PrivateIpv6GoogleAccessEnum) => Option(fun)
		given putSchemaReservationAffinity: Conversion[Schema.ReservationAffinity, Option[Schema.ReservationAffinity]] = (fun: Schema.ReservationAffinity) => Option(fun)
		given putSchemaNodeGroupAffinity: Conversion[Schema.NodeGroupAffinity, Option[Schema.NodeGroupAffinity]] = (fun: Schema.NodeGroupAffinity) => Option(fun)
		given putSchemaShieldedInstanceConfig: Conversion[Schema.ShieldedInstanceConfig, Option[Schema.ShieldedInstanceConfig]] = (fun: Schema.ShieldedInstanceConfig) => Option(fun)
		given putSchemaConfidentialInstanceConfig: Conversion[Schema.ConfidentialInstanceConfig, Option[Schema.ConfidentialInstanceConfig]] = (fun: Schema.ConfidentialInstanceConfig) => Option(fun)
		given putSchemaReservationAffinityConsumeReservationTypeEnum: Conversion[Schema.ReservationAffinity.ConsumeReservationTypeEnum, Option[Schema.ReservationAffinity.ConsumeReservationTypeEnum]] = (fun: Schema.ReservationAffinity.ConsumeReservationTypeEnum) => Option(fun)
		given putListSchemaInstanceReference: Conversion[List[Schema.InstanceReference], Option[List[Schema.InstanceReference]]] = (fun: List[Schema.InstanceReference]) => Option(fun)
		given putSchemaDiskConfig: Conversion[Schema.DiskConfig, Option[Schema.DiskConfig]] = (fun: Schema.DiskConfig) => Option(fun)
		given putSchemaInstanceGroupConfigPreemptibilityEnum: Conversion[Schema.InstanceGroupConfig.PreemptibilityEnum, Option[Schema.InstanceGroupConfig.PreemptibilityEnum]] = (fun: Schema.InstanceGroupConfig.PreemptibilityEnum) => Option(fun)
		given putSchemaManagedGroupConfig: Conversion[Schema.ManagedGroupConfig, Option[Schema.ManagedGroupConfig]] = (fun: Schema.ManagedGroupConfig) => Option(fun)
		given putListSchemaAcceleratorConfig: Conversion[List[Schema.AcceleratorConfig], Option[List[Schema.AcceleratorConfig]]] = (fun: List[Schema.AcceleratorConfig]) => Option(fun)
		given putSchemaInstanceFlexibilityPolicy: Conversion[Schema.InstanceFlexibilityPolicy, Option[Schema.InstanceFlexibilityPolicy]] = (fun: Schema.InstanceFlexibilityPolicy) => Option(fun)
		given putSchemaStartupConfig: Conversion[Schema.StartupConfig, Option[Schema.StartupConfig]] = (fun: Schema.StartupConfig) => Option(fun)
		given putSchemaProvisioningModelMix: Conversion[Schema.ProvisioningModelMix, Option[Schema.ProvisioningModelMix]] = (fun: Schema.ProvisioningModelMix) => Option(fun)
		given putListSchemaInstanceSelection: Conversion[List[Schema.InstanceSelection], Option[List[Schema.InstanceSelection]]] = (fun: List[Schema.InstanceSelection]) => Option(fun)
		given putListSchemaInstanceSelectionResult: Conversion[List[Schema.InstanceSelectionResult], Option[List[Schema.InstanceSelectionResult]]] = (fun: List[Schema.InstanceSelectionResult]) => Option(fun)
		given putListSchemaSoftwareConfigOptionalComponentsEnum: Conversion[List[Schema.SoftwareConfig.OptionalComponentsEnum], Option[List[Schema.SoftwareConfig.OptionalComponentsEnum]]] = (fun: List[Schema.SoftwareConfig.OptionalComponentsEnum]) => Option(fun)
		given putSchemaKerberosConfig: Conversion[Schema.KerberosConfig, Option[Schema.KerberosConfig]] = (fun: Schema.KerberosConfig) => Option(fun)
		given putSchemaIdentityConfig: Conversion[Schema.IdentityConfig, Option[Schema.IdentityConfig]] = (fun: Schema.IdentityConfig) => Option(fun)
		given putSchemaNamespacedGkeDeploymentTarget: Conversion[Schema.NamespacedGkeDeploymentTarget, Option[Schema.NamespacedGkeDeploymentTarget]] = (fun: Schema.NamespacedGkeDeploymentTarget) => Option(fun)
		given putListSchemaGkeNodePoolTarget: Conversion[List[Schema.GkeNodePoolTarget], Option[List[Schema.GkeNodePoolTarget]]] = (fun: List[Schema.GkeNodePoolTarget]) => Option(fun)
		given putListSchemaGkeNodePoolTargetRolesEnum: Conversion[List[Schema.GkeNodePoolTarget.RolesEnum], Option[List[Schema.GkeNodePoolTarget.RolesEnum]]] = (fun: List[Schema.GkeNodePoolTarget.RolesEnum]) => Option(fun)
		given putSchemaGkeNodePoolConfig: Conversion[Schema.GkeNodePoolConfig, Option[Schema.GkeNodePoolConfig]] = (fun: Schema.GkeNodePoolConfig) => Option(fun)
		given putSchemaGkeNodeConfig: Conversion[Schema.GkeNodeConfig, Option[Schema.GkeNodeConfig]] = (fun: Schema.GkeNodeConfig) => Option(fun)
		given putSchemaGkeNodePoolAutoscalingConfig: Conversion[Schema.GkeNodePoolAutoscalingConfig, Option[Schema.GkeNodePoolAutoscalingConfig]] = (fun: Schema.GkeNodePoolAutoscalingConfig) => Option(fun)
		given putListSchemaGkeNodePoolAcceleratorConfig: Conversion[List[Schema.GkeNodePoolAcceleratorConfig], Option[List[Schema.GkeNodePoolAcceleratorConfig]]] = (fun: List[Schema.GkeNodePoolAcceleratorConfig]) => Option(fun)
		given putListSchemaMetric: Conversion[List[Schema.Metric], Option[List[Schema.Metric]]] = (fun: List[Schema.Metric]) => Option(fun)
		given putSchemaMetricMetricSourceEnum: Conversion[Schema.Metric.MetricSourceEnum, Option[Schema.Metric.MetricSourceEnum]] = (fun: Schema.Metric.MetricSourceEnum) => Option(fun)
		given putSchemaNodeGroup: Conversion[Schema.NodeGroup, Option[Schema.NodeGroup]] = (fun: Schema.NodeGroup) => Option(fun)
		given putListSchemaNodeGroupRolesEnum: Conversion[List[Schema.NodeGroup.RolesEnum], Option[List[Schema.NodeGroup.RolesEnum]]] = (fun: List[Schema.NodeGroup.RolesEnum]) => Option(fun)
		given putSchemaKubernetesClusterConfig: Conversion[Schema.KubernetesClusterConfig, Option[Schema.KubernetesClusterConfig]] = (fun: Schema.KubernetesClusterConfig) => Option(fun)
		given putSchemaAuxiliaryServicesConfig: Conversion[Schema.AuxiliaryServicesConfig, Option[Schema.AuxiliaryServicesConfig]] = (fun: Schema.AuxiliaryServicesConfig) => Option(fun)
		given putSchemaKubernetesSoftwareConfig: Conversion[Schema.KubernetesSoftwareConfig, Option[Schema.KubernetesSoftwareConfig]] = (fun: Schema.KubernetesSoftwareConfig) => Option(fun)
		given putSchemaClusterStatusStateEnum: Conversion[Schema.ClusterStatus.StateEnum, Option[Schema.ClusterStatus.StateEnum]] = (fun: Schema.ClusterStatus.StateEnum) => Option(fun)
		given putSchemaClusterStatusSubstateEnum: Conversion[Schema.ClusterStatus.SubstateEnum, Option[Schema.ClusterStatus.SubstateEnum]] = (fun: Schema.ClusterStatus.SubstateEnum) => Option(fun)
		given putListSchemaNodePool: Conversion[List[Schema.NodePool], Option[List[Schema.NodePool]]] = (fun: List[Schema.NodePool]) => Option(fun)
		given putSchemaClusterToRepair: Conversion[Schema.ClusterToRepair, Option[Schema.ClusterToRepair]] = (fun: Schema.ClusterToRepair) => Option(fun)
		given putSchemaNodePoolRepairActionEnum: Conversion[Schema.NodePool.RepairActionEnum, Option[Schema.NodePool.RepairActionEnum]] = (fun: Schema.NodePool.RepairActionEnum) => Option(fun)
		given putSchemaClusterToRepairClusterRepairActionEnum: Conversion[Schema.ClusterToRepair.ClusterRepairActionEnum, Option[Schema.ClusterToRepair.ClusterRepairActionEnum]] = (fun: Schema.ClusterToRepair.ClusterRepairActionEnum) => Option(fun)
		given putListSchemaCluster: Conversion[List[Schema.Cluster], Option[List[Schema.Cluster]]] = (fun: List[Schema.Cluster]) => Option(fun)
		given putSchemaDiagnoseClusterRequestTarballAccessEnum: Conversion[Schema.DiagnoseClusterRequest.TarballAccessEnum, Option[Schema.DiagnoseClusterRequest.TarballAccessEnum]] = (fun: Schema.DiagnoseClusterRequest.TarballAccessEnum) => Option(fun)
		given putSchemaInterval: Conversion[Schema.Interval, Option[Schema.Interval]] = (fun: Schema.Interval) => Option(fun)
		given putSchemaJob: Conversion[Schema.Job, Option[Schema.Job]] = (fun: Schema.Job) => Option(fun)
		given putSchemaJobReference: Conversion[Schema.JobReference, Option[Schema.JobReference]] = (fun: Schema.JobReference) => Option(fun)
		given putSchemaJobPlacement: Conversion[Schema.JobPlacement, Option[Schema.JobPlacement]] = (fun: Schema.JobPlacement) => Option(fun)
		given putSchemaHadoopJob: Conversion[Schema.HadoopJob, Option[Schema.HadoopJob]] = (fun: Schema.HadoopJob) => Option(fun)
		given putSchemaSparkJob: Conversion[Schema.SparkJob, Option[Schema.SparkJob]] = (fun: Schema.SparkJob) => Option(fun)
		given putSchemaPySparkJob: Conversion[Schema.PySparkJob, Option[Schema.PySparkJob]] = (fun: Schema.PySparkJob) => Option(fun)
		given putSchemaHiveJob: Conversion[Schema.HiveJob, Option[Schema.HiveJob]] = (fun: Schema.HiveJob) => Option(fun)
		given putSchemaPigJob: Conversion[Schema.PigJob, Option[Schema.PigJob]] = (fun: Schema.PigJob) => Option(fun)
		given putSchemaSparkRJob: Conversion[Schema.SparkRJob, Option[Schema.SparkRJob]] = (fun: Schema.SparkRJob) => Option(fun)
		given putSchemaSparkSqlJob: Conversion[Schema.SparkSqlJob, Option[Schema.SparkSqlJob]] = (fun: Schema.SparkSqlJob) => Option(fun)
		given putSchemaPrestoJob: Conversion[Schema.PrestoJob, Option[Schema.PrestoJob]] = (fun: Schema.PrestoJob) => Option(fun)
		given putSchemaTrinoJob: Conversion[Schema.TrinoJob, Option[Schema.TrinoJob]] = (fun: Schema.TrinoJob) => Option(fun)
		given putSchemaFlinkJob: Conversion[Schema.FlinkJob, Option[Schema.FlinkJob]] = (fun: Schema.FlinkJob) => Option(fun)
		given putSchemaJobStatus: Conversion[Schema.JobStatus, Option[Schema.JobStatus]] = (fun: Schema.JobStatus) => Option(fun)
		given putListSchemaJobStatus: Conversion[List[Schema.JobStatus], Option[List[Schema.JobStatus]]] = (fun: List[Schema.JobStatus]) => Option(fun)
		given putListSchemaYarnApplication: Conversion[List[Schema.YarnApplication], Option[List[Schema.YarnApplication]]] = (fun: List[Schema.YarnApplication]) => Option(fun)
		given putSchemaJobScheduling: Conversion[Schema.JobScheduling, Option[Schema.JobScheduling]] = (fun: Schema.JobScheduling) => Option(fun)
		given putSchemaDriverSchedulingConfig: Conversion[Schema.DriverSchedulingConfig, Option[Schema.DriverSchedulingConfig]] = (fun: Schema.DriverSchedulingConfig) => Option(fun)
		given putSchemaLoggingConfig: Conversion[Schema.LoggingConfig, Option[Schema.LoggingConfig]] = (fun: Schema.LoggingConfig) => Option(fun)
		given putMapStringSchemaLoggingConfigDriverLogLevelsEnum: Conversion[Map[String, Schema.LoggingConfig.DriverLogLevelsEnum], Option[Map[String, Schema.LoggingConfig.DriverLogLevelsEnum]]] = (fun: Map[String, Schema.LoggingConfig.DriverLogLevelsEnum]) => Option(fun)
		given putSchemaQueryList: Conversion[Schema.QueryList, Option[Schema.QueryList]] = (fun: Schema.QueryList) => Option(fun)
		given putSchemaJobStatusStateEnum: Conversion[Schema.JobStatus.StateEnum, Option[Schema.JobStatus.StateEnum]] = (fun: Schema.JobStatus.StateEnum) => Option(fun)
		given putSchemaJobStatusSubstateEnum: Conversion[Schema.JobStatus.SubstateEnum, Option[Schema.JobStatus.SubstateEnum]] = (fun: Schema.JobStatus.SubstateEnum) => Option(fun)
		given putSchemaYarnApplicationStateEnum: Conversion[Schema.YarnApplication.StateEnum, Option[Schema.YarnApplication.StateEnum]] = (fun: Schema.YarnApplication.StateEnum) => Option(fun)
		given putListSchemaJob: Conversion[List[Schema.Job], Option[List[Schema.Job]]] = (fun: List[Schema.Job]) => Option(fun)
		given putSchemaJupyterConfig: Conversion[Schema.JupyterConfig, Option[Schema.JupyterConfig]] = (fun: Schema.JupyterConfig) => Option(fun)
		given putSchemaSparkConnectConfig: Conversion[Schema.SparkConnectConfig, Option[Schema.SparkConnectConfig]] = (fun: Schema.SparkConnectConfig) => Option(fun)
		given putSchemaSessionStateEnum: Conversion[Schema.Session.StateEnum, Option[Schema.Session.StateEnum]] = (fun: Schema.Session.StateEnum) => Option(fun)
		given putListSchemaSessionStateHistory: Conversion[List[Schema.SessionStateHistory], Option[List[Schema.SessionStateHistory]]] = (fun: List[Schema.SessionStateHistory]) => Option(fun)
		given putSchemaJupyterConfigKernelEnum: Conversion[Schema.JupyterConfig.KernelEnum, Option[Schema.JupyterConfig.KernelEnum]] = (fun: Schema.JupyterConfig.KernelEnum) => Option(fun)
		given putSchemaSessionStateHistoryStateEnum: Conversion[Schema.SessionStateHistory.StateEnum, Option[Schema.SessionStateHistory.StateEnum]] = (fun: Schema.SessionStateHistory.StateEnum) => Option(fun)
		given putListSchemaSession: Conversion[List[Schema.Session], Option[List[Schema.Session]]] = (fun: List[Schema.Session]) => Option(fun)
		given putListSchemaSessionTemplate: Conversion[List[Schema.SessionTemplate], Option[List[Schema.SessionTemplate]]] = (fun: List[Schema.SessionTemplate]) => Option(fun)
		given putSchemaWorkflowTemplatePlacement: Conversion[Schema.WorkflowTemplatePlacement, Option[Schema.WorkflowTemplatePlacement]] = (fun: Schema.WorkflowTemplatePlacement) => Option(fun)
		given putListSchemaOrderedJob: Conversion[List[Schema.OrderedJob], Option[List[Schema.OrderedJob]]] = (fun: List[Schema.OrderedJob]) => Option(fun)
		given putListSchemaTemplateParameter: Conversion[List[Schema.TemplateParameter], Option[List[Schema.TemplateParameter]]] = (fun: List[Schema.TemplateParameter]) => Option(fun)
		given putSchemaGoogleCloudDataprocV1WorkflowTemplateEncryptionConfig: Conversion[Schema.GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig, Option[Schema.GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig]] = (fun: Schema.GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig) => Option(fun)
		given putSchemaManagedCluster: Conversion[Schema.ManagedCluster, Option[Schema.ManagedCluster]] = (fun: Schema.ManagedCluster) => Option(fun)
		given putSchemaClusterSelector: Conversion[Schema.ClusterSelector, Option[Schema.ClusterSelector]] = (fun: Schema.ClusterSelector) => Option(fun)
		given putSchemaParameterValidation: Conversion[Schema.ParameterValidation, Option[Schema.ParameterValidation]] = (fun: Schema.ParameterValidation) => Option(fun)
		given putSchemaRegexValidation: Conversion[Schema.RegexValidation, Option[Schema.RegexValidation]] = (fun: Schema.RegexValidation) => Option(fun)
		given putSchemaValueValidation: Conversion[Schema.ValueValidation, Option[Schema.ValueValidation]] = (fun: Schema.ValueValidation) => Option(fun)
		given putListSchemaWorkflowTemplate: Conversion[List[Schema.WorkflowTemplate], Option[List[Schema.WorkflowTemplate]]] = (fun: List[Schema.WorkflowTemplate]) => Option(fun)
		given putSchemaRepairNodeGroupRequestRepairActionEnum: Conversion[Schema.RepairNodeGroupRequest.RepairActionEnum, Option[Schema.RepairNodeGroupRequest.RepairActionEnum]] = (fun: Schema.RepairNodeGroupRequest.RepairActionEnum) => Option(fun)
		given putSchemaPolicy: Conversion[Schema.Policy, Option[Schema.Policy]] = (fun: Schema.Policy) => Option(fun)
		given putListSchemaBinding: Conversion[List[Schema.Binding], Option[List[Schema.Binding]]] = (fun: List[Schema.Binding]) => Option(fun)
		given putSchemaExpr: Conversion[Schema.Expr, Option[Schema.Expr]] = (fun: Schema.Expr) => Option(fun)
		given putSchemaGetPolicyOptions: Conversion[Schema.GetPolicyOptions, Option[Schema.GetPolicyOptions]] = (fun: Schema.GetPolicyOptions) => Option(fun)
		given putSchemaAnalyzeOperationMetadataAnalyzedWorkloadTypeEnum: Conversion[Schema.AnalyzeOperationMetadata.AnalyzedWorkloadTypeEnum, Option[Schema.AnalyzeOperationMetadata.AnalyzedWorkloadTypeEnum]] = (fun: Schema.AnalyzeOperationMetadata.AnalyzedWorkloadTypeEnum) => Option(fun)
		given putSchemaBatchOperationMetadataOperationTypeEnum: Conversion[Schema.BatchOperationMetadata.OperationTypeEnum, Option[Schema.BatchOperationMetadata.OperationTypeEnum]] = (fun: Schema.BatchOperationMetadata.OperationTypeEnum) => Option(fun)
		given putSchemaClusterOperationStatus: Conversion[Schema.ClusterOperationStatus, Option[Schema.ClusterOperationStatus]] = (fun: Schema.ClusterOperationStatus) => Option(fun)
		given putListSchemaClusterOperationStatus: Conversion[List[Schema.ClusterOperationStatus], Option[List[Schema.ClusterOperationStatus]]] = (fun: List[Schema.ClusterOperationStatus]) => Option(fun)
		given putSchemaClusterOperationStatusStateEnum: Conversion[Schema.ClusterOperationStatus.StateEnum, Option[Schema.ClusterOperationStatus.StateEnum]] = (fun: Schema.ClusterOperationStatus.StateEnum) => Option(fun)
		given putSchemaSessionOperationMetadataOperationTypeEnum: Conversion[Schema.SessionOperationMetadata.OperationTypeEnum, Option[Schema.SessionOperationMetadata.OperationTypeEnum]] = (fun: Schema.SessionOperationMetadata.OperationTypeEnum) => Option(fun)
		given putSchemaNodeGroupOperationMetadataOperationTypeEnum: Conversion[Schema.NodeGroupOperationMetadata.OperationTypeEnum, Option[Schema.NodeGroupOperationMetadata.OperationTypeEnum]] = (fun: Schema.NodeGroupOperationMetadata.OperationTypeEnum) => Option(fun)
		given putSchemaClusterOperation: Conversion[Schema.ClusterOperation, Option[Schema.ClusterOperation]] = (fun: Schema.ClusterOperation) => Option(fun)
		given putSchemaWorkflowGraph: Conversion[Schema.WorkflowGraph, Option[Schema.WorkflowGraph]] = (fun: Schema.WorkflowGraph) => Option(fun)
		given putSchemaWorkflowMetadataStateEnum: Conversion[Schema.WorkflowMetadata.StateEnum, Option[Schema.WorkflowMetadata.StateEnum]] = (fun: Schema.WorkflowMetadata.StateEnum) => Option(fun)
		given putListSchemaWorkflowNode: Conversion[List[Schema.WorkflowNode], Option[List[Schema.WorkflowNode]]] = (fun: List[Schema.WorkflowNode]) => Option(fun)
		given putSchemaWorkflowNodeStateEnum: Conversion[Schema.WorkflowNode.StateEnum, Option[Schema.WorkflowNode.StateEnum]] = (fun: Schema.WorkflowNode.StateEnum) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
