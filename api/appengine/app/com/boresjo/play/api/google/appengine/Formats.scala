package com.boresjo.play.api.google.appengine

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtListOperationsResponse: Format[Schema.ListOperationsResponse] = Json.format[Schema.ListOperationsResponse]
	given fmtOperation: Format[Schema.Operation] = Json.format[Schema.Operation]
	given fmtStatus: Format[Schema.Status] = Json.format[Schema.Status]
	given fmtApplication: Format[Schema.Application] = Json.format[Schema.Application]
	given fmtUrlDispatchRule: Format[Schema.UrlDispatchRule] = Json.format[Schema.UrlDispatchRule]
	given fmtApplicationServingStatusEnum: Format[Schema.Application.ServingStatusEnum] = JsonEnumFormat[Schema.Application.ServingStatusEnum]
	given fmtIdentityAwareProxy: Format[Schema.IdentityAwareProxy] = Json.format[Schema.IdentityAwareProxy]
	given fmtApplicationDatabaseTypeEnum: Format[Schema.Application.DatabaseTypeEnum] = JsonEnumFormat[Schema.Application.DatabaseTypeEnum]
	given fmtFeatureSettings: Format[Schema.FeatureSettings] = Json.format[Schema.FeatureSettings]
	given fmtRepairApplicationRequest: Format[Schema.RepairApplicationRequest] = Json.format[Schema.RepairApplicationRequest]
	given fmtListRuntimesResponse: Format[Schema.ListRuntimesResponse] = Json.format[Schema.ListRuntimesResponse]
	given fmtRuntime: Format[Schema.Runtime] = Json.format[Schema.Runtime]
	given fmtRuntimeEnvironmentEnum: Format[Schema.Runtime.EnvironmentEnum] = JsonEnumFormat[Schema.Runtime.EnvironmentEnum]
	given fmtRuntimeStageEnum: Format[Schema.Runtime.StageEnum] = JsonEnumFormat[Schema.Runtime.StageEnum]
	given fmtDate: Format[Schema.Date] = Json.format[Schema.Date]
	given fmtListServicesResponse: Format[Schema.ListServicesResponse] = Json.format[Schema.ListServicesResponse]
	given fmtService: Format[Schema.Service] = Json.format[Schema.Service]
	given fmtTrafficSplit: Format[Schema.TrafficSplit] = Json.format[Schema.TrafficSplit]
	given fmtNetworkSettings: Format[Schema.NetworkSettings] = Json.format[Schema.NetworkSettings]
	given fmtTrafficSplitShardByEnum: Format[Schema.TrafficSplit.ShardByEnum] = JsonEnumFormat[Schema.TrafficSplit.ShardByEnum]
	given fmtNetworkSettingsIngressTrafficAllowedEnum: Format[Schema.NetworkSettings.IngressTrafficAllowedEnum] = JsonEnumFormat[Schema.NetworkSettings.IngressTrafficAllowedEnum]
	given fmtListVersionsResponse: Format[Schema.ListVersionsResponse] = Json.format[Schema.ListVersionsResponse]
	given fmtVersion: Format[Schema.Version] = Json.format[Schema.Version]
	given fmtAutomaticScaling: Format[Schema.AutomaticScaling] = Json.format[Schema.AutomaticScaling]
	given fmtBasicScaling: Format[Schema.BasicScaling] = Json.format[Schema.BasicScaling]
	given fmtManualScaling: Format[Schema.ManualScaling] = Json.format[Schema.ManualScaling]
	given fmtVersionInboundServicesEnum: Format[Schema.Version.InboundServicesEnum] = JsonEnumFormat[Schema.Version.InboundServicesEnum]
	given fmtNetwork: Format[Schema.Network] = Json.format[Schema.Network]
	given fmtResources: Format[Schema.Resources] = Json.format[Schema.Resources]
	given fmtFlexibleRuntimeSettings: Format[Schema.FlexibleRuntimeSettings] = Json.format[Schema.FlexibleRuntimeSettings]
	given fmtVersionServingStatusEnum: Format[Schema.Version.ServingStatusEnum] = JsonEnumFormat[Schema.Version.ServingStatusEnum]
	given fmtUrlMap: Format[Schema.UrlMap] = Json.format[Schema.UrlMap]
	given fmtErrorHandler: Format[Schema.ErrorHandler] = Json.format[Schema.ErrorHandler]
	given fmtLibrary: Format[Schema.Library] = Json.format[Schema.Library]
	given fmtApiConfigHandler: Format[Schema.ApiConfigHandler] = Json.format[Schema.ApiConfigHandler]
	given fmtHealthCheck: Format[Schema.HealthCheck] = Json.format[Schema.HealthCheck]
	given fmtReadinessCheck: Format[Schema.ReadinessCheck] = Json.format[Schema.ReadinessCheck]
	given fmtLivenessCheck: Format[Schema.LivenessCheck] = Json.format[Schema.LivenessCheck]
	given fmtDeployment: Format[Schema.Deployment] = Json.format[Schema.Deployment]
	given fmtEndpointsApiService: Format[Schema.EndpointsApiService] = Json.format[Schema.EndpointsApiService]
	given fmtEntrypoint: Format[Schema.Entrypoint] = Json.format[Schema.Entrypoint]
	given fmtVpcAccessConnector: Format[Schema.VpcAccessConnector] = Json.format[Schema.VpcAccessConnector]
	given fmtCpuUtilization: Format[Schema.CpuUtilization] = Json.format[Schema.CpuUtilization]
	given fmtRequestUtilization: Format[Schema.RequestUtilization] = Json.format[Schema.RequestUtilization]
	given fmtDiskUtilization: Format[Schema.DiskUtilization] = Json.format[Schema.DiskUtilization]
	given fmtNetworkUtilization: Format[Schema.NetworkUtilization] = Json.format[Schema.NetworkUtilization]
	given fmtStandardSchedulerSettings: Format[Schema.StandardSchedulerSettings] = Json.format[Schema.StandardSchedulerSettings]
	given fmtNetworkInstanceIpModeEnum: Format[Schema.Network.InstanceIpModeEnum] = JsonEnumFormat[Schema.Network.InstanceIpModeEnum]
	given fmtVolume: Format[Schema.Volume] = Json.format[Schema.Volume]
	given fmtStaticFilesHandler: Format[Schema.StaticFilesHandler] = Json.format[Schema.StaticFilesHandler]
	given fmtScriptHandler: Format[Schema.ScriptHandler] = Json.format[Schema.ScriptHandler]
	given fmtApiEndpointHandler: Format[Schema.ApiEndpointHandler] = Json.format[Schema.ApiEndpointHandler]
	given fmtUrlMapSecurityLevelEnum: Format[Schema.UrlMap.SecurityLevelEnum] = JsonEnumFormat[Schema.UrlMap.SecurityLevelEnum]
	given fmtUrlMapLoginEnum: Format[Schema.UrlMap.LoginEnum] = JsonEnumFormat[Schema.UrlMap.LoginEnum]
	given fmtUrlMapAuthFailActionEnum: Format[Schema.UrlMap.AuthFailActionEnum] = JsonEnumFormat[Schema.UrlMap.AuthFailActionEnum]
	given fmtUrlMapRedirectHttpResponseCodeEnum: Format[Schema.UrlMap.RedirectHttpResponseCodeEnum] = JsonEnumFormat[Schema.UrlMap.RedirectHttpResponseCodeEnum]
	given fmtErrorHandlerErrorCodeEnum: Format[Schema.ErrorHandler.ErrorCodeEnum] = JsonEnumFormat[Schema.ErrorHandler.ErrorCodeEnum]
	given fmtApiConfigHandlerAuthFailActionEnum: Format[Schema.ApiConfigHandler.AuthFailActionEnum] = JsonEnumFormat[Schema.ApiConfigHandler.AuthFailActionEnum]
	given fmtApiConfigHandlerLoginEnum: Format[Schema.ApiConfigHandler.LoginEnum] = JsonEnumFormat[Schema.ApiConfigHandler.LoginEnum]
	given fmtApiConfigHandlerSecurityLevelEnum: Format[Schema.ApiConfigHandler.SecurityLevelEnum] = JsonEnumFormat[Schema.ApiConfigHandler.SecurityLevelEnum]
	given fmtFileInfo: Format[Schema.FileInfo] = Json.format[Schema.FileInfo]
	given fmtContainerInfo: Format[Schema.ContainerInfo] = Json.format[Schema.ContainerInfo]
	given fmtZipInfo: Format[Schema.ZipInfo] = Json.format[Schema.ZipInfo]
	given fmtCloudBuildOptions: Format[Schema.CloudBuildOptions] = Json.format[Schema.CloudBuildOptions]
	given fmtEndpointsApiServiceRolloutStrategyEnum: Format[Schema.EndpointsApiService.RolloutStrategyEnum] = JsonEnumFormat[Schema.EndpointsApiService.RolloutStrategyEnum]
	given fmtVpcAccessConnectorEgressSettingEnum: Format[Schema.VpcAccessConnector.EgressSettingEnum] = JsonEnumFormat[Schema.VpcAccessConnector.EgressSettingEnum]
	given fmtListInstancesResponse: Format[Schema.ListInstancesResponse] = Json.format[Schema.ListInstancesResponse]
	given fmtInstance: Format[Schema.Instance] = Json.format[Schema.Instance]
	given fmtInstanceAvailabilityEnum: Format[Schema.Instance.AvailabilityEnum] = JsonEnumFormat[Schema.Instance.AvailabilityEnum]
	given fmtInstanceVmLivenessEnum: Format[Schema.Instance.VmLivenessEnum] = JsonEnumFormat[Schema.Instance.VmLivenessEnum]
	given fmtDebugInstanceRequest: Format[Schema.DebugInstanceRequest] = Json.format[Schema.DebugInstanceRequest]
	given fmtListIngressRulesResponse: Format[Schema.ListIngressRulesResponse] = Json.format[Schema.ListIngressRulesResponse]
	given fmtFirewallRule: Format[Schema.FirewallRule] = Json.format[Schema.FirewallRule]
	given fmtFirewallRuleActionEnum: Format[Schema.FirewallRule.ActionEnum] = JsonEnumFormat[Schema.FirewallRule.ActionEnum]
	given fmtBatchUpdateIngressRulesRequest: Format[Schema.BatchUpdateIngressRulesRequest] = Json.format[Schema.BatchUpdateIngressRulesRequest]
	given fmtBatchUpdateIngressRulesResponse: Format[Schema.BatchUpdateIngressRulesResponse] = Json.format[Schema.BatchUpdateIngressRulesResponse]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtListAuthorizedDomainsResponse: Format[Schema.ListAuthorizedDomainsResponse] = Json.format[Schema.ListAuthorizedDomainsResponse]
	given fmtAuthorizedDomain: Format[Schema.AuthorizedDomain] = Json.format[Schema.AuthorizedDomain]
	given fmtListAuthorizedCertificatesResponse: Format[Schema.ListAuthorizedCertificatesResponse] = Json.format[Schema.ListAuthorizedCertificatesResponse]
	given fmtAuthorizedCertificate: Format[Schema.AuthorizedCertificate] = Json.format[Schema.AuthorizedCertificate]
	given fmtCertificateRawData: Format[Schema.CertificateRawData] = Json.format[Schema.CertificateRawData]
	given fmtManagedCertificate: Format[Schema.ManagedCertificate] = Json.format[Schema.ManagedCertificate]
	given fmtManagedCertificateStatusEnum: Format[Schema.ManagedCertificate.StatusEnum] = JsonEnumFormat[Schema.ManagedCertificate.StatusEnum]
	given fmtListDomainMappingsResponse: Format[Schema.ListDomainMappingsResponse] = Json.format[Schema.ListDomainMappingsResponse]
	given fmtDomainMapping: Format[Schema.DomainMapping] = Json.format[Schema.DomainMapping]
	given fmtSslSettings: Format[Schema.SslSettings] = Json.format[Schema.SslSettings]
	given fmtResourceRecord: Format[Schema.ResourceRecord] = Json.format[Schema.ResourceRecord]
	given fmtSslSettingsSslManagementTypeEnum: Format[Schema.SslSettings.SslManagementTypeEnum] = JsonEnumFormat[Schema.SslSettings.SslManagementTypeEnum]
	given fmtResourceRecordTypeEnum: Format[Schema.ResourceRecord.TypeEnum] = JsonEnumFormat[Schema.ResourceRecord.TypeEnum]
	given fmtListLocationsResponse: Format[Schema.ListLocationsResponse] = Json.format[Schema.ListLocationsResponse]
	given fmtLocation: Format[Schema.Location] = Json.format[Schema.Location]
	given fmtLocationMetadata: Format[Schema.LocationMetadata] = Json.format[Schema.LocationMetadata]
	given fmtOperationMetadataV1: Format[Schema.OperationMetadataV1] = Json.format[Schema.OperationMetadataV1]
	given fmtCreateVersionMetadataV1: Format[Schema.CreateVersionMetadataV1] = Json.format[Schema.CreateVersionMetadataV1]
	given fmtOperationMetadataV1Alpha: Format[Schema.OperationMetadataV1Alpha] = Json.format[Schema.OperationMetadataV1Alpha]
	given fmtCreateVersionMetadataV1Alpha: Format[Schema.CreateVersionMetadataV1Alpha] = Json.format[Schema.CreateVersionMetadataV1Alpha]
	given fmtGoogleAppengineV1betaLocationMetadata: Format[Schema.GoogleAppengineV1betaLocationMetadata] = Json.format[Schema.GoogleAppengineV1betaLocationMetadata]
	given fmtOperationMetadataV1Beta: Format[Schema.OperationMetadataV1Beta] = Json.format[Schema.OperationMetadataV1Beta]
	given fmtCreateVersionMetadataV1Beta: Format[Schema.CreateVersionMetadataV1Beta] = Json.format[Schema.CreateVersionMetadataV1Beta]
	given fmtProjectEvent: Format[Schema.ProjectEvent] = Json.format[Schema.ProjectEvent]
	given fmtProjectsMetadata: Format[Schema.ProjectsMetadata] = Json.format[Schema.ProjectsMetadata]
	given fmtProjectEventPhaseEnum: Format[Schema.ProjectEvent.PhaseEnum] = JsonEnumFormat[Schema.ProjectEvent.PhaseEnum]
	given fmtContainerState: Format[Schema.ContainerState] = Json.format[Schema.ContainerState]
	given fmtProjectsMetadataConsumerProjectStateEnum: Format[Schema.ProjectsMetadata.ConsumerProjectStateEnum] = JsonEnumFormat[Schema.ProjectsMetadata.ConsumerProjectStateEnum]
	given fmtGceTag: Format[Schema.GceTag] = Json.format[Schema.GceTag]
	given fmtContainerStateStateEnum: Format[Schema.ContainerState.StateEnum] = JsonEnumFormat[Schema.ContainerState.StateEnum]
	given fmtReasons: Format[Schema.Reasons] = Json.format[Schema.Reasons]
	given fmtReasonsServiceManagementEnum: Format[Schema.Reasons.ServiceManagementEnum] = JsonEnumFormat[Schema.Reasons.ServiceManagementEnum]
	given fmtReasonsDataGovernanceEnum: Format[Schema.Reasons.DataGovernanceEnum] = JsonEnumFormat[Schema.Reasons.DataGovernanceEnum]
	given fmtReasonsAbuseEnum: Format[Schema.Reasons.AbuseEnum] = JsonEnumFormat[Schema.Reasons.AbuseEnum]
	given fmtReasonsBillingEnum: Format[Schema.Reasons.BillingEnum] = JsonEnumFormat[Schema.Reasons.BillingEnum]
	given fmtReasonsServiceActivationEnum: Format[Schema.Reasons.ServiceActivationEnum] = JsonEnumFormat[Schema.Reasons.ServiceActivationEnum]
}
