package com.boresjo.play.api.google.content

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaAccountIdentifier: Conversion[List[Schema.AccountIdentifier], Option[List[Schema.AccountIdentifier]]] = (fun: List[Schema.AccountIdentifier]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putListSchemaAccountsCustomBatchRequestEntry: Conversion[List[Schema.AccountsCustomBatchRequestEntry], Option[List[Schema.AccountsCustomBatchRequestEntry]]] = (fun: List[Schema.AccountsCustomBatchRequestEntry]) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putSchemaAccount: Conversion[Schema.Account, Option[Schema.Account]] = (fun: Schema.Account) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaAccountsCustomBatchRequestEntryLinkRequest: Conversion[Schema.AccountsCustomBatchRequestEntryLinkRequest, Option[Schema.AccountsCustomBatchRequestEntryLinkRequest]] = (fun: Schema.AccountsCustomBatchRequestEntryLinkRequest) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putListSchemaAccountUser: Conversion[List[Schema.AccountUser], Option[List[Schema.AccountUser]]] = (fun: List[Schema.AccountUser]) => Option(fun)
		given putListSchemaAccountYouTubeChannelLink: Conversion[List[Schema.AccountYouTubeChannelLink], Option[List[Schema.AccountYouTubeChannelLink]]] = (fun: List[Schema.AccountYouTubeChannelLink]) => Option(fun)
		given putSchemaAccountGoogleMyBusinessLink: Conversion[Schema.AccountGoogleMyBusinessLink, Option[Schema.AccountGoogleMyBusinessLink]] = (fun: Schema.AccountGoogleMyBusinessLink) => Option(fun)
		given putSchemaAccountBusinessInformation: Conversion[Schema.AccountBusinessInformation, Option[Schema.AccountBusinessInformation]] = (fun: Schema.AccountBusinessInformation) => Option(fun)
		given putSchemaAccountBusinessIdentity: Conversion[Schema.AccountBusinessIdentity, Option[Schema.AccountBusinessIdentity]] = (fun: Schema.AccountBusinessIdentity) => Option(fun)
		given putSchemaAccountAutomaticImprovements: Conversion[Schema.AccountAutomaticImprovements, Option[Schema.AccountAutomaticImprovements]] = (fun: Schema.AccountAutomaticImprovements) => Option(fun)
		given putListSchemaAccountAdsLink: Conversion[List[Schema.AccountAdsLink], Option[List[Schema.AccountAdsLink]]] = (fun: List[Schema.AccountAdsLink]) => Option(fun)
		given putSchemaAccountConversionSettings: Conversion[Schema.AccountConversionSettings, Option[Schema.AccountConversionSettings]] = (fun: Schema.AccountConversionSettings) => Option(fun)
		given putSchemaAccountAddress: Conversion[Schema.AccountAddress, Option[Schema.AccountAddress]] = (fun: Schema.AccountAddress) => Option(fun)
		given putSchemaAccountCustomerService: Conversion[Schema.AccountCustomerService, Option[Schema.AccountCustomerService]] = (fun: Schema.AccountCustomerService) => Option(fun)
		given putSchemaAccountIdentityType: Conversion[Schema.AccountIdentityType, Option[Schema.AccountIdentityType]] = (fun: Schema.AccountIdentityType) => Option(fun)
		given putSchemaAccountItemUpdates: Conversion[Schema.AccountItemUpdates, Option[Schema.AccountItemUpdates]] = (fun: Schema.AccountItemUpdates) => Option(fun)
		given putSchemaAccountImageImprovements: Conversion[Schema.AccountImageImprovements, Option[Schema.AccountImageImprovements]] = (fun: Schema.AccountImageImprovements) => Option(fun)
		given putSchemaAccountShippingImprovements: Conversion[Schema.AccountShippingImprovements, Option[Schema.AccountShippingImprovements]] = (fun: Schema.AccountShippingImprovements) => Option(fun)
		given putSchemaAccountItemUpdatesSettings: Conversion[Schema.AccountItemUpdatesSettings, Option[Schema.AccountItemUpdatesSettings]] = (fun: Schema.AccountItemUpdatesSettings) => Option(fun)
		given putSchemaAccountImageImprovementsSettings: Conversion[Schema.AccountImageImprovementsSettings, Option[Schema.AccountImageImprovementsSettings]] = (fun: Schema.AccountImageImprovementsSettings) => Option(fun)
		given putListSchemaAccountsCustomBatchResponseEntry: Conversion[List[Schema.AccountsCustomBatchResponseEntry], Option[List[Schema.AccountsCustomBatchResponseEntry]]] = (fun: List[Schema.AccountsCustomBatchResponseEntry]) => Option(fun)
		given putSchemaErrors: Conversion[Schema.Errors, Option[Schema.Errors]] = (fun: Schema.Errors) => Option(fun)
		given putListSchemaError: Conversion[List[Schema.Error], Option[List[Schema.Error]]] = (fun: List[Schema.Error]) => Option(fun)
		given putSchemaPaymentServiceProviderLinkInfo: Conversion[Schema.PaymentServiceProviderLinkInfo, Option[Schema.PaymentServiceProviderLinkInfo]] = (fun: Schema.PaymentServiceProviderLinkInfo) => Option(fun)
		given putSchemaECommercePlatformLinkInfo: Conversion[Schema.ECommercePlatformLinkInfo, Option[Schema.ECommercePlatformLinkInfo]] = (fun: Schema.ECommercePlatformLinkInfo) => Option(fun)
		given putListSchemaAccount: Conversion[List[Schema.Account], Option[List[Schema.Account]]] = (fun: List[Schema.Account]) => Option(fun)
		given putListSchemaLinkedAccount: Conversion[List[Schema.LinkedAccount], Option[List[Schema.LinkedAccount]]] = (fun: List[Schema.LinkedAccount]) => Option(fun)
		given putListSchemaLinkService: Conversion[List[Schema.LinkService], Option[List[Schema.LinkService]]] = (fun: List[Schema.LinkService]) => Option(fun)
		given putListSchemaAccountstatusesCustomBatchRequestEntry: Conversion[List[Schema.AccountstatusesCustomBatchRequestEntry], Option[List[Schema.AccountstatusesCustomBatchRequestEntry]]] = (fun: List[Schema.AccountstatusesCustomBatchRequestEntry]) => Option(fun)
		given putListSchemaAccountstatusesCustomBatchResponseEntry: Conversion[List[Schema.AccountstatusesCustomBatchResponseEntry], Option[List[Schema.AccountstatusesCustomBatchResponseEntry]]] = (fun: List[Schema.AccountstatusesCustomBatchResponseEntry]) => Option(fun)
		given putSchemaAccountStatus: Conversion[Schema.AccountStatus, Option[Schema.AccountStatus]] = (fun: Schema.AccountStatus) => Option(fun)
		given putListSchemaAccountStatusAccountLevelIssue: Conversion[List[Schema.AccountStatusAccountLevelIssue], Option[List[Schema.AccountStatusAccountLevelIssue]]] = (fun: List[Schema.AccountStatusAccountLevelIssue]) => Option(fun)
		given putListSchemaAccountStatusProducts: Conversion[List[Schema.AccountStatusProducts], Option[List[Schema.AccountStatusProducts]]] = (fun: List[Schema.AccountStatusProducts]) => Option(fun)
		given putSchemaAccountStatusStatistics: Conversion[Schema.AccountStatusStatistics, Option[Schema.AccountStatusStatistics]] = (fun: Schema.AccountStatusStatistics) => Option(fun)
		given putListSchemaAccountStatusItemLevelIssue: Conversion[List[Schema.AccountStatusItemLevelIssue], Option[List[Schema.AccountStatusItemLevelIssue]]] = (fun: List[Schema.AccountStatusItemLevelIssue]) => Option(fun)
		given putListSchemaAccountStatus: Conversion[List[Schema.AccountStatus], Option[List[Schema.AccountStatus]]] = (fun: List[Schema.AccountStatus]) => Option(fun)
		given putListSchemaAccounttaxCustomBatchRequestEntry: Conversion[List[Schema.AccounttaxCustomBatchRequestEntry], Option[List[Schema.AccounttaxCustomBatchRequestEntry]]] = (fun: List[Schema.AccounttaxCustomBatchRequestEntry]) => Option(fun)
		given putSchemaAccountTax: Conversion[Schema.AccountTax, Option[Schema.AccountTax]] = (fun: Schema.AccountTax) => Option(fun)
		given putListSchemaAccountTaxTaxRule: Conversion[List[Schema.AccountTaxTaxRule], Option[List[Schema.AccountTaxTaxRule]]] = (fun: List[Schema.AccountTaxTaxRule]) => Option(fun)
		given putListSchemaAccounttaxCustomBatchResponseEntry: Conversion[List[Schema.AccounttaxCustomBatchResponseEntry], Option[List[Schema.AccounttaxCustomBatchResponseEntry]]] = (fun: List[Schema.AccounttaxCustomBatchResponseEntry]) => Option(fun)
		given putListSchemaAccountTax: Conversion[List[Schema.AccountTax], Option[List[Schema.AccountTax]]] = (fun: List[Schema.AccountTax]) => Option(fun)
		given putListSchemaDatafeedsCustomBatchRequestEntry: Conversion[List[Schema.DatafeedsCustomBatchRequestEntry], Option[List[Schema.DatafeedsCustomBatchRequestEntry]]] = (fun: List[Schema.DatafeedsCustomBatchRequestEntry]) => Option(fun)
		given putSchemaDatafeed: Conversion[Schema.Datafeed, Option[Schema.Datafeed]] = (fun: Schema.Datafeed) => Option(fun)
		given putSchemaDatafeedFetchSchedule: Conversion[Schema.DatafeedFetchSchedule, Option[Schema.DatafeedFetchSchedule]] = (fun: Schema.DatafeedFetchSchedule) => Option(fun)
		given putSchemaDatafeedFormat: Conversion[Schema.DatafeedFormat, Option[Schema.DatafeedFormat]] = (fun: Schema.DatafeedFormat) => Option(fun)
		given putListSchemaDatafeedTarget: Conversion[List[Schema.DatafeedTarget], Option[List[Schema.DatafeedTarget]]] = (fun: List[Schema.DatafeedTarget]) => Option(fun)
		given putListSchemaDatafeedsCustomBatchResponseEntry: Conversion[List[Schema.DatafeedsCustomBatchResponseEntry], Option[List[Schema.DatafeedsCustomBatchResponseEntry]]] = (fun: List[Schema.DatafeedsCustomBatchResponseEntry]) => Option(fun)
		given putListSchemaDatafeed: Conversion[List[Schema.Datafeed], Option[List[Schema.Datafeed]]] = (fun: List[Schema.Datafeed]) => Option(fun)
		given putListSchemaDatafeedstatusesCustomBatchRequestEntry: Conversion[List[Schema.DatafeedstatusesCustomBatchRequestEntry], Option[List[Schema.DatafeedstatusesCustomBatchRequestEntry]]] = (fun: List[Schema.DatafeedstatusesCustomBatchRequestEntry]) => Option(fun)
		given putListSchemaDatafeedstatusesCustomBatchResponseEntry: Conversion[List[Schema.DatafeedstatusesCustomBatchResponseEntry], Option[List[Schema.DatafeedstatusesCustomBatchResponseEntry]]] = (fun: List[Schema.DatafeedstatusesCustomBatchResponseEntry]) => Option(fun)
		given putSchemaDatafeedStatus: Conversion[Schema.DatafeedStatus, Option[Schema.DatafeedStatus]] = (fun: Schema.DatafeedStatus) => Option(fun)
		given putListSchemaDatafeedStatusError: Conversion[List[Schema.DatafeedStatusError], Option[List[Schema.DatafeedStatusError]]] = (fun: List[Schema.DatafeedStatusError]) => Option(fun)
		given putListSchemaDatafeedStatusExample: Conversion[List[Schema.DatafeedStatusExample], Option[List[Schema.DatafeedStatusExample]]] = (fun: List[Schema.DatafeedStatusExample]) => Option(fun)
		given putListSchemaDatafeedStatus: Conversion[List[Schema.DatafeedStatus], Option[List[Schema.DatafeedStatus]]] = (fun: List[Schema.DatafeedStatus]) => Option(fun)
		given putListSchemaLiasettingsCustomBatchRequestEntry: Conversion[List[Schema.LiasettingsCustomBatchRequestEntry], Option[List[Schema.LiasettingsCustomBatchRequestEntry]]] = (fun: List[Schema.LiasettingsCustomBatchRequestEntry]) => Option(fun)
		given putSchemaLiaSettings: Conversion[Schema.LiaSettings, Option[Schema.LiaSettings]] = (fun: Schema.LiaSettings) => Option(fun)
		given putSchemaLiaOmnichannelExperience: Conversion[Schema.LiaOmnichannelExperience, Option[Schema.LiaOmnichannelExperience]] = (fun: Schema.LiaOmnichannelExperience) => Option(fun)
		given putListSchemaLiaCountrySettings: Conversion[List[Schema.LiaCountrySettings], Option[List[Schema.LiaCountrySettings]]] = (fun: List[Schema.LiaCountrySettings]) => Option(fun)
		given putSchemaLiaInventorySettings: Conversion[Schema.LiaInventorySettings, Option[Schema.LiaInventorySettings]] = (fun: Schema.LiaInventorySettings) => Option(fun)
		given putSchemaLiaOnDisplayToOrderSettings: Conversion[Schema.LiaOnDisplayToOrderSettings, Option[Schema.LiaOnDisplayToOrderSettings]] = (fun: Schema.LiaOnDisplayToOrderSettings) => Option(fun)
		given putSchemaLiaAboutPageSettings: Conversion[Schema.LiaAboutPageSettings, Option[Schema.LiaAboutPageSettings]] = (fun: Schema.LiaAboutPageSettings) => Option(fun)
		given putSchemaLiaPosDataProvider: Conversion[Schema.LiaPosDataProvider, Option[Schema.LiaPosDataProvider]] = (fun: Schema.LiaPosDataProvider) => Option(fun)
		given putListSchemaLiasettingsCustomBatchResponseEntry: Conversion[List[Schema.LiasettingsCustomBatchResponseEntry], Option[List[Schema.LiasettingsCustomBatchResponseEntry]]] = (fun: List[Schema.LiasettingsCustomBatchResponseEntry]) => Option(fun)
		given putSchemaGmbAccounts: Conversion[Schema.GmbAccounts, Option[Schema.GmbAccounts]] = (fun: Schema.GmbAccounts) => Option(fun)
		given putListSchemaPosDataProviders: Conversion[List[Schema.PosDataProviders], Option[List[Schema.PosDataProviders]]] = (fun: List[Schema.PosDataProviders]) => Option(fun)
		given putListSchemaGmbAccountsGmbAccount: Conversion[List[Schema.GmbAccountsGmbAccount], Option[List[Schema.GmbAccountsGmbAccount]]] = (fun: List[Schema.GmbAccountsGmbAccount]) => Option(fun)
		given putListSchemaPosDataProvidersPosDataProvider: Conversion[List[Schema.PosDataProvidersPosDataProvider], Option[List[Schema.PosDataProvidersPosDataProvider]]] = (fun: List[Schema.PosDataProvidersPosDataProvider]) => Option(fun)
		given putListSchemaLiaSettings: Conversion[List[Schema.LiaSettings], Option[List[Schema.LiaSettings]]] = (fun: List[Schema.LiaSettings]) => Option(fun)
		given putListSchemaLocalinventoryCustomBatchRequestEntry: Conversion[List[Schema.LocalinventoryCustomBatchRequestEntry], Option[List[Schema.LocalinventoryCustomBatchRequestEntry]]] = (fun: List[Schema.LocalinventoryCustomBatchRequestEntry]) => Option(fun)
		given putSchemaLocalInventory: Conversion[Schema.LocalInventory, Option[Schema.LocalInventory]] = (fun: Schema.LocalInventory) => Option(fun)
		given putSchemaPrice: Conversion[Schema.Price, Option[Schema.Price]] = (fun: Schema.Price) => Option(fun)
		given putListSchemaCustomAttribute: Conversion[List[Schema.CustomAttribute], Option[List[Schema.CustomAttribute]]] = (fun: List[Schema.CustomAttribute]) => Option(fun)
		given putListSchemaLocalinventoryCustomBatchResponseEntry: Conversion[List[Schema.LocalinventoryCustomBatchResponseEntry], Option[List[Schema.LocalinventoryCustomBatchResponseEntry]]] = (fun: List[Schema.LocalinventoryCustomBatchResponseEntry]) => Option(fun)
		given putListSchemaPosCustomBatchRequestEntry: Conversion[List[Schema.PosCustomBatchRequestEntry], Option[List[Schema.PosCustomBatchRequestEntry]]] = (fun: List[Schema.PosCustomBatchRequestEntry]) => Option(fun)
		given putSchemaPosStore: Conversion[Schema.PosStore, Option[Schema.PosStore]] = (fun: Schema.PosStore) => Option(fun)
		given putSchemaPosInventory: Conversion[Schema.PosInventory, Option[Schema.PosInventory]] = (fun: Schema.PosInventory) => Option(fun)
		given putSchemaPosSale: Conversion[Schema.PosSale, Option[Schema.PosSale]] = (fun: Schema.PosSale) => Option(fun)
		given putListSchemaPosCustomBatchResponseEntry: Conversion[List[Schema.PosCustomBatchResponseEntry], Option[List[Schema.PosCustomBatchResponseEntry]]] = (fun: List[Schema.PosCustomBatchResponseEntry]) => Option(fun)
		given putListSchemaPosStore: Conversion[List[Schema.PosStore], Option[List[Schema.PosStore]]] = (fun: List[Schema.PosStore]) => Option(fun)
		given putListSchemaProductsCustomBatchRequestEntry: Conversion[List[Schema.ProductsCustomBatchRequestEntry], Option[List[Schema.ProductsCustomBatchRequestEntry]]] = (fun: List[Schema.ProductsCustomBatchRequestEntry]) => Option(fun)
		given putSchemaProduct: Conversion[Schema.Product, Option[Schema.Product]] = (fun: Schema.Product) => Option(fun)
		given putSchemaProductDimension: Conversion[Schema.ProductDimension, Option[Schema.ProductDimension]] = (fun: Schema.ProductDimension) => Option(fun)
		given putSchemaProductWeight: Conversion[Schema.ProductWeight, Option[Schema.ProductWeight]] = (fun: Schema.ProductWeight) => Option(fun)
		given putListSchemaProductShipping: Conversion[List[Schema.ProductShipping], Option[List[Schema.ProductShipping]]] = (fun: List[Schema.ProductShipping]) => Option(fun)
		given putListSchemaFreeShippingThreshold: Conversion[List[Schema.FreeShippingThreshold], Option[List[Schema.FreeShippingThreshold]]] = (fun: List[Schema.FreeShippingThreshold]) => Option(fun)
		given putSchemaProductShippingWeight: Conversion[Schema.ProductShippingWeight, Option[Schema.ProductShippingWeight]] = (fun: Schema.ProductShippingWeight) => Option(fun)
		given putListSchemaProductTax: Conversion[List[Schema.ProductTax], Option[List[Schema.ProductTax]]] = (fun: List[Schema.ProductTax]) => Option(fun)
		given putSchemaInstallment: Conversion[Schema.Installment, Option[Schema.Installment]] = (fun: Schema.Installment) => Option(fun)
		given putSchemaLoyaltyProgram: Conversion[Schema.LoyaltyProgram, Option[Schema.LoyaltyProgram]] = (fun: Schema.LoyaltyProgram) => Option(fun)
		given putListSchemaLoyaltyProgram: Conversion[List[Schema.LoyaltyProgram], Option[List[Schema.LoyaltyProgram]]] = (fun: List[Schema.LoyaltyProgram]) => Option(fun)
		given putSchemaProductUnitPricingMeasure: Conversion[Schema.ProductUnitPricingMeasure, Option[Schema.ProductUnitPricingMeasure]] = (fun: Schema.ProductUnitPricingMeasure) => Option(fun)
		given putSchemaProductUnitPricingBaseMeasure: Conversion[Schema.ProductUnitPricingBaseMeasure, Option[Schema.ProductUnitPricingBaseMeasure]] = (fun: Schema.ProductUnitPricingBaseMeasure) => Option(fun)
		given putSchemaProductShippingDimension: Conversion[Schema.ProductShippingDimension, Option[Schema.ProductShippingDimension]] = (fun: Schema.ProductShippingDimension) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putListSchemaProductProductDetail: Conversion[List[Schema.ProductProductDetail], Option[List[Schema.ProductProductDetail]]] = (fun: List[Schema.ProductProductDetail]) => Option(fun)
		given putSchemaProductSubscriptionCost: Conversion[Schema.ProductSubscriptionCost, Option[Schema.ProductSubscriptionCost]] = (fun: Schema.ProductSubscriptionCost) => Option(fun)
		given putListSchemaCloudExportAdditionalProperties: Conversion[List[Schema.CloudExportAdditionalProperties], Option[List[Schema.CloudExportAdditionalProperties]]] = (fun: List[Schema.CloudExportAdditionalProperties]) => Option(fun)
		given putListSchemaProductCertification: Conversion[List[Schema.ProductCertification], Option[List[Schema.ProductCertification]]] = (fun: List[Schema.ProductCertification]) => Option(fun)
		given putSchemaProductStructuredTitle: Conversion[Schema.ProductStructuredTitle, Option[Schema.ProductStructuredTitle]] = (fun: Schema.ProductStructuredTitle) => Option(fun)
		given putSchemaProductStructuredDescription: Conversion[Schema.ProductStructuredDescription, Option[Schema.ProductStructuredDescription]] = (fun: Schema.ProductStructuredDescription) => Option(fun)
		given putListBigDecimal: Conversion[List[BigDecimal], Option[List[BigDecimal]]] = (fun: List[BigDecimal]) => Option(fun)
		given putListSchemaProductsCustomBatchResponseEntry: Conversion[List[Schema.ProductsCustomBatchResponseEntry], Option[List[Schema.ProductsCustomBatchResponseEntry]]] = (fun: List[Schema.ProductsCustomBatchResponseEntry]) => Option(fun)
		given putListSchemaProduct: Conversion[List[Schema.Product], Option[List[Schema.Product]]] = (fun: List[Schema.Product]) => Option(fun)
		given putListSchemaProductstatusesCustomBatchRequestEntry: Conversion[List[Schema.ProductstatusesCustomBatchRequestEntry], Option[List[Schema.ProductstatusesCustomBatchRequestEntry]]] = (fun: List[Schema.ProductstatusesCustomBatchRequestEntry]) => Option(fun)
		given putListSchemaProductstatusesCustomBatchResponseEntry: Conversion[List[Schema.ProductstatusesCustomBatchResponseEntry], Option[List[Schema.ProductstatusesCustomBatchResponseEntry]]] = (fun: List[Schema.ProductstatusesCustomBatchResponseEntry]) => Option(fun)
		given putSchemaProductStatus: Conversion[Schema.ProductStatus, Option[Schema.ProductStatus]] = (fun: Schema.ProductStatus) => Option(fun)
		given putListSchemaProductStatusDestinationStatus: Conversion[List[Schema.ProductStatusDestinationStatus], Option[List[Schema.ProductStatusDestinationStatus]]] = (fun: List[Schema.ProductStatusDestinationStatus]) => Option(fun)
		given putListSchemaProductStatusItemLevelIssue: Conversion[List[Schema.ProductStatusItemLevelIssue], Option[List[Schema.ProductStatusItemLevelIssue]]] = (fun: List[Schema.ProductStatusItemLevelIssue]) => Option(fun)
		given putListSchemaProductStatus: Conversion[List[Schema.ProductStatus], Option[List[Schema.ProductStatus]]] = (fun: List[Schema.ProductStatus]) => Option(fun)
		given putListSchemaRegionalinventoryCustomBatchRequestEntry: Conversion[List[Schema.RegionalinventoryCustomBatchRequestEntry], Option[List[Schema.RegionalinventoryCustomBatchRequestEntry]]] = (fun: List[Schema.RegionalinventoryCustomBatchRequestEntry]) => Option(fun)
		given putSchemaRegionalInventory: Conversion[Schema.RegionalInventory, Option[Schema.RegionalInventory]] = (fun: Schema.RegionalInventory) => Option(fun)
		given putListSchemaRegionalinventoryCustomBatchResponseEntry: Conversion[List[Schema.RegionalinventoryCustomBatchResponseEntry], Option[List[Schema.RegionalinventoryCustomBatchResponseEntry]]] = (fun: List[Schema.RegionalinventoryCustomBatchResponseEntry]) => Option(fun)
		given putListSchemaReturnaddressCustomBatchRequestEntry: Conversion[List[Schema.ReturnaddressCustomBatchRequestEntry], Option[List[Schema.ReturnaddressCustomBatchRequestEntry]]] = (fun: List[Schema.ReturnaddressCustomBatchRequestEntry]) => Option(fun)
		given putSchemaReturnAddress: Conversion[Schema.ReturnAddress, Option[Schema.ReturnAddress]] = (fun: Schema.ReturnAddress) => Option(fun)
		given putSchemaReturnAddressAddress: Conversion[Schema.ReturnAddressAddress, Option[Schema.ReturnAddressAddress]] = (fun: Schema.ReturnAddressAddress) => Option(fun)
		given putListSchemaReturnaddressCustomBatchResponseEntry: Conversion[List[Schema.ReturnaddressCustomBatchResponseEntry], Option[List[Schema.ReturnaddressCustomBatchResponseEntry]]] = (fun: List[Schema.ReturnaddressCustomBatchResponseEntry]) => Option(fun)
		given putListSchemaReturnAddress: Conversion[List[Schema.ReturnAddress], Option[List[Schema.ReturnAddress]]] = (fun: List[Schema.ReturnAddress]) => Option(fun)
		given putListSchemaReturnpolicyCustomBatchRequestEntry: Conversion[List[Schema.ReturnpolicyCustomBatchRequestEntry], Option[List[Schema.ReturnpolicyCustomBatchRequestEntry]]] = (fun: List[Schema.ReturnpolicyCustomBatchRequestEntry]) => Option(fun)
		given putSchemaReturnPolicy: Conversion[Schema.ReturnPolicy, Option[Schema.ReturnPolicy]] = (fun: Schema.ReturnPolicy) => Option(fun)
		given putSchemaReturnPolicyPolicy: Conversion[Schema.ReturnPolicyPolicy, Option[Schema.ReturnPolicyPolicy]] = (fun: Schema.ReturnPolicyPolicy) => Option(fun)
		given putListSchemaReturnPolicySeasonalOverride: Conversion[List[Schema.ReturnPolicySeasonalOverride], Option[List[Schema.ReturnPolicySeasonalOverride]]] = (fun: List[Schema.ReturnPolicySeasonalOverride]) => Option(fun)
		given putListSchemaReturnpolicyCustomBatchResponseEntry: Conversion[List[Schema.ReturnpolicyCustomBatchResponseEntry], Option[List[Schema.ReturnpolicyCustomBatchResponseEntry]]] = (fun: List[Schema.ReturnpolicyCustomBatchResponseEntry]) => Option(fun)
		given putListSchemaReturnPolicy: Conversion[List[Schema.ReturnPolicy], Option[List[Schema.ReturnPolicy]]] = (fun: List[Schema.ReturnPolicy]) => Option(fun)
		given putListSchemaShippingsettingsCustomBatchRequestEntry: Conversion[List[Schema.ShippingsettingsCustomBatchRequestEntry], Option[List[Schema.ShippingsettingsCustomBatchRequestEntry]]] = (fun: List[Schema.ShippingsettingsCustomBatchRequestEntry]) => Option(fun)
		given putSchemaShippingSettings: Conversion[Schema.ShippingSettings, Option[Schema.ShippingSettings]] = (fun: Schema.ShippingSettings) => Option(fun)
		given putListSchemaService: Conversion[List[Schema.Service], Option[List[Schema.Service]]] = (fun: List[Schema.Service]) => Option(fun)
		given putListSchemaPostalCodeGroup: Conversion[List[Schema.PostalCodeGroup], Option[List[Schema.PostalCodeGroup]]] = (fun: List[Schema.PostalCodeGroup]) => Option(fun)
		given putListSchemaWarehouse: Conversion[List[Schema.Warehouse], Option[List[Schema.Warehouse]]] = (fun: List[Schema.Warehouse]) => Option(fun)
		given putSchemaDeliveryTime: Conversion[Schema.DeliveryTime, Option[Schema.DeliveryTime]] = (fun: Schema.DeliveryTime) => Option(fun)
		given putListSchemaRateGroup: Conversion[List[Schema.RateGroup], Option[List[Schema.RateGroup]]] = (fun: List[Schema.RateGroup]) => Option(fun)
		given putSchemaPickupCarrierService: Conversion[Schema.PickupCarrierService, Option[Schema.PickupCarrierService]] = (fun: Schema.PickupCarrierService) => Option(fun)
		given putSchemaMinimumOrderValueTable: Conversion[Schema.MinimumOrderValueTable, Option[Schema.MinimumOrderValueTable]] = (fun: Schema.MinimumOrderValueTable) => Option(fun)
		given putSchemaServiceStoreConfig: Conversion[Schema.ServiceStoreConfig, Option[Schema.ServiceStoreConfig]] = (fun: Schema.ServiceStoreConfig) => Option(fun)
		given putListSchemaHolidayCutoff: Conversion[List[Schema.HolidayCutoff], Option[List[Schema.HolidayCutoff]]] = (fun: List[Schema.HolidayCutoff]) => Option(fun)
		given putSchemaCutoffTime: Conversion[Schema.CutoffTime, Option[Schema.CutoffTime]] = (fun: Schema.CutoffTime) => Option(fun)
		given putSchemaTransitTable: Conversion[Schema.TransitTable, Option[Schema.TransitTable]] = (fun: Schema.TransitTable) => Option(fun)
		given putSchemaBusinessDayConfig: Conversion[Schema.BusinessDayConfig, Option[Schema.BusinessDayConfig]] = (fun: Schema.BusinessDayConfig) => Option(fun)
		given putListSchemaWarehouseBasedDeliveryTime: Conversion[List[Schema.WarehouseBasedDeliveryTime], Option[List[Schema.WarehouseBasedDeliveryTime]]] = (fun: List[Schema.WarehouseBasedDeliveryTime]) => Option(fun)
		given putListSchemaTransitTableTransitTimeRow: Conversion[List[Schema.TransitTableTransitTimeRow], Option[List[Schema.TransitTableTransitTimeRow]]] = (fun: List[Schema.TransitTableTransitTimeRow]) => Option(fun)
		given putListSchemaTransitTableTransitTimeRowTransitTimeValue: Conversion[List[Schema.TransitTableTransitTimeRowTransitTimeValue], Option[List[Schema.TransitTableTransitTimeRowTransitTimeValue]]] = (fun: List[Schema.TransitTableTransitTimeRowTransitTimeValue]) => Option(fun)
		given putSchemaValue: Conversion[Schema.Value, Option[Schema.Value]] = (fun: Schema.Value) => Option(fun)
		given putSchemaTable: Conversion[Schema.Table, Option[Schema.Table]] = (fun: Schema.Table) => Option(fun)
		given putListSchemaTable: Conversion[List[Schema.Table], Option[List[Schema.Table]]] = (fun: List[Schema.Table]) => Option(fun)
		given putListSchemaCarrierRate: Conversion[List[Schema.CarrierRate], Option[List[Schema.CarrierRate]]] = (fun: List[Schema.CarrierRate]) => Option(fun)
		given putSchemaHeaders: Conversion[Schema.Headers, Option[Schema.Headers]] = (fun: Schema.Headers) => Option(fun)
		given putListSchemaRow: Conversion[List[Schema.Row], Option[List[Schema.Row]]] = (fun: List[Schema.Row]) => Option(fun)
		given putListSchemaPrice: Conversion[List[Schema.Price], Option[List[Schema.Price]]] = (fun: List[Schema.Price]) => Option(fun)
		given putListSchemaWeight: Conversion[List[Schema.Weight], Option[List[Schema.Weight]]] = (fun: List[Schema.Weight]) => Option(fun)
		given putListSchemaLocationIdSet: Conversion[List[Schema.LocationIdSet], Option[List[Schema.LocationIdSet]]] = (fun: List[Schema.LocationIdSet]) => Option(fun)
		given putListSchemaValue: Conversion[List[Schema.Value], Option[List[Schema.Value]]] = (fun: List[Schema.Value]) => Option(fun)
		given putListSchemaMinimumOrderValueTableStoreCodeSetWithMov: Conversion[List[Schema.MinimumOrderValueTableStoreCodeSetWithMov], Option[List[Schema.MinimumOrderValueTableStoreCodeSetWithMov]]] = (fun: List[Schema.MinimumOrderValueTableStoreCodeSetWithMov]) => Option(fun)
		given putSchemaServiceStoreConfigCutoffConfig: Conversion[Schema.ServiceStoreConfigCutoffConfig, Option[Schema.ServiceStoreConfigCutoffConfig]] = (fun: Schema.ServiceStoreConfigCutoffConfig) => Option(fun)
		given putSchemaDistance: Conversion[Schema.Distance, Option[Schema.Distance]] = (fun: Schema.Distance) => Option(fun)
		given putSchemaServiceStoreConfigCutoffConfigLocalCutoffTime: Conversion[Schema.ServiceStoreConfigCutoffConfigLocalCutoffTime, Option[Schema.ServiceStoreConfigCutoffConfigLocalCutoffTime]] = (fun: Schema.ServiceStoreConfigCutoffConfigLocalCutoffTime) => Option(fun)
		given putListSchemaPostalCodeRange: Conversion[List[Schema.PostalCodeRange], Option[List[Schema.PostalCodeRange]]] = (fun: List[Schema.PostalCodeRange]) => Option(fun)
		given putSchemaAddress: Conversion[Schema.Address, Option[Schema.Address]] = (fun: Schema.Address) => Option(fun)
		given putSchemaWarehouseCutoffTime: Conversion[Schema.WarehouseCutoffTime, Option[Schema.WarehouseCutoffTime]] = (fun: Schema.WarehouseCutoffTime) => Option(fun)
		given putListSchemaShippingsettingsCustomBatchResponseEntry: Conversion[List[Schema.ShippingsettingsCustomBatchResponseEntry], Option[List[Schema.ShippingsettingsCustomBatchResponseEntry]]] = (fun: List[Schema.ShippingsettingsCustomBatchResponseEntry]) => Option(fun)
		given putListSchemaCarriersCarrier: Conversion[List[Schema.CarriersCarrier], Option[List[Schema.CarriersCarrier]]] = (fun: List[Schema.CarriersCarrier]) => Option(fun)
		given putListSchemaHolidaysHoliday: Conversion[List[Schema.HolidaysHoliday], Option[List[Schema.HolidaysHoliday]]] = (fun: List[Schema.HolidaysHoliday]) => Option(fun)
		given putListSchemaPickupServicesPickupService: Conversion[List[Schema.PickupServicesPickupService], Option[List[Schema.PickupServicesPickupService]]] = (fun: List[Schema.PickupServicesPickupService]) => Option(fun)
		given putListSchemaShippingSettings: Conversion[List[Schema.ShippingSettings], Option[List[Schema.ShippingSettings]]] = (fun: List[Schema.ShippingSettings]) => Option(fun)
		given putSchemaAccountCredentialsPurposeEnum: Conversion[Schema.AccountCredentials.PurposeEnum, Option[Schema.AccountCredentials.PurposeEnum]] = (fun: Schema.AccountCredentials.PurposeEnum) => Option(fun)
		given putSchemaRequestPhoneVerificationRequestPhoneVerificationMethodEnum: Conversion[Schema.RequestPhoneVerificationRequest.PhoneVerificationMethodEnum, Option[Schema.RequestPhoneVerificationRequest.PhoneVerificationMethodEnum]] = (fun: Schema.RequestPhoneVerificationRequest.PhoneVerificationMethodEnum) => Option(fun)
		given putSchemaVerifyPhoneNumberRequestPhoneVerificationMethodEnum: Conversion[Schema.VerifyPhoneNumberRequest.PhoneVerificationMethodEnum, Option[Schema.VerifyPhoneNumberRequest.PhoneVerificationMethodEnum]] = (fun: Schema.VerifyPhoneNumberRequest.PhoneVerificationMethodEnum) => Option(fun)
		given putListSchemaAccountLabel: Conversion[List[Schema.AccountLabel], Option[List[Schema.AccountLabel]]] = (fun: List[Schema.AccountLabel]) => Option(fun)
		given putSchemaAccountLabelLabelTypeEnum: Conversion[Schema.AccountLabel.LabelTypeEnum, Option[Schema.AccountLabel.LabelTypeEnum]] = (fun: Schema.AccountLabel.LabelTypeEnum) => Option(fun)
		given putListSchemaCollectionFeaturedProduct: Conversion[List[Schema.CollectionFeaturedProduct], Option[List[Schema.CollectionFeaturedProduct]]] = (fun: List[Schema.CollectionFeaturedProduct]) => Option(fun)
		given putListSchemaCollection: Conversion[List[Schema.Collection], Option[List[Schema.Collection]]] = (fun: List[Schema.Collection]) => Option(fun)
		given putListSchemaMethodQuota: Conversion[List[Schema.MethodQuota], Option[List[Schema.MethodQuota]]] = (fun: List[Schema.MethodQuota]) => Option(fun)
		given putListSchemaCollectionStatusDestinationStatus: Conversion[List[Schema.CollectionStatusDestinationStatus], Option[List[Schema.CollectionStatusDestinationStatus]]] = (fun: List[Schema.CollectionStatusDestinationStatus]) => Option(fun)
		given putListSchemaCollectionStatusItemLevelIssue: Conversion[List[Schema.CollectionStatusItemLevelIssue], Option[List[Schema.CollectionStatusItemLevelIssue]]] = (fun: List[Schema.CollectionStatusItemLevelIssue]) => Option(fun)
		given putListSchemaCollectionStatus: Conversion[List[Schema.CollectionStatus], Option[List[Schema.CollectionStatus]]] = (fun: List[Schema.CollectionStatus]) => Option(fun)
		given putSchemaGoogleAnalyticsLink: Conversion[Schema.GoogleAnalyticsLink, Option[Schema.GoogleAnalyticsLink]] = (fun: Schema.GoogleAnalyticsLink) => Option(fun)
		given putSchemaMerchantCenterDestination: Conversion[Schema.MerchantCenterDestination, Option[Schema.MerchantCenterDestination]] = (fun: Schema.MerchantCenterDestination) => Option(fun)
		given putSchemaConversionSourceStateEnum: Conversion[Schema.ConversionSource.StateEnum, Option[Schema.ConversionSource.StateEnum]] = (fun: Schema.ConversionSource.StateEnum) => Option(fun)
		given putSchemaAttributionSettings: Conversion[Schema.AttributionSettings, Option[Schema.AttributionSettings]] = (fun: Schema.AttributionSettings) => Option(fun)
		given putSchemaAttributionSettingsAttributionModelEnum: Conversion[Schema.AttributionSettings.AttributionModelEnum, Option[Schema.AttributionSettings.AttributionModelEnum]] = (fun: Schema.AttributionSettings.AttributionModelEnum) => Option(fun)
		given putListSchemaAttributionSettingsConversionType: Conversion[List[Schema.AttributionSettingsConversionType], Option[List[Schema.AttributionSettingsConversionType]]] = (fun: List[Schema.AttributionSettingsConversionType]) => Option(fun)
		given putListSchemaConversionSource: Conversion[List[Schema.ConversionSource], Option[List[Schema.ConversionSource]]] = (fun: List[Schema.ConversionSource]) => Option(fun)
		given putSchemaFreeListingsProgramStatusGlobalStateEnum: Conversion[Schema.FreeListingsProgramStatus.GlobalStateEnum, Option[Schema.FreeListingsProgramStatus.GlobalStateEnum]] = (fun: Schema.FreeListingsProgramStatus.GlobalStateEnum) => Option(fun)
		given putListSchemaFreeListingsProgramStatusRegionStatus: Conversion[List[Schema.FreeListingsProgramStatusRegionStatus], Option[List[Schema.FreeListingsProgramStatusRegionStatus]]] = (fun: List[Schema.FreeListingsProgramStatusRegionStatus]) => Option(fun)
		given putSchemaFreeListingsProgramStatusRegionStatusEligibilityStatusEnum: Conversion[Schema.FreeListingsProgramStatusRegionStatus.EligibilityStatusEnum, Option[Schema.FreeListingsProgramStatusRegionStatus.EligibilityStatusEnum]] = (fun: Schema.FreeListingsProgramStatusRegionStatus.EligibilityStatusEnum) => Option(fun)
		given putSchemaFreeListingsProgramStatusRegionStatusReviewEligibilityStatusEnum: Conversion[Schema.FreeListingsProgramStatusRegionStatus.ReviewEligibilityStatusEnum, Option[Schema.FreeListingsProgramStatusRegionStatus.ReviewEligibilityStatusEnum]] = (fun: Schema.FreeListingsProgramStatusRegionStatus.ReviewEligibilityStatusEnum) => Option(fun)
		given putSchemaFreeListingsProgramStatusRegionStatusReviewIneligibilityReasonEnum: Conversion[Schema.FreeListingsProgramStatusRegionStatus.ReviewIneligibilityReasonEnum, Option[Schema.FreeListingsProgramStatusRegionStatus.ReviewIneligibilityReasonEnum]] = (fun: Schema.FreeListingsProgramStatusRegionStatus.ReviewIneligibilityReasonEnum) => Option(fun)
		given putSchemaFreeListingsProgramStatusReviewIneligibilityReasonDetails: Conversion[Schema.FreeListingsProgramStatusReviewIneligibilityReasonDetails, Option[Schema.FreeListingsProgramStatusReviewIneligibilityReasonDetails]] = (fun: Schema.FreeListingsProgramStatusReviewIneligibilityReasonDetails) => Option(fun)
		given putSchemaUrlSettings: Conversion[Schema.UrlSettings, Option[Schema.UrlSettings]] = (fun: Schema.UrlSettings) => Option(fun)
		given putSchemaCheckoutSettingsEnrollmentStateEnum: Conversion[Schema.CheckoutSettings.EnrollmentStateEnum, Option[Schema.CheckoutSettings.EnrollmentStateEnum]] = (fun: Schema.CheckoutSettings.EnrollmentStateEnum) => Option(fun)
		given putSchemaCheckoutSettingsReviewStateEnum: Conversion[Schema.CheckoutSettings.ReviewStateEnum, Option[Schema.CheckoutSettings.ReviewStateEnum]] = (fun: Schema.CheckoutSettings.ReviewStateEnum) => Option(fun)
		given putSchemaCheckoutSettingsEffectiveEnrollmentStateEnum: Conversion[Schema.CheckoutSettings.EffectiveEnrollmentStateEnum, Option[Schema.CheckoutSettings.EffectiveEnrollmentStateEnum]] = (fun: Schema.CheckoutSettings.EffectiveEnrollmentStateEnum) => Option(fun)
		given putSchemaCheckoutSettingsEffectiveReviewStateEnum: Conversion[Schema.CheckoutSettings.EffectiveReviewStateEnum, Option[Schema.CheckoutSettings.EffectiveReviewStateEnum]] = (fun: Schema.CheckoutSettings.EffectiveReviewStateEnum) => Option(fun)
		given putSchemaShoppingAdsProgramStatusGlobalStateEnum: Conversion[Schema.ShoppingAdsProgramStatus.GlobalStateEnum, Option[Schema.ShoppingAdsProgramStatus.GlobalStateEnum]] = (fun: Schema.ShoppingAdsProgramStatus.GlobalStateEnum) => Option(fun)
		given putListSchemaShoppingAdsProgramStatusRegionStatus: Conversion[List[Schema.ShoppingAdsProgramStatusRegionStatus], Option[List[Schema.ShoppingAdsProgramStatusRegionStatus]]] = (fun: List[Schema.ShoppingAdsProgramStatusRegionStatus]) => Option(fun)
		given putSchemaShoppingAdsProgramStatusRegionStatusEligibilityStatusEnum: Conversion[Schema.ShoppingAdsProgramStatusRegionStatus.EligibilityStatusEnum, Option[Schema.ShoppingAdsProgramStatusRegionStatus.EligibilityStatusEnum]] = (fun: Schema.ShoppingAdsProgramStatusRegionStatus.EligibilityStatusEnum) => Option(fun)
		given putSchemaShoppingAdsProgramStatusRegionStatusReviewEligibilityStatusEnum: Conversion[Schema.ShoppingAdsProgramStatusRegionStatus.ReviewEligibilityStatusEnum, Option[Schema.ShoppingAdsProgramStatusRegionStatus.ReviewEligibilityStatusEnum]] = (fun: Schema.ShoppingAdsProgramStatusRegionStatus.ReviewEligibilityStatusEnum) => Option(fun)
		given putSchemaShoppingAdsProgramStatusRegionStatusReviewIneligibilityReasonEnum: Conversion[Schema.ShoppingAdsProgramStatusRegionStatus.ReviewIneligibilityReasonEnum, Option[Schema.ShoppingAdsProgramStatusRegionStatus.ReviewIneligibilityReasonEnum]] = (fun: Schema.ShoppingAdsProgramStatusRegionStatus.ReviewIneligibilityReasonEnum) => Option(fun)
		given putSchemaShoppingAdsProgramStatusReviewIneligibilityReasonDetails: Conversion[Schema.ShoppingAdsProgramStatusReviewIneligibilityReasonDetails, Option[Schema.ShoppingAdsProgramStatusReviewIneligibilityReasonDetails]] = (fun: Schema.ShoppingAdsProgramStatusReviewIneligibilityReasonDetails) => Option(fun)
		given putListSchemaCss: Conversion[List[Schema.Css], Option[List[Schema.Css]]] = (fun: List[Schema.Css]) => Option(fun)
		given putSchemaAccountReturnCarrierCarrierCodeEnum: Conversion[Schema.AccountReturnCarrier.CarrierCodeEnum, Option[Schema.AccountReturnCarrier.CarrierCodeEnum]] = (fun: Schema.AccountReturnCarrier.CarrierCodeEnum) => Option(fun)
		given putListSchemaAccountReturnCarrier: Conversion[List[Schema.AccountReturnCarrier], Option[List[Schema.AccountReturnCarrier]]] = (fun: List[Schema.AccountReturnCarrier]) => Option(fun)
		given putListSchemaReportRow: Conversion[List[Schema.ReportRow], Option[List[Schema.ReportRow]]] = (fun: List[Schema.ReportRow]) => Option(fun)
		given putSchemaSegments: Conversion[Schema.Segments, Option[Schema.Segments]] = (fun: Schema.Segments) => Option(fun)
		given putSchemaMetrics: Conversion[Schema.Metrics, Option[Schema.Metrics]] = (fun: Schema.Metrics) => Option(fun)
		given putSchemaProductView: Conversion[Schema.ProductView, Option[Schema.ProductView]] = (fun: Schema.ProductView) => Option(fun)
		given putSchemaProductCluster: Conversion[Schema.ProductCluster, Option[Schema.ProductCluster]] = (fun: Schema.ProductCluster) => Option(fun)
		given putSchemaBrand: Conversion[Schema.Brand, Option[Schema.Brand]] = (fun: Schema.Brand) => Option(fun)
		given putSchemaBestSellers: Conversion[Schema.BestSellers, Option[Schema.BestSellers]] = (fun: Schema.BestSellers) => Option(fun)
		given putSchemaPriceCompetitiveness: Conversion[Schema.PriceCompetitiveness, Option[Schema.PriceCompetitiveness]] = (fun: Schema.PriceCompetitiveness) => Option(fun)
		given putSchemaPriceInsights: Conversion[Schema.PriceInsights, Option[Schema.PriceInsights]] = (fun: Schema.PriceInsights) => Option(fun)
		given putSchemaCompetitiveVisibility: Conversion[Schema.CompetitiveVisibility, Option[Schema.CompetitiveVisibility]] = (fun: Schema.CompetitiveVisibility) => Option(fun)
		given putSchemaTopicTrends: Conversion[Schema.TopicTrends, Option[Schema.TopicTrends]] = (fun: Schema.TopicTrends) => Option(fun)
		given putSchemaSegmentsProgramEnum: Conversion[Schema.Segments.ProgramEnum, Option[Schema.Segments.ProgramEnum]] = (fun: Schema.Segments.ProgramEnum) => Option(fun)
		given putSchemaDate: Conversion[Schema.Date, Option[Schema.Date]] = (fun: Schema.Date) => Option(fun)
		given putSchemaProductViewChannelEnum: Conversion[Schema.ProductView.ChannelEnum, Option[Schema.ProductView.ChannelEnum]] = (fun: Schema.ProductView.ChannelEnum) => Option(fun)
		given putSchemaProductViewAggregatedDestinationStatusEnum: Conversion[Schema.ProductView.AggregatedDestinationStatusEnum, Option[Schema.ProductView.AggregatedDestinationStatusEnum]] = (fun: Schema.ProductView.AggregatedDestinationStatusEnum) => Option(fun)
		given putListSchemaProductViewItemIssue: Conversion[List[Schema.ProductViewItemIssue], Option[List[Schema.ProductViewItemIssue]]] = (fun: List[Schema.ProductViewItemIssue]) => Option(fun)
		given putSchemaProductViewClickPotentialEnum: Conversion[Schema.ProductView.ClickPotentialEnum, Option[Schema.ProductView.ClickPotentialEnum]] = (fun: Schema.ProductView.ClickPotentialEnum) => Option(fun)
		given putSchemaProductViewItemIssueItemIssueType: Conversion[Schema.ProductViewItemIssueItemIssueType, Option[Schema.ProductViewItemIssueItemIssueType]] = (fun: Schema.ProductViewItemIssueItemIssueType) => Option(fun)
		given putSchemaProductViewItemIssueItemIssueSeverity: Conversion[Schema.ProductViewItemIssueItemIssueSeverity, Option[Schema.ProductViewItemIssueItemIssueSeverity]] = (fun: Schema.ProductViewItemIssueItemIssueSeverity) => Option(fun)
		given putSchemaProductViewItemIssueResolutionEnum: Conversion[Schema.ProductViewItemIssue.ResolutionEnum, Option[Schema.ProductViewItemIssue.ResolutionEnum]] = (fun: Schema.ProductViewItemIssue.ResolutionEnum) => Option(fun)
		given putListSchemaProductViewItemIssueIssueSeverityPerDestination: Conversion[List[Schema.ProductViewItemIssueIssueSeverityPerDestination], Option[List[Schema.ProductViewItemIssueIssueSeverityPerDestination]]] = (fun: List[Schema.ProductViewItemIssueIssueSeverityPerDestination]) => Option(fun)
		given putSchemaProductViewItemIssueItemIssueSeverityAggregatedSeverityEnum: Conversion[Schema.ProductViewItemIssueItemIssueSeverity.AggregatedSeverityEnum, Option[Schema.ProductViewItemIssueItemIssueSeverity.AggregatedSeverityEnum]] = (fun: Schema.ProductViewItemIssueItemIssueSeverity.AggregatedSeverityEnum) => Option(fun)
		given putSchemaProductClusterInventoryStatusEnum: Conversion[Schema.ProductCluster.InventoryStatusEnum, Option[Schema.ProductCluster.InventoryStatusEnum]] = (fun: Schema.ProductCluster.InventoryStatusEnum) => Option(fun)
		given putSchemaProductClusterBrandInventoryStatusEnum: Conversion[Schema.ProductCluster.BrandInventoryStatusEnum, Option[Schema.ProductCluster.BrandInventoryStatusEnum]] = (fun: Schema.ProductCluster.BrandInventoryStatusEnum) => Option(fun)
		given putSchemaBestSellersReportGranularityEnum: Conversion[Schema.BestSellers.ReportGranularityEnum, Option[Schema.BestSellers.ReportGranularityEnum]] = (fun: Schema.BestSellers.ReportGranularityEnum) => Option(fun)
		given putSchemaBestSellersRelativeDemandEnum: Conversion[Schema.BestSellers.RelativeDemandEnum, Option[Schema.BestSellers.RelativeDemandEnum]] = (fun: Schema.BestSellers.RelativeDemandEnum) => Option(fun)
		given putSchemaBestSellersPreviousRelativeDemandEnum: Conversion[Schema.BestSellers.PreviousRelativeDemandEnum, Option[Schema.BestSellers.PreviousRelativeDemandEnum]] = (fun: Schema.BestSellers.PreviousRelativeDemandEnum) => Option(fun)
		given putSchemaBestSellersRelativeDemandChangeEnum: Conversion[Schema.BestSellers.RelativeDemandChangeEnum, Option[Schema.BestSellers.RelativeDemandChangeEnum]] = (fun: Schema.BestSellers.RelativeDemandChangeEnum) => Option(fun)
		given putSchemaPriceInsightsEffectivenessEnum: Conversion[Schema.PriceInsights.EffectivenessEnum, Option[Schema.PriceInsights.EffectivenessEnum]] = (fun: Schema.PriceInsights.EffectivenessEnum) => Option(fun)
		given putSchemaCompetitiveVisibilityTrafficSourceEnum: Conversion[Schema.CompetitiveVisibility.TrafficSourceEnum, Option[Schema.CompetitiveVisibility.TrafficSourceEnum]] = (fun: Schema.CompetitiveVisibility.TrafficSourceEnum) => Option(fun)
		given putSchemaRenderAccountIssuesRequestPayloadContentOptionEnum: Conversion[Schema.RenderAccountIssuesRequestPayload.ContentOptionEnum, Option[Schema.RenderAccountIssuesRequestPayload.ContentOptionEnum]] = (fun: Schema.RenderAccountIssuesRequestPayload.ContentOptionEnum) => Option(fun)
		given putSchemaRenderAccountIssuesRequestPayloadUserInputActionOptionEnum: Conversion[Schema.RenderAccountIssuesRequestPayload.UserInputActionOptionEnum, Option[Schema.RenderAccountIssuesRequestPayload.UserInputActionOptionEnum]] = (fun: Schema.RenderAccountIssuesRequestPayload.UserInputActionOptionEnum) => Option(fun)
		given putListSchemaAccountIssue: Conversion[List[Schema.AccountIssue], Option[List[Schema.AccountIssue]]] = (fun: List[Schema.AccountIssue]) => Option(fun)
		given putSchemaAlternateDisputeResolution: Conversion[Schema.AlternateDisputeResolution, Option[Schema.AlternateDisputeResolution]] = (fun: Schema.AlternateDisputeResolution) => Option(fun)
		given putSchemaAccountIssueImpact: Conversion[Schema.AccountIssueImpact, Option[Schema.AccountIssueImpact]] = (fun: Schema.AccountIssueImpact) => Option(fun)
		given putListSchemaAction: Conversion[List[Schema.Action], Option[List[Schema.Action]]] = (fun: List[Schema.Action]) => Option(fun)
		given putSchemaAccountIssueImpactSeverityEnum: Conversion[Schema.AccountIssueImpact.SeverityEnum, Option[Schema.AccountIssueImpact.SeverityEnum]] = (fun: Schema.AccountIssueImpact.SeverityEnum) => Option(fun)
		given putListSchemaBreakdown: Conversion[List[Schema.Breakdown], Option[List[Schema.Breakdown]]] = (fun: List[Schema.Breakdown]) => Option(fun)
		given putListSchemaBreakdownRegion: Conversion[List[Schema.BreakdownRegion], Option[List[Schema.BreakdownRegion]]] = (fun: List[Schema.BreakdownRegion]) => Option(fun)
		given putSchemaBuiltInSimpleAction: Conversion[Schema.BuiltInSimpleAction, Option[Schema.BuiltInSimpleAction]] = (fun: Schema.BuiltInSimpleAction) => Option(fun)
		given putSchemaExternalAction: Conversion[Schema.ExternalAction, Option[Schema.ExternalAction]] = (fun: Schema.ExternalAction) => Option(fun)
		given putSchemaBuiltInUserInputAction: Conversion[Schema.BuiltInUserInputAction, Option[Schema.BuiltInUserInputAction]] = (fun: Schema.BuiltInUserInputAction) => Option(fun)
		given putListSchemaActionReason: Conversion[List[Schema.ActionReason], Option[List[Schema.ActionReason]]] = (fun: List[Schema.ActionReason]) => Option(fun)
		given putSchemaBuiltInSimpleActionTypeEnum: Conversion[Schema.BuiltInSimpleAction.TypeEnum, Option[Schema.BuiltInSimpleAction.TypeEnum]] = (fun: Schema.BuiltInSimpleAction.TypeEnum) => Option(fun)
		given putSchemaBuiltInSimpleActionAdditionalContent: Conversion[Schema.BuiltInSimpleActionAdditionalContent, Option[Schema.BuiltInSimpleActionAdditionalContent]] = (fun: Schema.BuiltInSimpleActionAdditionalContent) => Option(fun)
		given putSchemaExternalActionTypeEnum: Conversion[Schema.ExternalAction.TypeEnum, Option[Schema.ExternalAction.TypeEnum]] = (fun: Schema.ExternalAction.TypeEnum) => Option(fun)
		given putListSchemaActionFlow: Conversion[List[Schema.ActionFlow], Option[List[Schema.ActionFlow]]] = (fun: List[Schema.ActionFlow]) => Option(fun)
		given putListSchemaInputField: Conversion[List[Schema.InputField], Option[List[Schema.InputField]]] = (fun: List[Schema.InputField]) => Option(fun)
		given putSchemaTextWithTooltip: Conversion[Schema.TextWithTooltip, Option[Schema.TextWithTooltip]] = (fun: Schema.TextWithTooltip) => Option(fun)
		given putSchemaCallout: Conversion[Schema.Callout, Option[Schema.Callout]] = (fun: Schema.Callout) => Option(fun)
		given putSchemaInputFieldTextInput: Conversion[Schema.InputFieldTextInput, Option[Schema.InputFieldTextInput]] = (fun: Schema.InputFieldTextInput) => Option(fun)
		given putSchemaInputFieldChoiceInput: Conversion[Schema.InputFieldChoiceInput, Option[Schema.InputFieldChoiceInput]] = (fun: Schema.InputFieldChoiceInput) => Option(fun)
		given putSchemaInputFieldCheckboxInput: Conversion[Schema.InputFieldCheckboxInput, Option[Schema.InputFieldCheckboxInput]] = (fun: Schema.InputFieldCheckboxInput) => Option(fun)
		given putSchemaTextWithTooltipTooltipIconStyleEnum: Conversion[Schema.TextWithTooltip.TooltipIconStyleEnum, Option[Schema.TextWithTooltip.TooltipIconStyleEnum]] = (fun: Schema.TextWithTooltip.TooltipIconStyleEnum) => Option(fun)
		given putSchemaInputFieldTextInputTypeEnum: Conversion[Schema.InputFieldTextInput.TypeEnum, Option[Schema.InputFieldTextInput.TypeEnum]] = (fun: Schema.InputFieldTextInput.TypeEnum) => Option(fun)
		given putListSchemaInputFieldChoiceInputChoiceInputOption: Conversion[List[Schema.InputFieldChoiceInputChoiceInputOption], Option[List[Schema.InputFieldChoiceInputChoiceInputOption]]] = (fun: List[Schema.InputFieldChoiceInputChoiceInputOption]) => Option(fun)
		given putSchemaInputField: Conversion[Schema.InputField, Option[Schema.InputField]] = (fun: Schema.InputField) => Option(fun)
		given putSchemaCalloutStyleHintEnum: Conversion[Schema.Callout.StyleHintEnum, Option[Schema.Callout.StyleHintEnum]] = (fun: Schema.Callout.StyleHintEnum) => Option(fun)
		given putSchemaAction: Conversion[Schema.Action, Option[Schema.Action]] = (fun: Schema.Action) => Option(fun)
		given putSchemaRenderProductIssuesRequestPayloadContentOptionEnum: Conversion[Schema.RenderProductIssuesRequestPayload.ContentOptionEnum, Option[Schema.RenderProductIssuesRequestPayload.ContentOptionEnum]] = (fun: Schema.RenderProductIssuesRequestPayload.ContentOptionEnum) => Option(fun)
		given putSchemaRenderProductIssuesRequestPayloadUserInputActionOptionEnum: Conversion[Schema.RenderProductIssuesRequestPayload.UserInputActionOptionEnum, Option[Schema.RenderProductIssuesRequestPayload.UserInputActionOptionEnum]] = (fun: Schema.RenderProductIssuesRequestPayload.UserInputActionOptionEnum) => Option(fun)
		given putListSchemaProductIssue: Conversion[List[Schema.ProductIssue], Option[List[Schema.ProductIssue]]] = (fun: List[Schema.ProductIssue]) => Option(fun)
		given putSchemaProductIssueImpact: Conversion[Schema.ProductIssueImpact, Option[Schema.ProductIssueImpact]] = (fun: Schema.ProductIssueImpact) => Option(fun)
		given putSchemaProductIssueImpactSeverityEnum: Conversion[Schema.ProductIssueImpact.SeverityEnum, Option[Schema.ProductIssueImpact.SeverityEnum]] = (fun: Schema.ProductIssueImpact.SeverityEnum) => Option(fun)
		given putSchemaActionInput: Conversion[Schema.ActionInput, Option[Schema.ActionInput]] = (fun: Schema.ActionInput) => Option(fun)
		given putListSchemaInputValue: Conversion[List[Schema.InputValue], Option[List[Schema.InputValue]]] = (fun: List[Schema.InputValue]) => Option(fun)
		given putSchemaInputValueTextInputValue: Conversion[Schema.InputValueTextInputValue, Option[Schema.InputValueTextInputValue]] = (fun: Schema.InputValueTextInputValue) => Option(fun)
		given putSchemaInputValueChoiceInputValue: Conversion[Schema.InputValueChoiceInputValue, Option[Schema.InputValueChoiceInputValue]] = (fun: Schema.InputValueChoiceInputValue) => Option(fun)
		given putSchemaInputValueCheckboxInputValue: Conversion[Schema.InputValueCheckboxInputValue, Option[Schema.InputValueCheckboxInputValue]] = (fun: Schema.InputValueCheckboxInputValue) => Option(fun)
		given putSchemaRegionPostalCodeArea: Conversion[Schema.RegionPostalCodeArea, Option[Schema.RegionPostalCodeArea]] = (fun: Schema.RegionPostalCodeArea) => Option(fun)
		given putSchemaRegionGeoTargetArea: Conversion[Schema.RegionGeoTargetArea, Option[Schema.RegionGeoTargetArea]] = (fun: Schema.RegionGeoTargetArea) => Option(fun)
		given putListSchemaRegionPostalCodeAreaPostalCodeRange: Conversion[List[Schema.RegionPostalCodeAreaPostalCodeRange], Option[List[Schema.RegionPostalCodeAreaPostalCodeRange]]] = (fun: List[Schema.RegionPostalCodeAreaPostalCodeRange]) => Option(fun)
		given putListSchemaRegion: Conversion[List[Schema.Region], Option[List[Schema.Region]]] = (fun: List[Schema.Region]) => Option(fun)
		given putSchemaPromotionProductApplicabilityEnum: Conversion[Schema.Promotion.ProductApplicabilityEnum, Option[Schema.Promotion.ProductApplicabilityEnum]] = (fun: Schema.Promotion.ProductApplicabilityEnum) => Option(fun)
		given putSchemaPromotionOfferTypeEnum: Conversion[Schema.Promotion.OfferTypeEnum, Option[Schema.Promotion.OfferTypeEnum]] = (fun: Schema.Promotion.OfferTypeEnum) => Option(fun)
		given putListSchemaPromotionRedemptionChannelEnum: Conversion[List[Schema.Promotion.RedemptionChannelEnum], Option[List[Schema.Promotion.RedemptionChannelEnum]]] = (fun: List[Schema.Promotion.RedemptionChannelEnum]) => Option(fun)
		given putSchemaPromotionCouponValueTypeEnum: Conversion[Schema.Promotion.CouponValueTypeEnum, Option[Schema.Promotion.CouponValueTypeEnum]] = (fun: Schema.Promotion.CouponValueTypeEnum) => Option(fun)
		given putSchemaPriceAmount: Conversion[Schema.PriceAmount, Option[Schema.PriceAmount]] = (fun: Schema.PriceAmount) => Option(fun)
		given putSchemaTimePeriod: Conversion[Schema.TimePeriod, Option[Schema.TimePeriod]] = (fun: Schema.TimePeriod) => Option(fun)
		given putSchemaPromotionStoreApplicabilityEnum: Conversion[Schema.Promotion.StoreApplicabilityEnum, Option[Schema.Promotion.StoreApplicabilityEnum]] = (fun: Schema.Promotion.StoreApplicabilityEnum) => Option(fun)
		given putSchemaPromotionPromotionStatus: Conversion[Schema.PromotionPromotionStatus, Option[Schema.PromotionPromotionStatus]] = (fun: Schema.PromotionPromotionStatus) => Option(fun)
		given putListSchemaPromotionPromotionStatusDestinationStatus: Conversion[List[Schema.PromotionPromotionStatusDestinationStatus], Option[List[Schema.PromotionPromotionStatusDestinationStatus]]] = (fun: List[Schema.PromotionPromotionStatusDestinationStatus]) => Option(fun)
		given putListSchemaPromotionPromotionStatusPromotionIssue: Conversion[List[Schema.PromotionPromotionStatusPromotionIssue], Option[List[Schema.PromotionPromotionStatusPromotionIssue]]] = (fun: List[Schema.PromotionPromotionStatusPromotionIssue]) => Option(fun)
		given putSchemaPromotionPromotionStatusDestinationStatusStatusEnum: Conversion[Schema.PromotionPromotionStatusDestinationStatus.StatusEnum, Option[Schema.PromotionPromotionStatusDestinationStatus.StatusEnum]] = (fun: Schema.PromotionPromotionStatusDestinationStatus.StatusEnum) => Option(fun)
		given putListSchemaPromotion: Conversion[List[Schema.Promotion], Option[List[Schema.Promotion]]] = (fun: List[Schema.Promotion]) => Option(fun)
		given putListSchemaRecommendation: Conversion[List[Schema.Recommendation], Option[List[Schema.Recommendation]]] = (fun: List[Schema.Recommendation]) => Option(fun)
		given putListSchemaRecommendationDescription: Conversion[List[Schema.RecommendationDescription], Option[List[Schema.RecommendationDescription]]] = (fun: List[Schema.RecommendationDescription]) => Option(fun)
		given putSchemaRecommendationCallToAction: Conversion[Schema.RecommendationCallToAction, Option[Schema.RecommendationCallToAction]] = (fun: Schema.RecommendationCallToAction) => Option(fun)
		given putListSchemaRecommendationCallToAction: Conversion[List[Schema.RecommendationCallToAction], Option[List[Schema.RecommendationCallToAction]]] = (fun: List[Schema.RecommendationCallToAction]) => Option(fun)
		given putListSchemaRecommendationCreative: Conversion[List[Schema.RecommendationCreative], Option[List[Schema.RecommendationCreative]]] = (fun: List[Schema.RecommendationCreative]) => Option(fun)
		given putSchemaRecommendationDescriptionTypeEnum: Conversion[Schema.RecommendationDescription.TypeEnum, Option[Schema.RecommendationDescription.TypeEnum]] = (fun: Schema.RecommendationDescription.TypeEnum) => Option(fun)
		given putSchemaRecommendationCreativeTypeEnum: Conversion[Schema.RecommendationCreative.TypeEnum, Option[Schema.RecommendationCreative.TypeEnum]] = (fun: Schema.RecommendationCreative.TypeEnum) => Option(fun)
		given putSchemaReportInteractionRequestInteractionTypeEnum: Conversion[Schema.ReportInteractionRequest.InteractionTypeEnum, Option[Schema.ReportInteractionRequest.InteractionTypeEnum]] = (fun: Schema.ReportInteractionRequest.InteractionTypeEnum) => Option(fun)
		given putSchemaReturnPolicyOnlinePolicy: Conversion[Schema.ReturnPolicyOnlinePolicy, Option[Schema.ReturnPolicyOnlinePolicy]] = (fun: Schema.ReturnPolicyOnlinePolicy) => Option(fun)
		given putSchemaReturnPolicyOnlineRestockingFee: Conversion[Schema.ReturnPolicyOnlineRestockingFee, Option[Schema.ReturnPolicyOnlineRestockingFee]] = (fun: Schema.ReturnPolicyOnlineRestockingFee) => Option(fun)
		given putListSchemaReturnPolicyOnlineReturnMethodsEnum: Conversion[List[Schema.ReturnPolicyOnline.ReturnMethodsEnum], Option[List[Schema.ReturnPolicyOnline.ReturnMethodsEnum]]] = (fun: List[Schema.ReturnPolicyOnline.ReturnMethodsEnum]) => Option(fun)
		given putListSchemaReturnPolicyOnlineItemConditionsEnum: Conversion[List[Schema.ReturnPolicyOnline.ItemConditionsEnum], Option[List[Schema.ReturnPolicyOnline.ItemConditionsEnum]]] = (fun: List[Schema.ReturnPolicyOnline.ItemConditionsEnum]) => Option(fun)
		given putListSchemaReturnPolicyOnlineReturnReasonCategoryInfo: Conversion[List[Schema.ReturnPolicyOnlineReturnReasonCategoryInfo], Option[List[Schema.ReturnPolicyOnlineReturnReasonCategoryInfo]]] = (fun: List[Schema.ReturnPolicyOnlineReturnReasonCategoryInfo]) => Option(fun)
		given putSchemaReturnPolicyOnlinePolicyTypeEnum: Conversion[Schema.ReturnPolicyOnlinePolicy.TypeEnum, Option[Schema.ReturnPolicyOnlinePolicy.TypeEnum]] = (fun: Schema.ReturnPolicyOnlinePolicy.TypeEnum) => Option(fun)
		given putSchemaReturnPolicyOnlineReturnReasonCategoryInfoReturnReasonCategoryEnum: Conversion[Schema.ReturnPolicyOnlineReturnReasonCategoryInfo.ReturnReasonCategoryEnum, Option[Schema.ReturnPolicyOnlineReturnReasonCategoryInfo.ReturnReasonCategoryEnum]] = (fun: Schema.ReturnPolicyOnlineReturnReasonCategoryInfo.ReturnReasonCategoryEnum) => Option(fun)
		given putSchemaReturnPolicyOnlineReturnReasonCategoryInfoReturnLabelSourceEnum: Conversion[Schema.ReturnPolicyOnlineReturnReasonCategoryInfo.ReturnLabelSourceEnum, Option[Schema.ReturnPolicyOnlineReturnReasonCategoryInfo.ReturnLabelSourceEnum]] = (fun: Schema.ReturnPolicyOnlineReturnReasonCategoryInfo.ReturnLabelSourceEnum) => Option(fun)
		given putSchemaReturnPolicyOnlineReturnShippingFee: Conversion[Schema.ReturnPolicyOnlineReturnShippingFee, Option[Schema.ReturnPolicyOnlineReturnShippingFee]] = (fun: Schema.ReturnPolicyOnlineReturnShippingFee) => Option(fun)
		given putSchemaReturnPolicyOnlineReturnShippingFeeTypeEnum: Conversion[Schema.ReturnPolicyOnlineReturnShippingFee.TypeEnum, Option[Schema.ReturnPolicyOnlineReturnShippingFee.TypeEnum]] = (fun: Schema.ReturnPolicyOnlineReturnShippingFee.TypeEnum) => Option(fun)
		given putListSchemaReturnPolicyOnline: Conversion[List[Schema.ReturnPolicyOnline], Option[List[Schema.ReturnPolicyOnline]]] = (fun: List[Schema.ReturnPolicyOnline]) => Option(fun)
		given putSchemaDateTime: Conversion[Schema.DateTime, Option[Schema.DateTime]] = (fun: Schema.DateTime) => Option(fun)
		given putListSchemaOrderTrackingSignalShippingInfo: Conversion[List[Schema.OrderTrackingSignalShippingInfo], Option[List[Schema.OrderTrackingSignalShippingInfo]]] = (fun: List[Schema.OrderTrackingSignalShippingInfo]) => Option(fun)
		given putListSchemaOrderTrackingSignalLineItemDetails: Conversion[List[Schema.OrderTrackingSignalLineItemDetails], Option[List[Schema.OrderTrackingSignalLineItemDetails]]] = (fun: List[Schema.OrderTrackingSignalLineItemDetails]) => Option(fun)
		given putListSchemaOrderTrackingSignalShipmentLineItemMapping: Conversion[List[Schema.OrderTrackingSignalShipmentLineItemMapping], Option[List[Schema.OrderTrackingSignalShipmentLineItemMapping]]] = (fun: List[Schema.OrderTrackingSignalShipmentLineItemMapping]) => Option(fun)
		given putSchemaTimeZone: Conversion[Schema.TimeZone, Option[Schema.TimeZone]] = (fun: Schema.TimeZone) => Option(fun)
		given putSchemaOrderTrackingSignalShippingInfoShippingStatusEnum: Conversion[Schema.OrderTrackingSignalShippingInfo.ShippingStatusEnum, Option[Schema.OrderTrackingSignalShippingInfo.ShippingStatusEnum]] = (fun: Schema.OrderTrackingSignalShippingInfo.ShippingStatusEnum) => Option(fun)
		given putSchemaProductId: Conversion[Schema.ProductId, Option[Schema.ProductId]] = (fun: Schema.ProductId) => Option(fun)
		given putListSchemaProductDeliveryTimeAreaDeliveryTime: Conversion[List[Schema.ProductDeliveryTimeAreaDeliveryTime], Option[List[Schema.ProductDeliveryTimeAreaDeliveryTime]]] = (fun: List[Schema.ProductDeliveryTimeAreaDeliveryTime]) => Option(fun)
		given putSchemaDeliveryArea: Conversion[Schema.DeliveryArea, Option[Schema.DeliveryArea]] = (fun: Schema.DeliveryArea) => Option(fun)
		given putSchemaProductDeliveryTimeAreaDeliveryTimeDeliveryTime: Conversion[Schema.ProductDeliveryTimeAreaDeliveryTimeDeliveryTime, Option[Schema.ProductDeliveryTimeAreaDeliveryTimeDeliveryTime]] = (fun: Schema.ProductDeliveryTimeAreaDeliveryTimeDeliveryTime) => Option(fun)
		given putSchemaDeliveryAreaPostalCodeRange: Conversion[Schema.DeliveryAreaPostalCodeRange, Option[Schema.DeliveryAreaPostalCodeRange]] = (fun: Schema.DeliveryAreaPostalCodeRange) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
