package com.boresjo.play.api.google.dataflow

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putSchemaSendDebugCaptureRequestDataFormatEnum: Conversion[Schema.SendDebugCaptureRequest.DataFormatEnum, Option[Schema.SendDebugCaptureRequest.DataFormatEnum]] = (fun: Schema.SendDebugCaptureRequest.DataFormatEnum) => Option(fun)
		given putSchemaSnapshotStateEnum: Conversion[Schema.Snapshot.StateEnum, Option[Schema.Snapshot.StateEnum]] = (fun: Schema.Snapshot.StateEnum) => Option(fun)
		given putListSchemaPubsubSnapshotMetadata: Conversion[List[Schema.PubsubSnapshotMetadata], Option[List[Schema.PubsubSnapshotMetadata]]] = (fun: List[Schema.PubsubSnapshotMetadata]) => Option(fun)
		given putListSchemaSnapshot: Conversion[List[Schema.Snapshot], Option[List[Schema.Snapshot]]] = (fun: List[Schema.Snapshot]) => Option(fun)
		given putSchemaJobTypeEnum: Conversion[Schema.Job.TypeEnum, Option[Schema.Job.TypeEnum]] = (fun: Schema.Job.TypeEnum) => Option(fun)
		given putSchemaEnvironment: Conversion[Schema.Environment, Option[Schema.Environment]] = (fun: Schema.Environment) => Option(fun)
		given putListSchemaStep: Conversion[List[Schema.Step], Option[List[Schema.Step]]] = (fun: List[Schema.Step]) => Option(fun)
		given putSchemaJobCurrentStateEnum: Conversion[Schema.Job.CurrentStateEnum, Option[Schema.Job.CurrentStateEnum]] = (fun: Schema.Job.CurrentStateEnum) => Option(fun)
		given putSchemaJobRequestedStateEnum: Conversion[Schema.Job.RequestedStateEnum, Option[Schema.Job.RequestedStateEnum]] = (fun: Schema.Job.RequestedStateEnum) => Option(fun)
		given putSchemaJobExecutionInfo: Conversion[Schema.JobExecutionInfo, Option[Schema.JobExecutionInfo]] = (fun: Schema.JobExecutionInfo) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putSchemaPipelineDescription: Conversion[Schema.PipelineDescription, Option[Schema.PipelineDescription]] = (fun: Schema.PipelineDescription) => Option(fun)
		given putListSchemaExecutionStageState: Conversion[List[Schema.ExecutionStageState], Option[List[Schema.ExecutionStageState]]] = (fun: List[Schema.ExecutionStageState]) => Option(fun)
		given putSchemaJobMetadata: Conversion[Schema.JobMetadata, Option[Schema.JobMetadata]] = (fun: Schema.JobMetadata) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaRuntimeUpdatableParams: Conversion[Schema.RuntimeUpdatableParams, Option[Schema.RuntimeUpdatableParams]] = (fun: Schema.RuntimeUpdatableParams) => Option(fun)
		given putSchemaServiceResources: Conversion[Schema.ServiceResources, Option[Schema.ServiceResources]] = (fun: Schema.ServiceResources) => Option(fun)
		given putListSchemaWorkerPool: Conversion[List[Schema.WorkerPool], Option[List[Schema.WorkerPool]]] = (fun: List[Schema.WorkerPool]) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putSchemaEnvironmentFlexResourceSchedulingGoalEnum: Conversion[Schema.Environment.FlexResourceSchedulingGoalEnum, Option[Schema.Environment.FlexResourceSchedulingGoalEnum]] = (fun: Schema.Environment.FlexResourceSchedulingGoalEnum) => Option(fun)
		given putSchemaEnvironmentShuffleModeEnum: Conversion[Schema.Environment.ShuffleModeEnum, Option[Schema.Environment.ShuffleModeEnum]] = (fun: Schema.Environment.ShuffleModeEnum) => Option(fun)
		given putSchemaDebugOptions: Conversion[Schema.DebugOptions, Option[Schema.DebugOptions]] = (fun: Schema.DebugOptions) => Option(fun)
		given putSchemaEnvironmentStreamingModeEnum: Conversion[Schema.Environment.StreamingModeEnum, Option[Schema.Environment.StreamingModeEnum]] = (fun: Schema.Environment.StreamingModeEnum) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListSchemaPackage: Conversion[List[Schema.Package], Option[List[Schema.Package]]] = (fun: List[Schema.Package]) => Option(fun)
		given putSchemaWorkerPoolDefaultPackageSetEnum: Conversion[Schema.WorkerPool.DefaultPackageSetEnum, Option[Schema.WorkerPool.DefaultPackageSetEnum]] = (fun: Schema.WorkerPool.DefaultPackageSetEnum) => Option(fun)
		given putSchemaWorkerPoolTeardownPolicyEnum: Conversion[Schema.WorkerPool.TeardownPolicyEnum, Option[Schema.WorkerPool.TeardownPolicyEnum]] = (fun: Schema.WorkerPool.TeardownPolicyEnum) => Option(fun)
		given putSchemaTaskRunnerSettings: Conversion[Schema.TaskRunnerSettings, Option[Schema.TaskRunnerSettings]] = (fun: Schema.TaskRunnerSettings) => Option(fun)
		given putListSchemaDisk: Conversion[List[Schema.Disk], Option[List[Schema.Disk]]] = (fun: List[Schema.Disk]) => Option(fun)
		given putSchemaAutoscalingSettings: Conversion[Schema.AutoscalingSettings, Option[Schema.AutoscalingSettings]] = (fun: Schema.AutoscalingSettings) => Option(fun)
		given putSchemaWorkerPoolIpConfigurationEnum: Conversion[Schema.WorkerPool.IpConfigurationEnum, Option[Schema.WorkerPool.IpConfigurationEnum]] = (fun: Schema.WorkerPool.IpConfigurationEnum) => Option(fun)
		given putListSchemaSdkHarnessContainerImage: Conversion[List[Schema.SdkHarnessContainerImage], Option[List[Schema.SdkHarnessContainerImage]]] = (fun: List[Schema.SdkHarnessContainerImage]) => Option(fun)
		given putSchemaWorkerSettings: Conversion[Schema.WorkerSettings, Option[Schema.WorkerSettings]] = (fun: Schema.WorkerSettings) => Option(fun)
		given putSchemaAutoscalingSettingsAlgorithmEnum: Conversion[Schema.AutoscalingSettings.AlgorithmEnum, Option[Schema.AutoscalingSettings.AlgorithmEnum]] = (fun: Schema.AutoscalingSettings.AlgorithmEnum) => Option(fun)
		given putSchemaDataSamplingConfig: Conversion[Schema.DataSamplingConfig, Option[Schema.DataSamplingConfig]] = (fun: Schema.DataSamplingConfig) => Option(fun)
		given putListSchemaDataSamplingConfigBehaviorsEnum: Conversion[List[Schema.DataSamplingConfig.BehaviorsEnum], Option[List[Schema.DataSamplingConfig.BehaviorsEnum]]] = (fun: List[Schema.DataSamplingConfig.BehaviorsEnum]) => Option(fun)
		given putMapStringSchemaJobExecutionStageInfo: Conversion[Map[String, Schema.JobExecutionStageInfo], Option[Map[String, Schema.JobExecutionStageInfo]]] = (fun: Map[String, Schema.JobExecutionStageInfo]) => Option(fun)
		given putListSchemaTransformSummary: Conversion[List[Schema.TransformSummary], Option[List[Schema.TransformSummary]]] = (fun: List[Schema.TransformSummary]) => Option(fun)
		given putListSchemaExecutionStageSummary: Conversion[List[Schema.ExecutionStageSummary], Option[List[Schema.ExecutionStageSummary]]] = (fun: List[Schema.ExecutionStageSummary]) => Option(fun)
		given putListSchemaDisplayData: Conversion[List[Schema.DisplayData], Option[List[Schema.DisplayData]]] = (fun: List[Schema.DisplayData]) => Option(fun)
		given putSchemaTransformSummaryKindEnum: Conversion[Schema.TransformSummary.KindEnum, Option[Schema.TransformSummary.KindEnum]] = (fun: Schema.TransformSummary.KindEnum) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaExecutionStageSummaryKindEnum: Conversion[Schema.ExecutionStageSummary.KindEnum, Option[Schema.ExecutionStageSummary.KindEnum]] = (fun: Schema.ExecutionStageSummary.KindEnum) => Option(fun)
		given putListSchemaStageSource: Conversion[List[Schema.StageSource], Option[List[Schema.StageSource]]] = (fun: List[Schema.StageSource]) => Option(fun)
		given putListSchemaComponentTransform: Conversion[List[Schema.ComponentTransform], Option[List[Schema.ComponentTransform]]] = (fun: List[Schema.ComponentTransform]) => Option(fun)
		given putListSchemaComponentSource: Conversion[List[Schema.ComponentSource], Option[List[Schema.ComponentSource]]] = (fun: List[Schema.ComponentSource]) => Option(fun)
		given putSchemaExecutionStageStateExecutionStageStateEnum: Conversion[Schema.ExecutionStageState.ExecutionStageStateEnum, Option[Schema.ExecutionStageState.ExecutionStageStateEnum]] = (fun: Schema.ExecutionStageState.ExecutionStageStateEnum) => Option(fun)
		given putSchemaSdkVersion: Conversion[Schema.SdkVersion, Option[Schema.SdkVersion]] = (fun: Schema.SdkVersion) => Option(fun)
		given putListSchemaSpannerIODetails: Conversion[List[Schema.SpannerIODetails], Option[List[Schema.SpannerIODetails]]] = (fun: List[Schema.SpannerIODetails]) => Option(fun)
		given putListSchemaBigQueryIODetails: Conversion[List[Schema.BigQueryIODetails], Option[List[Schema.BigQueryIODetails]]] = (fun: List[Schema.BigQueryIODetails]) => Option(fun)
		given putListSchemaBigTableIODetails: Conversion[List[Schema.BigTableIODetails], Option[List[Schema.BigTableIODetails]]] = (fun: List[Schema.BigTableIODetails]) => Option(fun)
		given putListSchemaPubSubIODetails: Conversion[List[Schema.PubSubIODetails], Option[List[Schema.PubSubIODetails]]] = (fun: List[Schema.PubSubIODetails]) => Option(fun)
		given putListSchemaFileIODetails: Conversion[List[Schema.FileIODetails], Option[List[Schema.FileIODetails]]] = (fun: List[Schema.FileIODetails]) => Option(fun)
		given putListSchemaDatastoreIODetails: Conversion[List[Schema.DatastoreIODetails], Option[List[Schema.DatastoreIODetails]]] = (fun: List[Schema.DatastoreIODetails]) => Option(fun)
		given putSchemaSdkVersionSdkSupportStatusEnum: Conversion[Schema.SdkVersion.SdkSupportStatusEnum, Option[Schema.SdkVersion.SdkSupportStatusEnum]] = (fun: Schema.SdkVersion.SdkSupportStatusEnum) => Option(fun)
		given putListSchemaSdkBug: Conversion[List[Schema.SdkBug], Option[List[Schema.SdkBug]]] = (fun: List[Schema.SdkBug]) => Option(fun)
		given putSchemaSdkBugTypeEnum: Conversion[Schema.SdkBug.TypeEnum, Option[Schema.SdkBug.TypeEnum]] = (fun: Schema.SdkBug.TypeEnum) => Option(fun)
		given putSchemaSdkBugSeverityEnum: Conversion[Schema.SdkBug.SeverityEnum, Option[Schema.SdkBug.SeverityEnum]] = (fun: Schema.SdkBug.SeverityEnum) => Option(fun)
		given putListSchemaJob: Conversion[List[Schema.Job], Option[List[Schema.Job]]] = (fun: List[Schema.Job]) => Option(fun)
		given putListSchemaFailedLocation: Conversion[List[Schema.FailedLocation], Option[List[Schema.FailedLocation]]] = (fun: List[Schema.FailedLocation]) => Option(fun)
		given putSchemaRuntimeEnvironment: Conversion[Schema.RuntimeEnvironment, Option[Schema.RuntimeEnvironment]] = (fun: Schema.RuntimeEnvironment) => Option(fun)
		given putSchemaRuntimeEnvironmentIpConfigurationEnum: Conversion[Schema.RuntimeEnvironment.IpConfigurationEnum, Option[Schema.RuntimeEnvironment.IpConfigurationEnum]] = (fun: Schema.RuntimeEnvironment.IpConfigurationEnum) => Option(fun)
		given putSchemaRuntimeEnvironmentStreamingModeEnum: Conversion[Schema.RuntimeEnvironment.StreamingModeEnum, Option[Schema.RuntimeEnvironment.StreamingModeEnum]] = (fun: Schema.RuntimeEnvironment.StreamingModeEnum) => Option(fun)
		given putSchemaJob: Conversion[Schema.Job, Option[Schema.Job]] = (fun: Schema.Job) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putSchemaTemplateMetadata: Conversion[Schema.TemplateMetadata, Option[Schema.TemplateMetadata]] = (fun: Schema.TemplateMetadata) => Option(fun)
		given putSchemaGetTemplateResponseTemplateTypeEnum: Conversion[Schema.GetTemplateResponse.TemplateTypeEnum, Option[Schema.GetTemplateResponse.TemplateTypeEnum]] = (fun: Schema.GetTemplateResponse.TemplateTypeEnum) => Option(fun)
		given putSchemaRuntimeMetadata: Conversion[Schema.RuntimeMetadata, Option[Schema.RuntimeMetadata]] = (fun: Schema.RuntimeMetadata) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putListSchemaParameterMetadata: Conversion[List[Schema.ParameterMetadata], Option[List[Schema.ParameterMetadata]]] = (fun: List[Schema.ParameterMetadata]) => Option(fun)
		given putSchemaParameterMetadataParamTypeEnum: Conversion[Schema.ParameterMetadata.ParamTypeEnum, Option[Schema.ParameterMetadata.ParamTypeEnum]] = (fun: Schema.ParameterMetadata.ParamTypeEnum) => Option(fun)
		given putListSchemaParameterMetadataEnumOption: Conversion[List[Schema.ParameterMetadataEnumOption], Option[List[Schema.ParameterMetadataEnumOption]]] = (fun: List[Schema.ParameterMetadataEnumOption]) => Option(fun)
		given putSchemaSDKInfo: Conversion[Schema.SDKInfo, Option[Schema.SDKInfo]] = (fun: Schema.SDKInfo) => Option(fun)
		given putSchemaSDKInfoLanguageEnum: Conversion[Schema.SDKInfo.LanguageEnum, Option[Schema.SDKInfo.LanguageEnum]] = (fun: Schema.SDKInfo.LanguageEnum) => Option(fun)
		given putSchemaLaunchFlexTemplateParameter: Conversion[Schema.LaunchFlexTemplateParameter, Option[Schema.LaunchFlexTemplateParameter]] = (fun: Schema.LaunchFlexTemplateParameter) => Option(fun)
		given putSchemaContainerSpec: Conversion[Schema.ContainerSpec, Option[Schema.ContainerSpec]] = (fun: Schema.ContainerSpec) => Option(fun)
		given putSchemaFlexTemplateRuntimeEnvironment: Conversion[Schema.FlexTemplateRuntimeEnvironment, Option[Schema.FlexTemplateRuntimeEnvironment]] = (fun: Schema.FlexTemplateRuntimeEnvironment) => Option(fun)
		given putSchemaFlexTemplateRuntimeEnvironmentIpConfigurationEnum: Conversion[Schema.FlexTemplateRuntimeEnvironment.IpConfigurationEnum, Option[Schema.FlexTemplateRuntimeEnvironment.IpConfigurationEnum]] = (fun: Schema.FlexTemplateRuntimeEnvironment.IpConfigurationEnum) => Option(fun)
		given putSchemaFlexTemplateRuntimeEnvironmentFlexrsGoalEnum: Conversion[Schema.FlexTemplateRuntimeEnvironment.FlexrsGoalEnum, Option[Schema.FlexTemplateRuntimeEnvironment.FlexrsGoalEnum]] = (fun: Schema.FlexTemplateRuntimeEnvironment.FlexrsGoalEnum) => Option(fun)
		given putSchemaFlexTemplateRuntimeEnvironmentAutoscalingAlgorithmEnum: Conversion[Schema.FlexTemplateRuntimeEnvironment.AutoscalingAlgorithmEnum, Option[Schema.FlexTemplateRuntimeEnvironment.AutoscalingAlgorithmEnum]] = (fun: Schema.FlexTemplateRuntimeEnvironment.AutoscalingAlgorithmEnum) => Option(fun)
		given putSchemaFlexTemplateRuntimeEnvironmentStreamingModeEnum: Conversion[Schema.FlexTemplateRuntimeEnvironment.StreamingModeEnum, Option[Schema.FlexTemplateRuntimeEnvironment.StreamingModeEnum]] = (fun: Schema.FlexTemplateRuntimeEnvironment.StreamingModeEnum) => Option(fun)
		given putListSchemaJobMessage: Conversion[List[Schema.JobMessage], Option[List[Schema.JobMessage]]] = (fun: List[Schema.JobMessage]) => Option(fun)
		given putListSchemaAutoscalingEvent: Conversion[List[Schema.AutoscalingEvent], Option[List[Schema.AutoscalingEvent]]] = (fun: List[Schema.AutoscalingEvent]) => Option(fun)
		given putSchemaJobMessageMessageImportanceEnum: Conversion[Schema.JobMessage.MessageImportanceEnum, Option[Schema.JobMessage.MessageImportanceEnum]] = (fun: Schema.JobMessage.MessageImportanceEnum) => Option(fun)
		given putSchemaAutoscalingEventEventTypeEnum: Conversion[Schema.AutoscalingEvent.EventTypeEnum, Option[Schema.AutoscalingEvent.EventTypeEnum]] = (fun: Schema.AutoscalingEvent.EventTypeEnum) => Option(fun)
		given putSchemaStructuredMessage: Conversion[Schema.StructuredMessage, Option[Schema.StructuredMessage]] = (fun: Schema.StructuredMessage) => Option(fun)
		given putListSchemaParameter: Conversion[List[Schema.Parameter], Option[List[Schema.Parameter]]] = (fun: List[Schema.Parameter]) => Option(fun)
		given putJsValue: Conversion[JsValue, Option[JsValue]] = (fun: JsValue) => Option(fun)
		given putListSchemaMetricUpdate: Conversion[List[Schema.MetricUpdate], Option[List[Schema.MetricUpdate]]] = (fun: List[Schema.MetricUpdate]) => Option(fun)
		given putSchemaMetricStructuredName: Conversion[Schema.MetricStructuredName, Option[Schema.MetricStructuredName]] = (fun: Schema.MetricStructuredName) => Option(fun)
		given putListSchemaStageSummary: Conversion[List[Schema.StageSummary], Option[List[Schema.StageSummary]]] = (fun: List[Schema.StageSummary]) => Option(fun)
		given putSchemaStageSummaryStateEnum: Conversion[Schema.StageSummary.StateEnum, Option[Schema.StageSummary.StateEnum]] = (fun: Schema.StageSummary.StateEnum) => Option(fun)
		given putSchemaProgressTimeseries: Conversion[Schema.ProgressTimeseries, Option[Schema.ProgressTimeseries]] = (fun: Schema.ProgressTimeseries) => Option(fun)
		given putSchemaStragglerSummary: Conversion[Schema.StragglerSummary, Option[Schema.StragglerSummary]] = (fun: Schema.StragglerSummary) => Option(fun)
		given putListSchemaPoint: Conversion[List[Schema.Point], Option[List[Schema.Point]]] = (fun: List[Schema.Point]) => Option(fun)
		given putListSchemaStraggler: Conversion[List[Schema.Straggler], Option[List[Schema.Straggler]]] = (fun: List[Schema.Straggler]) => Option(fun)
		given putSchemaStragglerInfo: Conversion[Schema.StragglerInfo, Option[Schema.StragglerInfo]] = (fun: Schema.StragglerInfo) => Option(fun)
		given putSchemaStreamingStragglerInfo: Conversion[Schema.StreamingStragglerInfo, Option[Schema.StreamingStragglerInfo]] = (fun: Schema.StreamingStragglerInfo) => Option(fun)
		given putMapStringSchemaStragglerDebuggingInfo: Conversion[Map[String, Schema.StragglerDebuggingInfo], Option[Map[String, Schema.StragglerDebuggingInfo]]] = (fun: Map[String, Schema.StragglerDebuggingInfo]) => Option(fun)
		given putSchemaHotKeyDebuggingInfo: Conversion[Schema.HotKeyDebuggingInfo, Option[Schema.HotKeyDebuggingInfo]] = (fun: Schema.HotKeyDebuggingInfo) => Option(fun)
		given putMapStringSchemaHotKeyInfo: Conversion[Map[String, Schema.HotKeyInfo], Option[Map[String, Schema.HotKeyInfo]]] = (fun: Map[String, Schema.HotKeyInfo]) => Option(fun)
		given putListSchemaWorkerDetails: Conversion[List[Schema.WorkerDetails], Option[List[Schema.WorkerDetails]]] = (fun: List[Schema.WorkerDetails]) => Option(fun)
		given putListSchemaWorkItemDetails: Conversion[List[Schema.WorkItemDetails], Option[List[Schema.WorkItemDetails]]] = (fun: List[Schema.WorkItemDetails]) => Option(fun)
		given putSchemaWorkItemDetailsStateEnum: Conversion[Schema.WorkItemDetails.StateEnum, Option[Schema.WorkItemDetails.StateEnum]] = (fun: Schema.WorkItemDetails.StateEnum) => Option(fun)
		given putListSchemaWorkItemStatus: Conversion[List[Schema.WorkItemStatus], Option[List[Schema.WorkItemStatus]]] = (fun: List[Schema.WorkItemStatus]) => Option(fun)
		given putListSchemaStatus: Conversion[List[Schema.Status], Option[List[Schema.Status]]] = (fun: List[Schema.Status]) => Option(fun)
		given putListSchemaCounterUpdate: Conversion[List[Schema.CounterUpdate], Option[List[Schema.CounterUpdate]]] = (fun: List[Schema.CounterUpdate]) => Option(fun)
		given putSchemaApproximateReportedProgress: Conversion[Schema.ApproximateReportedProgress, Option[Schema.ApproximateReportedProgress]] = (fun: Schema.ApproximateReportedProgress) => Option(fun)
		given putSchemaPosition: Conversion[Schema.Position, Option[Schema.Position]] = (fun: Schema.Position) => Option(fun)
		given putSchemaDynamicSourceSplit: Conversion[Schema.DynamicSourceSplit, Option[Schema.DynamicSourceSplit]] = (fun: Schema.DynamicSourceSplit) => Option(fun)
		given putSchemaSourceOperationResponse: Conversion[Schema.SourceOperationResponse, Option[Schema.SourceOperationResponse]] = (fun: Schema.SourceOperationResponse) => Option(fun)
		given putSchemaSourceFork: Conversion[Schema.SourceFork, Option[Schema.SourceFork]] = (fun: Schema.SourceFork) => Option(fun)
		given putSchemaApproximateProgress: Conversion[Schema.ApproximateProgress, Option[Schema.ApproximateProgress]] = (fun: Schema.ApproximateProgress) => Option(fun)
		given putSchemaNameAndKind: Conversion[Schema.NameAndKind, Option[Schema.NameAndKind]] = (fun: Schema.NameAndKind) => Option(fun)
		given putSchemaCounterStructuredNameAndMetadata: Conversion[Schema.CounterStructuredNameAndMetadata, Option[Schema.CounterStructuredNameAndMetadata]] = (fun: Schema.CounterStructuredNameAndMetadata) => Option(fun)
		given putSchemaSplitInt64: Conversion[Schema.SplitInt64, Option[Schema.SplitInt64]] = (fun: Schema.SplitInt64) => Option(fun)
		given putSchemaIntegerMean: Conversion[Schema.IntegerMean, Option[Schema.IntegerMean]] = (fun: Schema.IntegerMean) => Option(fun)
		given putSchemaFloatingPointMean: Conversion[Schema.FloatingPointMean, Option[Schema.FloatingPointMean]] = (fun: Schema.FloatingPointMean) => Option(fun)
		given putSchemaIntegerList: Conversion[Schema.IntegerList, Option[Schema.IntegerList]] = (fun: Schema.IntegerList) => Option(fun)
		given putSchemaFloatingPointList: Conversion[Schema.FloatingPointList, Option[Schema.FloatingPointList]] = (fun: Schema.FloatingPointList) => Option(fun)
		given putSchemaStringList: Conversion[Schema.StringList, Option[Schema.StringList]] = (fun: Schema.StringList) => Option(fun)
		given putSchemaDistributionUpdate: Conversion[Schema.DistributionUpdate, Option[Schema.DistributionUpdate]] = (fun: Schema.DistributionUpdate) => Option(fun)
		given putSchemaIntegerGauge: Conversion[Schema.IntegerGauge, Option[Schema.IntegerGauge]] = (fun: Schema.IntegerGauge) => Option(fun)
		given putSchemaNameAndKindKindEnum: Conversion[Schema.NameAndKind.KindEnum, Option[Schema.NameAndKind.KindEnum]] = (fun: Schema.NameAndKind.KindEnum) => Option(fun)
		given putSchemaCounterStructuredName: Conversion[Schema.CounterStructuredName, Option[Schema.CounterStructuredName]] = (fun: Schema.CounterStructuredName) => Option(fun)
		given putSchemaCounterMetadata: Conversion[Schema.CounterMetadata, Option[Schema.CounterMetadata]] = (fun: Schema.CounterMetadata) => Option(fun)
		given putSchemaCounterStructuredNameOriginEnum: Conversion[Schema.CounterStructuredName.OriginEnum, Option[Schema.CounterStructuredName.OriginEnum]] = (fun: Schema.CounterStructuredName.OriginEnum) => Option(fun)
		given putSchemaCounterStructuredNamePortionEnum: Conversion[Schema.CounterStructuredName.PortionEnum, Option[Schema.CounterStructuredName.PortionEnum]] = (fun: Schema.CounterStructuredName.PortionEnum) => Option(fun)
		given putSchemaCounterMetadataKindEnum: Conversion[Schema.CounterMetadata.KindEnum, Option[Schema.CounterMetadata.KindEnum]] = (fun: Schema.CounterMetadata.KindEnum) => Option(fun)
		given putSchemaCounterMetadataStandardUnitsEnum: Conversion[Schema.CounterMetadata.StandardUnitsEnum, Option[Schema.CounterMetadata.StandardUnitsEnum]] = (fun: Schema.CounterMetadata.StandardUnitsEnum) => Option(fun)
		given putListSchemaSplitInt64: Conversion[List[Schema.SplitInt64], Option[List[Schema.SplitInt64]]] = (fun: List[Schema.SplitInt64]) => Option(fun)
		given putListBigDecimal: Conversion[List[BigDecimal], Option[List[BigDecimal]]] = (fun: List[BigDecimal]) => Option(fun)
		given putSchemaHistogram: Conversion[Schema.Histogram, Option[Schema.Histogram]] = (fun: Schema.Histogram) => Option(fun)
		given putSchemaReportedParallelism: Conversion[Schema.ReportedParallelism, Option[Schema.ReportedParallelism]] = (fun: Schema.ReportedParallelism) => Option(fun)
		given putSchemaConcatPosition: Conversion[Schema.ConcatPosition, Option[Schema.ConcatPosition]] = (fun: Schema.ConcatPosition) => Option(fun)
		given putSchemaDerivedSource: Conversion[Schema.DerivedSource, Option[Schema.DerivedSource]] = (fun: Schema.DerivedSource) => Option(fun)
		given putSchemaSource: Conversion[Schema.Source, Option[Schema.Source]] = (fun: Schema.Source) => Option(fun)
		given putSchemaDerivedSourceDerivationModeEnum: Conversion[Schema.DerivedSource.DerivationModeEnum, Option[Schema.DerivedSource.DerivationModeEnum]] = (fun: Schema.DerivedSource.DerivationModeEnum) => Option(fun)
		given putSchemaSourceMetadata: Conversion[Schema.SourceMetadata, Option[Schema.SourceMetadata]] = (fun: Schema.SourceMetadata) => Option(fun)
		given putSchemaSourceSplitResponse: Conversion[Schema.SourceSplitResponse, Option[Schema.SourceSplitResponse]] = (fun: Schema.SourceSplitResponse) => Option(fun)
		given putSchemaSourceGetMetadataResponse: Conversion[Schema.SourceGetMetadataResponse, Option[Schema.SourceGetMetadataResponse]] = (fun: Schema.SourceGetMetadataResponse) => Option(fun)
		given putSchemaSourceSplitResponseOutcomeEnum: Conversion[Schema.SourceSplitResponse.OutcomeEnum, Option[Schema.SourceSplitResponse.OutcomeEnum]] = (fun: Schema.SourceSplitResponse.OutcomeEnum) => Option(fun)
		given putListSchemaDerivedSource: Conversion[List[Schema.DerivedSource], Option[List[Schema.DerivedSource]]] = (fun: List[Schema.DerivedSource]) => Option(fun)
		given putListSchemaSourceSplitShard: Conversion[List[Schema.SourceSplitShard], Option[List[Schema.SourceSplitShard]]] = (fun: List[Schema.SourceSplitShard]) => Option(fun)
		given putSchemaSourceSplitShardDerivationModeEnum: Conversion[Schema.SourceSplitShard.DerivationModeEnum, Option[Schema.SourceSplitShard.DerivationModeEnum]] = (fun: Schema.SourceSplitShard.DerivationModeEnum) => Option(fun)
		given putSchemaSourceSplitShard: Conversion[Schema.SourceSplitShard, Option[Schema.SourceSplitShard]] = (fun: Schema.SourceSplitShard) => Option(fun)
		given putListSchemaWorkItemServiceState: Conversion[List[Schema.WorkItemServiceState], Option[List[Schema.WorkItemServiceState]]] = (fun: List[Schema.WorkItemServiceState]) => Option(fun)
		given putSchemaApproximateSplitRequest: Conversion[Schema.ApproximateSplitRequest, Option[Schema.ApproximateSplitRequest]] = (fun: Schema.ApproximateSplitRequest) => Option(fun)
		given putListSchemaMetricShortId: Conversion[List[Schema.MetricShortId], Option[List[Schema.MetricShortId]]] = (fun: List[Schema.MetricShortId]) => Option(fun)
		given putSchemaHotKeyDetection: Conversion[Schema.HotKeyDetection, Option[Schema.HotKeyDetection]] = (fun: Schema.HotKeyDetection) => Option(fun)
		given putListSchemaWorkItem: Conversion[List[Schema.WorkItem], Option[List[Schema.WorkItem]]] = (fun: List[Schema.WorkItem]) => Option(fun)
		given putSchemaMapTask: Conversion[Schema.MapTask, Option[Schema.MapTask]] = (fun: Schema.MapTask) => Option(fun)
		given putSchemaSeqMapTask: Conversion[Schema.SeqMapTask, Option[Schema.SeqMapTask]] = (fun: Schema.SeqMapTask) => Option(fun)
		given putSchemaShellTask: Conversion[Schema.ShellTask, Option[Schema.ShellTask]] = (fun: Schema.ShellTask) => Option(fun)
		given putSchemaStreamingSetupTask: Conversion[Schema.StreamingSetupTask, Option[Schema.StreamingSetupTask]] = (fun: Schema.StreamingSetupTask) => Option(fun)
		given putSchemaSourceOperationRequest: Conversion[Schema.SourceOperationRequest, Option[Schema.SourceOperationRequest]] = (fun: Schema.SourceOperationRequest) => Option(fun)
		given putSchemaStreamingComputationTask: Conversion[Schema.StreamingComputationTask, Option[Schema.StreamingComputationTask]] = (fun: Schema.StreamingComputationTask) => Option(fun)
		given putSchemaStreamingConfigTask: Conversion[Schema.StreamingConfigTask, Option[Schema.StreamingConfigTask]] = (fun: Schema.StreamingConfigTask) => Option(fun)
		given putListSchemaParallelInstruction: Conversion[List[Schema.ParallelInstruction], Option[List[Schema.ParallelInstruction]]] = (fun: List[Schema.ParallelInstruction]) => Option(fun)
		given putSchemaReadInstruction: Conversion[Schema.ReadInstruction, Option[Schema.ReadInstruction]] = (fun: Schema.ReadInstruction) => Option(fun)
		given putSchemaWriteInstruction: Conversion[Schema.WriteInstruction, Option[Schema.WriteInstruction]] = (fun: Schema.WriteInstruction) => Option(fun)
		given putSchemaParDoInstruction: Conversion[Schema.ParDoInstruction, Option[Schema.ParDoInstruction]] = (fun: Schema.ParDoInstruction) => Option(fun)
		given putSchemaPartialGroupByKeyInstruction: Conversion[Schema.PartialGroupByKeyInstruction, Option[Schema.PartialGroupByKeyInstruction]] = (fun: Schema.PartialGroupByKeyInstruction) => Option(fun)
		given putSchemaFlattenInstruction: Conversion[Schema.FlattenInstruction, Option[Schema.FlattenInstruction]] = (fun: Schema.FlattenInstruction) => Option(fun)
		given putListSchemaInstructionOutput: Conversion[List[Schema.InstructionOutput], Option[List[Schema.InstructionOutput]]] = (fun: List[Schema.InstructionOutput]) => Option(fun)
		given putSchemaInstructionInput: Conversion[Schema.InstructionInput, Option[Schema.InstructionInput]] = (fun: Schema.InstructionInput) => Option(fun)
		given putSchemaSink: Conversion[Schema.Sink, Option[Schema.Sink]] = (fun: Schema.Sink) => Option(fun)
		given putListSchemaSideInputInfo: Conversion[List[Schema.SideInputInfo], Option[List[Schema.SideInputInfo]]] = (fun: List[Schema.SideInputInfo]) => Option(fun)
		given putListSchemaMultiOutputInfo: Conversion[List[Schema.MultiOutputInfo], Option[List[Schema.MultiOutputInfo]]] = (fun: List[Schema.MultiOutputInfo]) => Option(fun)
		given putListSchemaSource: Conversion[List[Schema.Source], Option[List[Schema.Source]]] = (fun: List[Schema.Source]) => Option(fun)
		given putListSchemaInstructionInput: Conversion[List[Schema.InstructionInput], Option[List[Schema.InstructionInput]]] = (fun: List[Schema.InstructionInput]) => Option(fun)
		given putListSchemaSeqMapTaskOutputInfo: Conversion[List[Schema.SeqMapTaskOutputInfo], Option[List[Schema.SeqMapTaskOutputInfo]]] = (fun: List[Schema.SeqMapTaskOutputInfo]) => Option(fun)
		given putSchemaTopologyConfig: Conversion[Schema.TopologyConfig, Option[Schema.TopologyConfig]] = (fun: Schema.TopologyConfig) => Option(fun)
		given putSchemaStreamingApplianceSnapshotConfig: Conversion[Schema.StreamingApplianceSnapshotConfig, Option[Schema.StreamingApplianceSnapshotConfig]] = (fun: Schema.StreamingApplianceSnapshotConfig) => Option(fun)
		given putListSchemaComputationTopology: Conversion[List[Schema.ComputationTopology], Option[List[Schema.ComputationTopology]]] = (fun: List[Schema.ComputationTopology]) => Option(fun)
		given putListSchemaDataDiskAssignment: Conversion[List[Schema.DataDiskAssignment], Option[List[Schema.DataDiskAssignment]]] = (fun: List[Schema.DataDiskAssignment]) => Option(fun)
		given putListSchemaKeyRangeLocation: Conversion[List[Schema.KeyRangeLocation], Option[List[Schema.KeyRangeLocation]]] = (fun: List[Schema.KeyRangeLocation]) => Option(fun)
		given putListSchemaStreamLocation: Conversion[List[Schema.StreamLocation], Option[List[Schema.StreamLocation]]] = (fun: List[Schema.StreamLocation]) => Option(fun)
		given putListSchemaStateFamilyConfig: Conversion[List[Schema.StateFamilyConfig], Option[List[Schema.StateFamilyConfig]]] = (fun: List[Schema.StateFamilyConfig]) => Option(fun)
		given putSchemaStreamingStageLocation: Conversion[Schema.StreamingStageLocation, Option[Schema.StreamingStageLocation]] = (fun: Schema.StreamingStageLocation) => Option(fun)
		given putSchemaPubsubLocation: Conversion[Schema.PubsubLocation, Option[Schema.PubsubLocation]] = (fun: Schema.PubsubLocation) => Option(fun)
		given putSchemaStreamingSideInputLocation: Conversion[Schema.StreamingSideInputLocation, Option[Schema.StreamingSideInputLocation]] = (fun: Schema.StreamingSideInputLocation) => Option(fun)
		given putSchemaCustomSourceLocation: Conversion[Schema.CustomSourceLocation, Option[Schema.CustomSourceLocation]] = (fun: Schema.CustomSourceLocation) => Option(fun)
		given putSchemaSourceSplitRequest: Conversion[Schema.SourceSplitRequest, Option[Schema.SourceSplitRequest]] = (fun: Schema.SourceSplitRequest) => Option(fun)
		given putSchemaSourceGetMetadataRequest: Conversion[Schema.SourceGetMetadataRequest, Option[Schema.SourceGetMetadataRequest]] = (fun: Schema.SourceGetMetadataRequest) => Option(fun)
		given putSchemaSourceSplitOptions: Conversion[Schema.SourceSplitOptions, Option[Schema.SourceSplitOptions]] = (fun: Schema.SourceSplitOptions) => Option(fun)
		given putSchemaStreamingComputationTaskTaskTypeEnum: Conversion[Schema.StreamingComputationTask.TaskTypeEnum, Option[Schema.StreamingComputationTask.TaskTypeEnum]] = (fun: Schema.StreamingComputationTask.TaskTypeEnum) => Option(fun)
		given putListSchemaMountedDataDisk: Conversion[List[Schema.MountedDataDisk], Option[List[Schema.MountedDataDisk]]] = (fun: List[Schema.MountedDataDisk]) => Option(fun)
		given putListSchemaStreamingComputationRanges: Conversion[List[Schema.StreamingComputationRanges], Option[List[Schema.StreamingComputationRanges]]] = (fun: List[Schema.StreamingComputationRanges]) => Option(fun)
		given putListSchemaKeyRangeDataDiskAssignment: Conversion[List[Schema.KeyRangeDataDiskAssignment], Option[List[Schema.KeyRangeDataDiskAssignment]]] = (fun: List[Schema.KeyRangeDataDiskAssignment]) => Option(fun)
		given putListSchemaStreamingComputationConfig: Conversion[List[Schema.StreamingComputationConfig], Option[List[Schema.StreamingComputationConfig]]] = (fun: List[Schema.StreamingComputationConfig]) => Option(fun)
		given putSchemaStreamingOperationalLimits: Conversion[Schema.StreamingOperationalLimits, Option[Schema.StreamingOperationalLimits]] = (fun: Schema.StreamingOperationalLimits) => Option(fun)
		given putListSchemaWorkerMessage: Conversion[List[Schema.WorkerMessage], Option[List[Schema.WorkerMessage]]] = (fun: List[Schema.WorkerMessage]) => Option(fun)
		given putSchemaWorkerHealthReport: Conversion[Schema.WorkerHealthReport, Option[Schema.WorkerHealthReport]] = (fun: Schema.WorkerHealthReport) => Option(fun)
		given putSchemaWorkerMessageCode: Conversion[Schema.WorkerMessageCode, Option[Schema.WorkerMessageCode]] = (fun: Schema.WorkerMessageCode) => Option(fun)
		given putSchemaResourceUtilizationReport: Conversion[Schema.ResourceUtilizationReport, Option[Schema.ResourceUtilizationReport]] = (fun: Schema.ResourceUtilizationReport) => Option(fun)
		given putSchemaWorkerShutdownNotice: Conversion[Schema.WorkerShutdownNotice, Option[Schema.WorkerShutdownNotice]] = (fun: Schema.WorkerShutdownNotice) => Option(fun)
		given putSchemaWorkerLifecycleEvent: Conversion[Schema.WorkerLifecycleEvent, Option[Schema.WorkerLifecycleEvent]] = (fun: Schema.WorkerLifecycleEvent) => Option(fun)
		given putSchemaWorkerThreadScalingReport: Conversion[Schema.WorkerThreadScalingReport, Option[Schema.WorkerThreadScalingReport]] = (fun: Schema.WorkerThreadScalingReport) => Option(fun)
		given putSchemaDataSamplingReport: Conversion[Schema.DataSamplingReport, Option[Schema.DataSamplingReport]] = (fun: Schema.DataSamplingReport) => Option(fun)
		given putSchemaStreamingScalingReport: Conversion[Schema.StreamingScalingReport, Option[Schema.StreamingScalingReport]] = (fun: Schema.StreamingScalingReport) => Option(fun)
		given putSchemaPerWorkerMetrics: Conversion[Schema.PerWorkerMetrics, Option[Schema.PerWorkerMetrics]] = (fun: Schema.PerWorkerMetrics) => Option(fun)
		given putListSchemaCPUTime: Conversion[List[Schema.CPUTime], Option[List[Schema.CPUTime]]] = (fun: List[Schema.CPUTime]) => Option(fun)
		given putListSchemaGPUUsage: Conversion[List[Schema.GPUUsage], Option[List[Schema.GPUUsage]]] = (fun: List[Schema.GPUUsage]) => Option(fun)
		given putListSchemaMemInfo: Conversion[List[Schema.MemInfo], Option[List[Schema.MemInfo]]] = (fun: List[Schema.MemInfo]) => Option(fun)
		given putMapStringSchemaResourceUtilizationReport: Conversion[Map[String, Schema.ResourceUtilizationReport], Option[Map[String, Schema.ResourceUtilizationReport]]] = (fun: Map[String, Schema.ResourceUtilizationReport]) => Option(fun)
		given putSchemaGPUUtilization: Conversion[Schema.GPUUtilization, Option[Schema.GPUUtilization]] = (fun: Schema.GPUUtilization) => Option(fun)
		given putSchemaWorkerLifecycleEventEventEnum: Conversion[Schema.WorkerLifecycleEvent.EventEnum, Option[Schema.WorkerLifecycleEvent.EventEnum]] = (fun: Schema.WorkerLifecycleEvent.EventEnum) => Option(fun)
		given putListSchemaPerStepNamespaceMetrics: Conversion[List[Schema.PerStepNamespaceMetrics], Option[List[Schema.PerStepNamespaceMetrics]]] = (fun: List[Schema.PerStepNamespaceMetrics]) => Option(fun)
		given putListSchemaMetricValue: Conversion[List[Schema.MetricValue], Option[List[Schema.MetricValue]]] = (fun: List[Schema.MetricValue]) => Option(fun)
		given putSchemaDataflowHistogramValue: Conversion[Schema.DataflowHistogramValue, Option[Schema.DataflowHistogramValue]] = (fun: Schema.DataflowHistogramValue) => Option(fun)
		given putSchemaBucketOptions: Conversion[Schema.BucketOptions, Option[Schema.BucketOptions]] = (fun: Schema.BucketOptions) => Option(fun)
		given putSchemaOutlierStats: Conversion[Schema.OutlierStats, Option[Schema.OutlierStats]] = (fun: Schema.OutlierStats) => Option(fun)
		given putSchemaLinear: Conversion[Schema.Linear, Option[Schema.Linear]] = (fun: Schema.Linear) => Option(fun)
		given putSchemaBase2Exponent: Conversion[Schema.Base2Exponent, Option[Schema.Base2Exponent]] = (fun: Schema.Base2Exponent) => Option(fun)
		given putListSchemaWorkerMessageResponse: Conversion[List[Schema.WorkerMessageResponse], Option[List[Schema.WorkerMessageResponse]]] = (fun: List[Schema.WorkerMessageResponse]) => Option(fun)
		given putSchemaWorkerHealthReportResponse: Conversion[Schema.WorkerHealthReportResponse, Option[Schema.WorkerHealthReportResponse]] = (fun: Schema.WorkerHealthReportResponse) => Option(fun)
		given putSchemaResourceUtilizationReportResponse: Conversion[Schema.ResourceUtilizationReportResponse, Option[Schema.ResourceUtilizationReportResponse]] = (fun: Schema.ResourceUtilizationReportResponse) => Option(fun)
		given putSchemaWorkerShutdownNoticeResponse: Conversion[Schema.WorkerShutdownNoticeResponse, Option[Schema.WorkerShutdownNoticeResponse]] = (fun: Schema.WorkerShutdownNoticeResponse) => Option(fun)
		given putSchemaWorkerThreadScalingReportResponse: Conversion[Schema.WorkerThreadScalingReportResponse, Option[Schema.WorkerThreadScalingReportResponse]] = (fun: Schema.WorkerThreadScalingReportResponse) => Option(fun)
		given putSchemaStreamingScalingReportResponse: Conversion[Schema.StreamingScalingReportResponse, Option[Schema.StreamingScalingReportResponse]] = (fun: Schema.StreamingScalingReportResponse) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
