package com.boresjo.play.api.google.networkservices

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtListOperationsResponse: Format[Schema.ListOperationsResponse] = Json.format[Schema.ListOperationsResponse]
	given fmtOperation: Format[Schema.Operation] = Json.format[Schema.Operation]
	given fmtStatus: Format[Schema.Status] = Json.format[Schema.Status]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtCancelOperationRequest: Format[Schema.CancelOperationRequest] = Json.format[Schema.CancelOperationRequest]
	given fmtListLbTrafficExtensionsResponse: Format[Schema.ListLbTrafficExtensionsResponse] = Json.format[Schema.ListLbTrafficExtensionsResponse]
	given fmtLbTrafficExtension: Format[Schema.LbTrafficExtension] = Json.format[Schema.LbTrafficExtension]
	given fmtExtensionChain: Format[Schema.ExtensionChain] = Json.format[Schema.ExtensionChain]
	given fmtLbTrafficExtensionLoadBalancingSchemeEnum: Format[Schema.LbTrafficExtension.LoadBalancingSchemeEnum] = JsonEnumFormat[Schema.LbTrafficExtension.LoadBalancingSchemeEnum]
	given fmtExtensionChainMatchCondition: Format[Schema.ExtensionChainMatchCondition] = Json.format[Schema.ExtensionChainMatchCondition]
	given fmtExtensionChainExtension: Format[Schema.ExtensionChainExtension] = Json.format[Schema.ExtensionChainExtension]
	given fmtExtensionChainExtensionSupportedEventsEnum: Format[Schema.ExtensionChainExtension.SupportedEventsEnum] = JsonEnumFormat[Schema.ExtensionChainExtension.SupportedEventsEnum]
	given fmtListLbRouteExtensionsResponse: Format[Schema.ListLbRouteExtensionsResponse] = Json.format[Schema.ListLbRouteExtensionsResponse]
	given fmtLbRouteExtension: Format[Schema.LbRouteExtension] = Json.format[Schema.LbRouteExtension]
	given fmtLbRouteExtensionLoadBalancingSchemeEnum: Format[Schema.LbRouteExtension.LoadBalancingSchemeEnum] = JsonEnumFormat[Schema.LbRouteExtension.LoadBalancingSchemeEnum]
	given fmtListAuthzExtensionsResponse: Format[Schema.ListAuthzExtensionsResponse] = Json.format[Schema.ListAuthzExtensionsResponse]
	given fmtAuthzExtension: Format[Schema.AuthzExtension] = Json.format[Schema.AuthzExtension]
	given fmtAuthzExtensionLoadBalancingSchemeEnum: Format[Schema.AuthzExtension.LoadBalancingSchemeEnum] = JsonEnumFormat[Schema.AuthzExtension.LoadBalancingSchemeEnum]
	given fmtAuthzExtensionWireFormatEnum: Format[Schema.AuthzExtension.WireFormatEnum] = JsonEnumFormat[Schema.AuthzExtension.WireFormatEnum]
	given fmtListEndpointPoliciesResponse: Format[Schema.ListEndpointPoliciesResponse] = Json.format[Schema.ListEndpointPoliciesResponse]
	given fmtEndpointPolicy: Format[Schema.EndpointPolicy] = Json.format[Schema.EndpointPolicy]
	given fmtEndpointPolicyTypeEnum: Format[Schema.EndpointPolicy.TypeEnum] = JsonEnumFormat[Schema.EndpointPolicy.TypeEnum]
	given fmtEndpointMatcher: Format[Schema.EndpointMatcher] = Json.format[Schema.EndpointMatcher]
	given fmtTrafficPortSelector: Format[Schema.TrafficPortSelector] = Json.format[Schema.TrafficPortSelector]
	given fmtEndpointMatcherMetadataLabelMatcher: Format[Schema.EndpointMatcherMetadataLabelMatcher] = Json.format[Schema.EndpointMatcherMetadataLabelMatcher]
	given fmtEndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteriaEnum: Format[Schema.EndpointMatcherMetadataLabelMatcher.MetadataLabelMatchCriteriaEnum] = JsonEnumFormat[Schema.EndpointMatcherMetadataLabelMatcher.MetadataLabelMatchCriteriaEnum]
	given fmtEndpointMatcherMetadataLabelMatcherMetadataLabels: Format[Schema.EndpointMatcherMetadataLabelMatcherMetadataLabels] = Json.format[Schema.EndpointMatcherMetadataLabelMatcherMetadataLabels]
	given fmtListWasmPluginVersionsResponse: Format[Schema.ListWasmPluginVersionsResponse] = Json.format[Schema.ListWasmPluginVersionsResponse]
	given fmtWasmPluginVersion: Format[Schema.WasmPluginVersion] = Json.format[Schema.WasmPluginVersion]
	given fmtListWasmPluginsResponse: Format[Schema.ListWasmPluginsResponse] = Json.format[Schema.ListWasmPluginsResponse]
	given fmtWasmPlugin: Format[Schema.WasmPlugin] = Json.format[Schema.WasmPlugin]
	given fmtWasmPluginLogConfig: Format[Schema.WasmPluginLogConfig] = Json.format[Schema.WasmPluginLogConfig]
	given fmtWasmPluginVersionDetails: Format[Schema.WasmPluginVersionDetails] = Json.format[Schema.WasmPluginVersionDetails]
	given fmtWasmPluginUsedBy: Format[Schema.WasmPluginUsedBy] = Json.format[Schema.WasmPluginUsedBy]
	given fmtWasmPluginLogConfigMinLogLevelEnum: Format[Schema.WasmPluginLogConfig.MinLogLevelEnum] = JsonEnumFormat[Schema.WasmPluginLogConfig.MinLogLevelEnum]
	given fmtListGatewaysResponse: Format[Schema.ListGatewaysResponse] = Json.format[Schema.ListGatewaysResponse]
	given fmtGateway: Format[Schema.Gateway] = Json.format[Schema.Gateway]
	given fmtGatewayTypeEnum: Format[Schema.Gateway.TypeEnum] = JsonEnumFormat[Schema.Gateway.TypeEnum]
	given fmtGatewayIpVersionEnum: Format[Schema.Gateway.IpVersionEnum] = JsonEnumFormat[Schema.Gateway.IpVersionEnum]
	given fmtGatewayEnvoyHeadersEnum: Format[Schema.Gateway.EnvoyHeadersEnum] = JsonEnumFormat[Schema.Gateway.EnvoyHeadersEnum]
	given fmtGatewayRoutingModeEnum: Format[Schema.Gateway.RoutingModeEnum] = JsonEnumFormat[Schema.Gateway.RoutingModeEnum]
	given fmtListGrpcRoutesResponse: Format[Schema.ListGrpcRoutesResponse] = Json.format[Schema.ListGrpcRoutesResponse]
	given fmtGrpcRoute: Format[Schema.GrpcRoute] = Json.format[Schema.GrpcRoute]
	given fmtGrpcRouteRouteRule: Format[Schema.GrpcRouteRouteRule] = Json.format[Schema.GrpcRouteRouteRule]
	given fmtGrpcRouteRouteMatch: Format[Schema.GrpcRouteRouteMatch] = Json.format[Schema.GrpcRouteRouteMatch]
	given fmtGrpcRouteRouteAction: Format[Schema.GrpcRouteRouteAction] = Json.format[Schema.GrpcRouteRouteAction]
	given fmtGrpcRouteMethodMatch: Format[Schema.GrpcRouteMethodMatch] = Json.format[Schema.GrpcRouteMethodMatch]
	given fmtGrpcRouteHeaderMatch: Format[Schema.GrpcRouteHeaderMatch] = Json.format[Schema.GrpcRouteHeaderMatch]
	given fmtGrpcRouteMethodMatchTypeEnum: Format[Schema.GrpcRouteMethodMatch.TypeEnum] = JsonEnumFormat[Schema.GrpcRouteMethodMatch.TypeEnum]
	given fmtGrpcRouteHeaderMatchTypeEnum: Format[Schema.GrpcRouteHeaderMatch.TypeEnum] = JsonEnumFormat[Schema.GrpcRouteHeaderMatch.TypeEnum]
	given fmtGrpcRouteDestination: Format[Schema.GrpcRouteDestination] = Json.format[Schema.GrpcRouteDestination]
	given fmtGrpcRouteFaultInjectionPolicy: Format[Schema.GrpcRouteFaultInjectionPolicy] = Json.format[Schema.GrpcRouteFaultInjectionPolicy]
	given fmtGrpcRouteRetryPolicy: Format[Schema.GrpcRouteRetryPolicy] = Json.format[Schema.GrpcRouteRetryPolicy]
	given fmtGrpcRouteStatefulSessionAffinityPolicy: Format[Schema.GrpcRouteStatefulSessionAffinityPolicy] = Json.format[Schema.GrpcRouteStatefulSessionAffinityPolicy]
	given fmtGrpcRouteFaultInjectionPolicyDelay: Format[Schema.GrpcRouteFaultInjectionPolicyDelay] = Json.format[Schema.GrpcRouteFaultInjectionPolicyDelay]
	given fmtGrpcRouteFaultInjectionPolicyAbort: Format[Schema.GrpcRouteFaultInjectionPolicyAbort] = Json.format[Schema.GrpcRouteFaultInjectionPolicyAbort]
	given fmtListHttpRoutesResponse: Format[Schema.ListHttpRoutesResponse] = Json.format[Schema.ListHttpRoutesResponse]
	given fmtHttpRoute: Format[Schema.HttpRoute] = Json.format[Schema.HttpRoute]
	given fmtHttpRouteRouteRule: Format[Schema.HttpRouteRouteRule] = Json.format[Schema.HttpRouteRouteRule]
	given fmtHttpRouteRouteMatch: Format[Schema.HttpRouteRouteMatch] = Json.format[Schema.HttpRouteRouteMatch]
	given fmtHttpRouteRouteAction: Format[Schema.HttpRouteRouteAction] = Json.format[Schema.HttpRouteRouteAction]
	given fmtHttpRouteHeaderMatch: Format[Schema.HttpRouteHeaderMatch] = Json.format[Schema.HttpRouteHeaderMatch]
	given fmtHttpRouteQueryParameterMatch: Format[Schema.HttpRouteQueryParameterMatch] = Json.format[Schema.HttpRouteQueryParameterMatch]
	given fmtHttpRouteHeaderMatchIntegerRange: Format[Schema.HttpRouteHeaderMatchIntegerRange] = Json.format[Schema.HttpRouteHeaderMatchIntegerRange]
	given fmtHttpRouteDestination: Format[Schema.HttpRouteDestination] = Json.format[Schema.HttpRouteDestination]
	given fmtHttpRouteRedirect: Format[Schema.HttpRouteRedirect] = Json.format[Schema.HttpRouteRedirect]
	given fmtHttpRouteFaultInjectionPolicy: Format[Schema.HttpRouteFaultInjectionPolicy] = Json.format[Schema.HttpRouteFaultInjectionPolicy]
	given fmtHttpRouteHeaderModifier: Format[Schema.HttpRouteHeaderModifier] = Json.format[Schema.HttpRouteHeaderModifier]
	given fmtHttpRouteURLRewrite: Format[Schema.HttpRouteURLRewrite] = Json.format[Schema.HttpRouteURLRewrite]
	given fmtHttpRouteRetryPolicy: Format[Schema.HttpRouteRetryPolicy] = Json.format[Schema.HttpRouteRetryPolicy]
	given fmtHttpRouteRequestMirrorPolicy: Format[Schema.HttpRouteRequestMirrorPolicy] = Json.format[Schema.HttpRouteRequestMirrorPolicy]
	given fmtHttpRouteCorsPolicy: Format[Schema.HttpRouteCorsPolicy] = Json.format[Schema.HttpRouteCorsPolicy]
	given fmtHttpRouteStatefulSessionAffinityPolicy: Format[Schema.HttpRouteStatefulSessionAffinityPolicy] = Json.format[Schema.HttpRouteStatefulSessionAffinityPolicy]
	given fmtHttpRouteHttpDirectResponse: Format[Schema.HttpRouteHttpDirectResponse] = Json.format[Schema.HttpRouteHttpDirectResponse]
	given fmtHttpRouteRedirectResponseCodeEnum: Format[Schema.HttpRouteRedirect.ResponseCodeEnum] = JsonEnumFormat[Schema.HttpRouteRedirect.ResponseCodeEnum]
	given fmtHttpRouteFaultInjectionPolicyDelay: Format[Schema.HttpRouteFaultInjectionPolicyDelay] = Json.format[Schema.HttpRouteFaultInjectionPolicyDelay]
	given fmtHttpRouteFaultInjectionPolicyAbort: Format[Schema.HttpRouteFaultInjectionPolicyAbort] = Json.format[Schema.HttpRouteFaultInjectionPolicyAbort]
	given fmtListTcpRoutesResponse: Format[Schema.ListTcpRoutesResponse] = Json.format[Schema.ListTcpRoutesResponse]
	given fmtTcpRoute: Format[Schema.TcpRoute] = Json.format[Schema.TcpRoute]
	given fmtTcpRouteRouteRule: Format[Schema.TcpRouteRouteRule] = Json.format[Schema.TcpRouteRouteRule]
	given fmtTcpRouteRouteMatch: Format[Schema.TcpRouteRouteMatch] = Json.format[Schema.TcpRouteRouteMatch]
	given fmtTcpRouteRouteAction: Format[Schema.TcpRouteRouteAction] = Json.format[Schema.TcpRouteRouteAction]
	given fmtTcpRouteRouteDestination: Format[Schema.TcpRouteRouteDestination] = Json.format[Schema.TcpRouteRouteDestination]
	given fmtListTlsRoutesResponse: Format[Schema.ListTlsRoutesResponse] = Json.format[Schema.ListTlsRoutesResponse]
	given fmtTlsRoute: Format[Schema.TlsRoute] = Json.format[Schema.TlsRoute]
	given fmtTlsRouteRouteRule: Format[Schema.TlsRouteRouteRule] = Json.format[Schema.TlsRouteRouteRule]
	given fmtTlsRouteRouteMatch: Format[Schema.TlsRouteRouteMatch] = Json.format[Schema.TlsRouteRouteMatch]
	given fmtTlsRouteRouteAction: Format[Schema.TlsRouteRouteAction] = Json.format[Schema.TlsRouteRouteAction]
	given fmtTlsRouteRouteDestination: Format[Schema.TlsRouteRouteDestination] = Json.format[Schema.TlsRouteRouteDestination]
	given fmtListServiceBindingsResponse: Format[Schema.ListServiceBindingsResponse] = Json.format[Schema.ListServiceBindingsResponse]
	given fmtServiceBinding: Format[Schema.ServiceBinding] = Json.format[Schema.ServiceBinding]
	given fmtListMeshesResponse: Format[Schema.ListMeshesResponse] = Json.format[Schema.ListMeshesResponse]
	given fmtMesh: Format[Schema.Mesh] = Json.format[Schema.Mesh]
	given fmtMeshEnvoyHeadersEnum: Format[Schema.Mesh.EnvoyHeadersEnum] = JsonEnumFormat[Schema.Mesh.EnvoyHeadersEnum]
	given fmtListServiceLbPoliciesResponse: Format[Schema.ListServiceLbPoliciesResponse] = Json.format[Schema.ListServiceLbPoliciesResponse]
	given fmtServiceLbPolicy: Format[Schema.ServiceLbPolicy] = Json.format[Schema.ServiceLbPolicy]
	given fmtServiceLbPolicyLoadBalancingAlgorithmEnum: Format[Schema.ServiceLbPolicy.LoadBalancingAlgorithmEnum] = JsonEnumFormat[Schema.ServiceLbPolicy.LoadBalancingAlgorithmEnum]
	given fmtServiceLbPolicyAutoCapacityDrain: Format[Schema.ServiceLbPolicyAutoCapacityDrain] = Json.format[Schema.ServiceLbPolicyAutoCapacityDrain]
	given fmtServiceLbPolicyFailoverConfig: Format[Schema.ServiceLbPolicyFailoverConfig] = Json.format[Schema.ServiceLbPolicyFailoverConfig]
	given fmtGatewayRouteView: Format[Schema.GatewayRouteView] = Json.format[Schema.GatewayRouteView]
	given fmtMeshRouteView: Format[Schema.MeshRouteView] = Json.format[Schema.MeshRouteView]
	given fmtListGatewayRouteViewsResponse: Format[Schema.ListGatewayRouteViewsResponse] = Json.format[Schema.ListGatewayRouteViewsResponse]
	given fmtListMeshRouteViewsResponse: Format[Schema.ListMeshRouteViewsResponse] = Json.format[Schema.ListMeshRouteViewsResponse]
	given fmtListLocationsResponse: Format[Schema.ListLocationsResponse] = Json.format[Schema.ListLocationsResponse]
	given fmtLocation: Format[Schema.Location] = Json.format[Schema.Location]
	given fmtSetIamPolicyRequest: Format[Schema.SetIamPolicyRequest] = Json.format[Schema.SetIamPolicyRequest]
	given fmtPolicy: Format[Schema.Policy] = Json.format[Schema.Policy]
	given fmtBinding: Format[Schema.Binding] = Json.format[Schema.Binding]
	given fmtAuditConfig: Format[Schema.AuditConfig] = Json.format[Schema.AuditConfig]
	given fmtExpr: Format[Schema.Expr] = Json.format[Schema.Expr]
	given fmtAuditLogConfig: Format[Schema.AuditLogConfig] = Json.format[Schema.AuditLogConfig]
	given fmtAuditLogConfigLogTypeEnum: Format[Schema.AuditLogConfig.LogTypeEnum] = JsonEnumFormat[Schema.AuditLogConfig.LogTypeEnum]
	given fmtTestIamPermissionsRequest: Format[Schema.TestIamPermissionsRequest] = Json.format[Schema.TestIamPermissionsRequest]
	given fmtTestIamPermissionsResponse: Format[Schema.TestIamPermissionsResponse] = Json.format[Schema.TestIamPermissionsResponse]
	given fmtOperationMetadata: Format[Schema.OperationMetadata] = Json.format[Schema.OperationMetadata]
	given fmtLoggingConfig: Format[Schema.LoggingConfig] = Json.format[Schema.LoggingConfig]
	given fmtLoggingConfigLogSeverityEnum: Format[Schema.LoggingConfig.LogSeverityEnum] = JsonEnumFormat[Schema.LoggingConfig.LogSeverityEnum]
	given fmtRetryFilterPerRouteConfig: Format[Schema.RetryFilterPerRouteConfig] = Json.format[Schema.RetryFilterPerRouteConfig]
}
