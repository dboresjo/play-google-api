package com.boresjo.play.api.google.mybusinesslodging

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putSchemaLodgingMetadata: Conversion[Schema.LodgingMetadata, Option[Schema.LodgingMetadata]] = (fun: Schema.LodgingMetadata) => Option(fun)
		given putSchemaProperty: Conversion[Schema.Property, Option[Schema.Property]] = (fun: Schema.Property) => Option(fun)
		given putSchemaServices: Conversion[Schema.Services, Option[Schema.Services]] = (fun: Schema.Services) => Option(fun)
		given putSchemaPolicies: Conversion[Schema.Policies, Option[Schema.Policies]] = (fun: Schema.Policies) => Option(fun)
		given putSchemaFoodAndDrink: Conversion[Schema.FoodAndDrink, Option[Schema.FoodAndDrink]] = (fun: Schema.FoodAndDrink) => Option(fun)
		given putSchemaPools: Conversion[Schema.Pools, Option[Schema.Pools]] = (fun: Schema.Pools) => Option(fun)
		given putSchemaWellness: Conversion[Schema.Wellness, Option[Schema.Wellness]] = (fun: Schema.Wellness) => Option(fun)
		given putSchemaActivities: Conversion[Schema.Activities, Option[Schema.Activities]] = (fun: Schema.Activities) => Option(fun)
		given putSchemaTransportation: Conversion[Schema.Transportation, Option[Schema.Transportation]] = (fun: Schema.Transportation) => Option(fun)
		given putSchemaFamilies: Conversion[Schema.Families, Option[Schema.Families]] = (fun: Schema.Families) => Option(fun)
		given putSchemaConnectivity: Conversion[Schema.Connectivity, Option[Schema.Connectivity]] = (fun: Schema.Connectivity) => Option(fun)
		given putSchemaBusiness: Conversion[Schema.Business, Option[Schema.Business]] = (fun: Schema.Business) => Option(fun)
		given putSchemaAccessibility: Conversion[Schema.Accessibility, Option[Schema.Accessibility]] = (fun: Schema.Accessibility) => Option(fun)
		given putSchemaPets: Conversion[Schema.Pets, Option[Schema.Pets]] = (fun: Schema.Pets) => Option(fun)
		given putSchemaParking: Conversion[Schema.Parking, Option[Schema.Parking]] = (fun: Schema.Parking) => Option(fun)
		given putSchemaHousekeeping: Conversion[Schema.Housekeeping, Option[Schema.Housekeeping]] = (fun: Schema.Housekeeping) => Option(fun)
		given putSchemaHealthAndSafety: Conversion[Schema.HealthAndSafety, Option[Schema.HealthAndSafety]] = (fun: Schema.HealthAndSafety) => Option(fun)
		given putSchemaSustainability: Conversion[Schema.Sustainability, Option[Schema.Sustainability]] = (fun: Schema.Sustainability) => Option(fun)
		given putSchemaLivingArea: Conversion[Schema.LivingArea, Option[Schema.LivingArea]] = (fun: Schema.LivingArea) => Option(fun)
		given putListSchemaGuestUnitType: Conversion[List[Schema.GuestUnitType], Option[List[Schema.GuestUnitType]]] = (fun: List[Schema.GuestUnitType]) => Option(fun)
		given putSchemaGuestUnitFeatures: Conversion[Schema.GuestUnitFeatures, Option[Schema.GuestUnitFeatures]] = (fun: Schema.GuestUnitFeatures) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putSchemaPropertyBuiltYearExceptionEnum: Conversion[Schema.Property.BuiltYearExceptionEnum, Option[Schema.Property.BuiltYearExceptionEnum]] = (fun: Schema.Property.BuiltYearExceptionEnum) => Option(fun)
		given putSchemaPropertyLastRenovatedYearExceptionEnum: Conversion[Schema.Property.LastRenovatedYearExceptionEnum, Option[Schema.Property.LastRenovatedYearExceptionEnum]] = (fun: Schema.Property.LastRenovatedYearExceptionEnum) => Option(fun)
		given putSchemaPropertyRoomsCountExceptionEnum: Conversion[Schema.Property.RoomsCountExceptionEnum, Option[Schema.Property.RoomsCountExceptionEnum]] = (fun: Schema.Property.RoomsCountExceptionEnum) => Option(fun)
		given putSchemaPropertyFloorsCountExceptionEnum: Conversion[Schema.Property.FloorsCountExceptionEnum, Option[Schema.Property.FloorsCountExceptionEnum]] = (fun: Schema.Property.FloorsCountExceptionEnum) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaServicesFrontDeskExceptionEnum: Conversion[Schema.Services.FrontDeskExceptionEnum, Option[Schema.Services.FrontDeskExceptionEnum]] = (fun: Schema.Services.FrontDeskExceptionEnum) => Option(fun)
		given putSchemaServicesTwentyFourHourFrontDeskExceptionEnum: Conversion[Schema.Services.TwentyFourHourFrontDeskExceptionEnum, Option[Schema.Services.TwentyFourHourFrontDeskExceptionEnum]] = (fun: Schema.Services.TwentyFourHourFrontDeskExceptionEnum) => Option(fun)
		given putSchemaServicesConciergeExceptionEnum: Conversion[Schema.Services.ConciergeExceptionEnum, Option[Schema.Services.ConciergeExceptionEnum]] = (fun: Schema.Services.ConciergeExceptionEnum) => Option(fun)
		given putSchemaServicesElevatorExceptionEnum: Conversion[Schema.Services.ElevatorExceptionEnum, Option[Schema.Services.ElevatorExceptionEnum]] = (fun: Schema.Services.ElevatorExceptionEnum) => Option(fun)
		given putSchemaServicesBaggageStorageExceptionEnum: Conversion[Schema.Services.BaggageStorageExceptionEnum, Option[Schema.Services.BaggageStorageExceptionEnum]] = (fun: Schema.Services.BaggageStorageExceptionEnum) => Option(fun)
		given putSchemaServicesFullServiceLaundryExceptionEnum: Conversion[Schema.Services.FullServiceLaundryExceptionEnum, Option[Schema.Services.FullServiceLaundryExceptionEnum]] = (fun: Schema.Services.FullServiceLaundryExceptionEnum) => Option(fun)
		given putSchemaServicesSelfServiceLaundryExceptionEnum: Conversion[Schema.Services.SelfServiceLaundryExceptionEnum, Option[Schema.Services.SelfServiceLaundryExceptionEnum]] = (fun: Schema.Services.SelfServiceLaundryExceptionEnum) => Option(fun)
		given putSchemaServicesSocialHourExceptionEnum: Conversion[Schema.Services.SocialHourExceptionEnum, Option[Schema.Services.SocialHourExceptionEnum]] = (fun: Schema.Services.SocialHourExceptionEnum) => Option(fun)
		given putSchemaServicesWakeUpCallsExceptionEnum: Conversion[Schema.Services.WakeUpCallsExceptionEnum, Option[Schema.Services.WakeUpCallsExceptionEnum]] = (fun: Schema.Services.WakeUpCallsExceptionEnum) => Option(fun)
		given putSchemaServicesConvenienceStoreExceptionEnum: Conversion[Schema.Services.ConvenienceStoreExceptionEnum, Option[Schema.Services.ConvenienceStoreExceptionEnum]] = (fun: Schema.Services.ConvenienceStoreExceptionEnum) => Option(fun)
		given putSchemaServicesGiftShopExceptionEnum: Conversion[Schema.Services.GiftShopExceptionEnum, Option[Schema.Services.GiftShopExceptionEnum]] = (fun: Schema.Services.GiftShopExceptionEnum) => Option(fun)
		given putSchemaServicesCurrencyExchangeExceptionEnum: Conversion[Schema.Services.CurrencyExchangeExceptionEnum, Option[Schema.Services.CurrencyExchangeExceptionEnum]] = (fun: Schema.Services.CurrencyExchangeExceptionEnum) => Option(fun)
		given putListSchemaLanguageSpoken: Conversion[List[Schema.LanguageSpoken], Option[List[Schema.LanguageSpoken]]] = (fun: List[Schema.LanguageSpoken]) => Option(fun)
		given putSchemaLanguageSpokenSpokenExceptionEnum: Conversion[Schema.LanguageSpoken.SpokenExceptionEnum, Option[Schema.LanguageSpoken.SpokenExceptionEnum]] = (fun: Schema.LanguageSpoken.SpokenExceptionEnum) => Option(fun)
		given putSchemaTimeOfDay: Conversion[Schema.TimeOfDay, Option[Schema.TimeOfDay]] = (fun: Schema.TimeOfDay) => Option(fun)
		given putSchemaPoliciesCheckinTimeExceptionEnum: Conversion[Schema.Policies.CheckinTimeExceptionEnum, Option[Schema.Policies.CheckinTimeExceptionEnum]] = (fun: Schema.Policies.CheckinTimeExceptionEnum) => Option(fun)
		given putSchemaPoliciesCheckoutTimeExceptionEnum: Conversion[Schema.Policies.CheckoutTimeExceptionEnum, Option[Schema.Policies.CheckoutTimeExceptionEnum]] = (fun: Schema.Policies.CheckoutTimeExceptionEnum) => Option(fun)
		given putSchemaPoliciesKidsStayFreeExceptionEnum: Conversion[Schema.Policies.KidsStayFreeExceptionEnum, Option[Schema.Policies.KidsStayFreeExceptionEnum]] = (fun: Schema.Policies.KidsStayFreeExceptionEnum) => Option(fun)
		given putSchemaPoliciesMaxKidsStayFreeCountExceptionEnum: Conversion[Schema.Policies.MaxKidsStayFreeCountExceptionEnum, Option[Schema.Policies.MaxKidsStayFreeCountExceptionEnum]] = (fun: Schema.Policies.MaxKidsStayFreeCountExceptionEnum) => Option(fun)
		given putSchemaPoliciesMaxChildAgeExceptionEnum: Conversion[Schema.Policies.MaxChildAgeExceptionEnum, Option[Schema.Policies.MaxChildAgeExceptionEnum]] = (fun: Schema.Policies.MaxChildAgeExceptionEnum) => Option(fun)
		given putSchemaPoliciesSmokeFreePropertyExceptionEnum: Conversion[Schema.Policies.SmokeFreePropertyExceptionEnum, Option[Schema.Policies.SmokeFreePropertyExceptionEnum]] = (fun: Schema.Policies.SmokeFreePropertyExceptionEnum) => Option(fun)
		given putSchemaPoliciesAllInclusiveAvailableExceptionEnum: Conversion[Schema.Policies.AllInclusiveAvailableExceptionEnum, Option[Schema.Policies.AllInclusiveAvailableExceptionEnum]] = (fun: Schema.Policies.AllInclusiveAvailableExceptionEnum) => Option(fun)
		given putSchemaPoliciesAllInclusiveOnlyExceptionEnum: Conversion[Schema.Policies.AllInclusiveOnlyExceptionEnum, Option[Schema.Policies.AllInclusiveOnlyExceptionEnum]] = (fun: Schema.Policies.AllInclusiveOnlyExceptionEnum) => Option(fun)
		given putSchemaPaymentOptions: Conversion[Schema.PaymentOptions, Option[Schema.PaymentOptions]] = (fun: Schema.PaymentOptions) => Option(fun)
		given putSchemaPaymentOptionsCashExceptionEnum: Conversion[Schema.PaymentOptions.CashExceptionEnum, Option[Schema.PaymentOptions.CashExceptionEnum]] = (fun: Schema.PaymentOptions.CashExceptionEnum) => Option(fun)
		given putSchemaPaymentOptionsChequeExceptionEnum: Conversion[Schema.PaymentOptions.ChequeExceptionEnum, Option[Schema.PaymentOptions.ChequeExceptionEnum]] = (fun: Schema.PaymentOptions.ChequeExceptionEnum) => Option(fun)
		given putSchemaPaymentOptionsCreditCardExceptionEnum: Conversion[Schema.PaymentOptions.CreditCardExceptionEnum, Option[Schema.PaymentOptions.CreditCardExceptionEnum]] = (fun: Schema.PaymentOptions.CreditCardExceptionEnum) => Option(fun)
		given putSchemaPaymentOptionsDebitCardExceptionEnum: Conversion[Schema.PaymentOptions.DebitCardExceptionEnum, Option[Schema.PaymentOptions.DebitCardExceptionEnum]] = (fun: Schema.PaymentOptions.DebitCardExceptionEnum) => Option(fun)
		given putSchemaPaymentOptionsMobileNfcExceptionEnum: Conversion[Schema.PaymentOptions.MobileNfcExceptionEnum, Option[Schema.PaymentOptions.MobileNfcExceptionEnum]] = (fun: Schema.PaymentOptions.MobileNfcExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkRoomServiceExceptionEnum: Conversion[Schema.FoodAndDrink.RoomServiceExceptionEnum, Option[Schema.FoodAndDrink.RoomServiceExceptionEnum]] = (fun: Schema.FoodAndDrink.RoomServiceExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkTwentyFourHourRoomServiceExceptionEnum: Conversion[Schema.FoodAndDrink.TwentyFourHourRoomServiceExceptionEnum, Option[Schema.FoodAndDrink.TwentyFourHourRoomServiceExceptionEnum]] = (fun: Schema.FoodAndDrink.TwentyFourHourRoomServiceExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkRestaurantExceptionEnum: Conversion[Schema.FoodAndDrink.RestaurantExceptionEnum, Option[Schema.FoodAndDrink.RestaurantExceptionEnum]] = (fun: Schema.FoodAndDrink.RestaurantExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkRestaurantsCountExceptionEnum: Conversion[Schema.FoodAndDrink.RestaurantsCountExceptionEnum, Option[Schema.FoodAndDrink.RestaurantsCountExceptionEnum]] = (fun: Schema.FoodAndDrink.RestaurantsCountExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkTableServiceExceptionEnum: Conversion[Schema.FoodAndDrink.TableServiceExceptionEnum, Option[Schema.FoodAndDrink.TableServiceExceptionEnum]] = (fun: Schema.FoodAndDrink.TableServiceExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkBuffetExceptionEnum: Conversion[Schema.FoodAndDrink.BuffetExceptionEnum, Option[Schema.FoodAndDrink.BuffetExceptionEnum]] = (fun: Schema.FoodAndDrink.BuffetExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkDinnerBuffetExceptionEnum: Conversion[Schema.FoodAndDrink.DinnerBuffetExceptionEnum, Option[Schema.FoodAndDrink.DinnerBuffetExceptionEnum]] = (fun: Schema.FoodAndDrink.DinnerBuffetExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkBreakfastBuffetExceptionEnum: Conversion[Schema.FoodAndDrink.BreakfastBuffetExceptionEnum, Option[Schema.FoodAndDrink.BreakfastBuffetExceptionEnum]] = (fun: Schema.FoodAndDrink.BreakfastBuffetExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkBreakfastAvailableExceptionEnum: Conversion[Schema.FoodAndDrink.BreakfastAvailableExceptionEnum, Option[Schema.FoodAndDrink.BreakfastAvailableExceptionEnum]] = (fun: Schema.FoodAndDrink.BreakfastAvailableExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkFreeBreakfastExceptionEnum: Conversion[Schema.FoodAndDrink.FreeBreakfastExceptionEnum, Option[Schema.FoodAndDrink.FreeBreakfastExceptionEnum]] = (fun: Schema.FoodAndDrink.FreeBreakfastExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkBarExceptionEnum: Conversion[Schema.FoodAndDrink.BarExceptionEnum, Option[Schema.FoodAndDrink.BarExceptionEnum]] = (fun: Schema.FoodAndDrink.BarExceptionEnum) => Option(fun)
		given putSchemaFoodAndDrinkVendingMachineExceptionEnum: Conversion[Schema.FoodAndDrink.VendingMachineExceptionEnum, Option[Schema.FoodAndDrink.VendingMachineExceptionEnum]] = (fun: Schema.FoodAndDrink.VendingMachineExceptionEnum) => Option(fun)
		given putSchemaPoolsPoolExceptionEnum: Conversion[Schema.Pools.PoolExceptionEnum, Option[Schema.Pools.PoolExceptionEnum]] = (fun: Schema.Pools.PoolExceptionEnum) => Option(fun)
		given putSchemaPoolsPoolsCountExceptionEnum: Conversion[Schema.Pools.PoolsCountExceptionEnum, Option[Schema.Pools.PoolsCountExceptionEnum]] = (fun: Schema.Pools.PoolsCountExceptionEnum) => Option(fun)
		given putSchemaPoolsIndoorPoolExceptionEnum: Conversion[Schema.Pools.IndoorPoolExceptionEnum, Option[Schema.Pools.IndoorPoolExceptionEnum]] = (fun: Schema.Pools.IndoorPoolExceptionEnum) => Option(fun)
		given putSchemaPoolsIndoorPoolsCountExceptionEnum: Conversion[Schema.Pools.IndoorPoolsCountExceptionEnum, Option[Schema.Pools.IndoorPoolsCountExceptionEnum]] = (fun: Schema.Pools.IndoorPoolsCountExceptionEnum) => Option(fun)
		given putSchemaPoolsOutdoorPoolExceptionEnum: Conversion[Schema.Pools.OutdoorPoolExceptionEnum, Option[Schema.Pools.OutdoorPoolExceptionEnum]] = (fun: Schema.Pools.OutdoorPoolExceptionEnum) => Option(fun)
		given putSchemaPoolsOutdoorPoolsCountExceptionEnum: Conversion[Schema.Pools.OutdoorPoolsCountExceptionEnum, Option[Schema.Pools.OutdoorPoolsCountExceptionEnum]] = (fun: Schema.Pools.OutdoorPoolsCountExceptionEnum) => Option(fun)
		given putSchemaPoolsHotTubExceptionEnum: Conversion[Schema.Pools.HotTubExceptionEnum, Option[Schema.Pools.HotTubExceptionEnum]] = (fun: Schema.Pools.HotTubExceptionEnum) => Option(fun)
		given putSchemaPoolsWaterslideExceptionEnum: Conversion[Schema.Pools.WaterslideExceptionEnum, Option[Schema.Pools.WaterslideExceptionEnum]] = (fun: Schema.Pools.WaterslideExceptionEnum) => Option(fun)
		given putSchemaPoolsLazyRiverExceptionEnum: Conversion[Schema.Pools.LazyRiverExceptionEnum, Option[Schema.Pools.LazyRiverExceptionEnum]] = (fun: Schema.Pools.LazyRiverExceptionEnum) => Option(fun)
		given putSchemaPoolsAdultPoolExceptionEnum: Conversion[Schema.Pools.AdultPoolExceptionEnum, Option[Schema.Pools.AdultPoolExceptionEnum]] = (fun: Schema.Pools.AdultPoolExceptionEnum) => Option(fun)
		given putSchemaPoolsWadingPoolExceptionEnum: Conversion[Schema.Pools.WadingPoolExceptionEnum, Option[Schema.Pools.WadingPoolExceptionEnum]] = (fun: Schema.Pools.WadingPoolExceptionEnum) => Option(fun)
		given putSchemaPoolsWavePoolExceptionEnum: Conversion[Schema.Pools.WavePoolExceptionEnum, Option[Schema.Pools.WavePoolExceptionEnum]] = (fun: Schema.Pools.WavePoolExceptionEnum) => Option(fun)
		given putSchemaPoolsWaterParkExceptionEnum: Conversion[Schema.Pools.WaterParkExceptionEnum, Option[Schema.Pools.WaterParkExceptionEnum]] = (fun: Schema.Pools.WaterParkExceptionEnum) => Option(fun)
		given putSchemaPoolsLifeguardExceptionEnum: Conversion[Schema.Pools.LifeguardExceptionEnum, Option[Schema.Pools.LifeguardExceptionEnum]] = (fun: Schema.Pools.LifeguardExceptionEnum) => Option(fun)
		given putSchemaWellnessFitnessCenterExceptionEnum: Conversion[Schema.Wellness.FitnessCenterExceptionEnum, Option[Schema.Wellness.FitnessCenterExceptionEnum]] = (fun: Schema.Wellness.FitnessCenterExceptionEnum) => Option(fun)
		given putSchemaWellnessFreeFitnessCenterExceptionEnum: Conversion[Schema.Wellness.FreeFitnessCenterExceptionEnum, Option[Schema.Wellness.FreeFitnessCenterExceptionEnum]] = (fun: Schema.Wellness.FreeFitnessCenterExceptionEnum) => Option(fun)
		given putSchemaWellnessEllipticalMachineExceptionEnum: Conversion[Schema.Wellness.EllipticalMachineExceptionEnum, Option[Schema.Wellness.EllipticalMachineExceptionEnum]] = (fun: Schema.Wellness.EllipticalMachineExceptionEnum) => Option(fun)
		given putSchemaWellnessTreadmillExceptionEnum: Conversion[Schema.Wellness.TreadmillExceptionEnum, Option[Schema.Wellness.TreadmillExceptionEnum]] = (fun: Schema.Wellness.TreadmillExceptionEnum) => Option(fun)
		given putSchemaWellnessWeightMachineExceptionEnum: Conversion[Schema.Wellness.WeightMachineExceptionEnum, Option[Schema.Wellness.WeightMachineExceptionEnum]] = (fun: Schema.Wellness.WeightMachineExceptionEnum) => Option(fun)
		given putSchemaWellnessFreeWeightsExceptionEnum: Conversion[Schema.Wellness.FreeWeightsExceptionEnum, Option[Schema.Wellness.FreeWeightsExceptionEnum]] = (fun: Schema.Wellness.FreeWeightsExceptionEnum) => Option(fun)
		given putSchemaWellnessSpaExceptionEnum: Conversion[Schema.Wellness.SpaExceptionEnum, Option[Schema.Wellness.SpaExceptionEnum]] = (fun: Schema.Wellness.SpaExceptionEnum) => Option(fun)
		given putSchemaWellnessSalonExceptionEnum: Conversion[Schema.Wellness.SalonExceptionEnum, Option[Schema.Wellness.SalonExceptionEnum]] = (fun: Schema.Wellness.SalonExceptionEnum) => Option(fun)
		given putSchemaWellnessSaunaExceptionEnum: Conversion[Schema.Wellness.SaunaExceptionEnum, Option[Schema.Wellness.SaunaExceptionEnum]] = (fun: Schema.Wellness.SaunaExceptionEnum) => Option(fun)
		given putSchemaWellnessMassageExceptionEnum: Conversion[Schema.Wellness.MassageExceptionEnum, Option[Schema.Wellness.MassageExceptionEnum]] = (fun: Schema.Wellness.MassageExceptionEnum) => Option(fun)
		given putSchemaWellnessDoctorOnCallExceptionEnum: Conversion[Schema.Wellness.DoctorOnCallExceptionEnum, Option[Schema.Wellness.DoctorOnCallExceptionEnum]] = (fun: Schema.Wellness.DoctorOnCallExceptionEnum) => Option(fun)
		given putSchemaActivitiesGameRoomExceptionEnum: Conversion[Schema.Activities.GameRoomExceptionEnum, Option[Schema.Activities.GameRoomExceptionEnum]] = (fun: Schema.Activities.GameRoomExceptionEnum) => Option(fun)
		given putSchemaActivitiesNightclubExceptionEnum: Conversion[Schema.Activities.NightclubExceptionEnum, Option[Schema.Activities.NightclubExceptionEnum]] = (fun: Schema.Activities.NightclubExceptionEnum) => Option(fun)
		given putSchemaActivitiesCasinoExceptionEnum: Conversion[Schema.Activities.CasinoExceptionEnum, Option[Schema.Activities.CasinoExceptionEnum]] = (fun: Schema.Activities.CasinoExceptionEnum) => Option(fun)
		given putSchemaActivitiesBoutiqueStoresExceptionEnum: Conversion[Schema.Activities.BoutiqueStoresExceptionEnum, Option[Schema.Activities.BoutiqueStoresExceptionEnum]] = (fun: Schema.Activities.BoutiqueStoresExceptionEnum) => Option(fun)
		given putSchemaActivitiesTennisExceptionEnum: Conversion[Schema.Activities.TennisExceptionEnum, Option[Schema.Activities.TennisExceptionEnum]] = (fun: Schema.Activities.TennisExceptionEnum) => Option(fun)
		given putSchemaActivitiesGolfExceptionEnum: Conversion[Schema.Activities.GolfExceptionEnum, Option[Schema.Activities.GolfExceptionEnum]] = (fun: Schema.Activities.GolfExceptionEnum) => Option(fun)
		given putSchemaActivitiesHorsebackRidingExceptionEnum: Conversion[Schema.Activities.HorsebackRidingExceptionEnum, Option[Schema.Activities.HorsebackRidingExceptionEnum]] = (fun: Schema.Activities.HorsebackRidingExceptionEnum) => Option(fun)
		given putSchemaActivitiesSnorkelingExceptionEnum: Conversion[Schema.Activities.SnorkelingExceptionEnum, Option[Schema.Activities.SnorkelingExceptionEnum]] = (fun: Schema.Activities.SnorkelingExceptionEnum) => Option(fun)
		given putSchemaActivitiesScubaExceptionEnum: Conversion[Schema.Activities.ScubaExceptionEnum, Option[Schema.Activities.ScubaExceptionEnum]] = (fun: Schema.Activities.ScubaExceptionEnum) => Option(fun)
		given putSchemaActivitiesWaterSkiingExceptionEnum: Conversion[Schema.Activities.WaterSkiingExceptionEnum, Option[Schema.Activities.WaterSkiingExceptionEnum]] = (fun: Schema.Activities.WaterSkiingExceptionEnum) => Option(fun)
		given putSchemaActivitiesBicycleRentalExceptionEnum: Conversion[Schema.Activities.BicycleRentalExceptionEnum, Option[Schema.Activities.BicycleRentalExceptionEnum]] = (fun: Schema.Activities.BicycleRentalExceptionEnum) => Option(fun)
		given putSchemaActivitiesFreeBicycleRentalExceptionEnum: Conversion[Schema.Activities.FreeBicycleRentalExceptionEnum, Option[Schema.Activities.FreeBicycleRentalExceptionEnum]] = (fun: Schema.Activities.FreeBicycleRentalExceptionEnum) => Option(fun)
		given putSchemaActivitiesWatercraftRentalExceptionEnum: Conversion[Schema.Activities.WatercraftRentalExceptionEnum, Option[Schema.Activities.WatercraftRentalExceptionEnum]] = (fun: Schema.Activities.WatercraftRentalExceptionEnum) => Option(fun)
		given putSchemaActivitiesFreeWatercraftRentalExceptionEnum: Conversion[Schema.Activities.FreeWatercraftRentalExceptionEnum, Option[Schema.Activities.FreeWatercraftRentalExceptionEnum]] = (fun: Schema.Activities.FreeWatercraftRentalExceptionEnum) => Option(fun)
		given putSchemaActivitiesBeachAccessExceptionEnum: Conversion[Schema.Activities.BeachAccessExceptionEnum, Option[Schema.Activities.BeachAccessExceptionEnum]] = (fun: Schema.Activities.BeachAccessExceptionEnum) => Option(fun)
		given putSchemaActivitiesPrivateBeachExceptionEnum: Conversion[Schema.Activities.PrivateBeachExceptionEnum, Option[Schema.Activities.PrivateBeachExceptionEnum]] = (fun: Schema.Activities.PrivateBeachExceptionEnum) => Option(fun)
		given putSchemaActivitiesBeachFrontExceptionEnum: Conversion[Schema.Activities.BeachFrontExceptionEnum, Option[Schema.Activities.BeachFrontExceptionEnum]] = (fun: Schema.Activities.BeachFrontExceptionEnum) => Option(fun)
		given putSchemaTransportationTransferExceptionEnum: Conversion[Schema.Transportation.TransferExceptionEnum, Option[Schema.Transportation.TransferExceptionEnum]] = (fun: Schema.Transportation.TransferExceptionEnum) => Option(fun)
		given putSchemaTransportationAirportShuttleExceptionEnum: Conversion[Schema.Transportation.AirportShuttleExceptionEnum, Option[Schema.Transportation.AirportShuttleExceptionEnum]] = (fun: Schema.Transportation.AirportShuttleExceptionEnum) => Option(fun)
		given putSchemaTransportationFreeAirportShuttleExceptionEnum: Conversion[Schema.Transportation.FreeAirportShuttleExceptionEnum, Option[Schema.Transportation.FreeAirportShuttleExceptionEnum]] = (fun: Schema.Transportation.FreeAirportShuttleExceptionEnum) => Option(fun)
		given putSchemaTransportationLocalShuttleExceptionEnum: Conversion[Schema.Transportation.LocalShuttleExceptionEnum, Option[Schema.Transportation.LocalShuttleExceptionEnum]] = (fun: Schema.Transportation.LocalShuttleExceptionEnum) => Option(fun)
		given putSchemaTransportationCarRentalOnPropertyExceptionEnum: Conversion[Schema.Transportation.CarRentalOnPropertyExceptionEnum, Option[Schema.Transportation.CarRentalOnPropertyExceptionEnum]] = (fun: Schema.Transportation.CarRentalOnPropertyExceptionEnum) => Option(fun)
		given putSchemaTransportationPrivateCarServiceExceptionEnum: Conversion[Schema.Transportation.PrivateCarServiceExceptionEnum, Option[Schema.Transportation.PrivateCarServiceExceptionEnum]] = (fun: Schema.Transportation.PrivateCarServiceExceptionEnum) => Option(fun)
		given putSchemaTransportationFreePrivateCarServiceExceptionEnum: Conversion[Schema.Transportation.FreePrivateCarServiceExceptionEnum, Option[Schema.Transportation.FreePrivateCarServiceExceptionEnum]] = (fun: Schema.Transportation.FreePrivateCarServiceExceptionEnum) => Option(fun)
		given putSchemaFamiliesBabysittingExceptionEnum: Conversion[Schema.Families.BabysittingExceptionEnum, Option[Schema.Families.BabysittingExceptionEnum]] = (fun: Schema.Families.BabysittingExceptionEnum) => Option(fun)
		given putSchemaFamiliesKidsActivitiesExceptionEnum: Conversion[Schema.Families.KidsActivitiesExceptionEnum, Option[Schema.Families.KidsActivitiesExceptionEnum]] = (fun: Schema.Families.KidsActivitiesExceptionEnum) => Option(fun)
		given putSchemaFamiliesKidsClubExceptionEnum: Conversion[Schema.Families.KidsClubExceptionEnum, Option[Schema.Families.KidsClubExceptionEnum]] = (fun: Schema.Families.KidsClubExceptionEnum) => Option(fun)
		given putSchemaFamiliesKidsFriendlyExceptionEnum: Conversion[Schema.Families.KidsFriendlyExceptionEnum, Option[Schema.Families.KidsFriendlyExceptionEnum]] = (fun: Schema.Families.KidsFriendlyExceptionEnum) => Option(fun)
		given putSchemaConnectivityWifiAvailableExceptionEnum: Conversion[Schema.Connectivity.WifiAvailableExceptionEnum, Option[Schema.Connectivity.WifiAvailableExceptionEnum]] = (fun: Schema.Connectivity.WifiAvailableExceptionEnum) => Option(fun)
		given putSchemaConnectivityFreeWifiExceptionEnum: Conversion[Schema.Connectivity.FreeWifiExceptionEnum, Option[Schema.Connectivity.FreeWifiExceptionEnum]] = (fun: Schema.Connectivity.FreeWifiExceptionEnum) => Option(fun)
		given putSchemaConnectivityPublicAreaWifiAvailableExceptionEnum: Conversion[Schema.Connectivity.PublicAreaWifiAvailableExceptionEnum, Option[Schema.Connectivity.PublicAreaWifiAvailableExceptionEnum]] = (fun: Schema.Connectivity.PublicAreaWifiAvailableExceptionEnum) => Option(fun)
		given putSchemaConnectivityPublicInternetTerminalExceptionEnum: Conversion[Schema.Connectivity.PublicInternetTerminalExceptionEnum, Option[Schema.Connectivity.PublicInternetTerminalExceptionEnum]] = (fun: Schema.Connectivity.PublicInternetTerminalExceptionEnum) => Option(fun)
		given putSchemaBusinessBusinessCenterExceptionEnum: Conversion[Schema.Business.BusinessCenterExceptionEnum, Option[Schema.Business.BusinessCenterExceptionEnum]] = (fun: Schema.Business.BusinessCenterExceptionEnum) => Option(fun)
		given putSchemaBusinessMeetingRoomsExceptionEnum: Conversion[Schema.Business.MeetingRoomsExceptionEnum, Option[Schema.Business.MeetingRoomsExceptionEnum]] = (fun: Schema.Business.MeetingRoomsExceptionEnum) => Option(fun)
		given putSchemaBusinessMeetingRoomsCountExceptionEnum: Conversion[Schema.Business.MeetingRoomsCountExceptionEnum, Option[Schema.Business.MeetingRoomsCountExceptionEnum]] = (fun: Schema.Business.MeetingRoomsCountExceptionEnum) => Option(fun)
		given putSchemaAccessibilityMobilityAccessibleExceptionEnum: Conversion[Schema.Accessibility.MobilityAccessibleExceptionEnum, Option[Schema.Accessibility.MobilityAccessibleExceptionEnum]] = (fun: Schema.Accessibility.MobilityAccessibleExceptionEnum) => Option(fun)
		given putSchemaAccessibilityMobilityAccessibleParkingExceptionEnum: Conversion[Schema.Accessibility.MobilityAccessibleParkingExceptionEnum, Option[Schema.Accessibility.MobilityAccessibleParkingExceptionEnum]] = (fun: Schema.Accessibility.MobilityAccessibleParkingExceptionEnum) => Option(fun)
		given putSchemaAccessibilityMobilityAccessibleElevatorExceptionEnum: Conversion[Schema.Accessibility.MobilityAccessibleElevatorExceptionEnum, Option[Schema.Accessibility.MobilityAccessibleElevatorExceptionEnum]] = (fun: Schema.Accessibility.MobilityAccessibleElevatorExceptionEnum) => Option(fun)
		given putSchemaAccessibilityMobilityAccessiblePoolExceptionEnum: Conversion[Schema.Accessibility.MobilityAccessiblePoolExceptionEnum, Option[Schema.Accessibility.MobilityAccessiblePoolExceptionEnum]] = (fun: Schema.Accessibility.MobilityAccessiblePoolExceptionEnum) => Option(fun)
		given putSchemaPetsPetsAllowedExceptionEnum: Conversion[Schema.Pets.PetsAllowedExceptionEnum, Option[Schema.Pets.PetsAllowedExceptionEnum]] = (fun: Schema.Pets.PetsAllowedExceptionEnum) => Option(fun)
		given putSchemaPetsPetsAllowedFreeExceptionEnum: Conversion[Schema.Pets.PetsAllowedFreeExceptionEnum, Option[Schema.Pets.PetsAllowedFreeExceptionEnum]] = (fun: Schema.Pets.PetsAllowedFreeExceptionEnum) => Option(fun)
		given putSchemaPetsDogsAllowedExceptionEnum: Conversion[Schema.Pets.DogsAllowedExceptionEnum, Option[Schema.Pets.DogsAllowedExceptionEnum]] = (fun: Schema.Pets.DogsAllowedExceptionEnum) => Option(fun)
		given putSchemaPetsCatsAllowedExceptionEnum: Conversion[Schema.Pets.CatsAllowedExceptionEnum, Option[Schema.Pets.CatsAllowedExceptionEnum]] = (fun: Schema.Pets.CatsAllowedExceptionEnum) => Option(fun)
		given putSchemaParkingParkingAvailableExceptionEnum: Conversion[Schema.Parking.ParkingAvailableExceptionEnum, Option[Schema.Parking.ParkingAvailableExceptionEnum]] = (fun: Schema.Parking.ParkingAvailableExceptionEnum) => Option(fun)
		given putSchemaParkingFreeParkingExceptionEnum: Conversion[Schema.Parking.FreeParkingExceptionEnum, Option[Schema.Parking.FreeParkingExceptionEnum]] = (fun: Schema.Parking.FreeParkingExceptionEnum) => Option(fun)
		given putSchemaParkingSelfParkingAvailableExceptionEnum: Conversion[Schema.Parking.SelfParkingAvailableExceptionEnum, Option[Schema.Parking.SelfParkingAvailableExceptionEnum]] = (fun: Schema.Parking.SelfParkingAvailableExceptionEnum) => Option(fun)
		given putSchemaParkingFreeSelfParkingExceptionEnum: Conversion[Schema.Parking.FreeSelfParkingExceptionEnum, Option[Schema.Parking.FreeSelfParkingExceptionEnum]] = (fun: Schema.Parking.FreeSelfParkingExceptionEnum) => Option(fun)
		given putSchemaParkingValetParkingAvailableExceptionEnum: Conversion[Schema.Parking.ValetParkingAvailableExceptionEnum, Option[Schema.Parking.ValetParkingAvailableExceptionEnum]] = (fun: Schema.Parking.ValetParkingAvailableExceptionEnum) => Option(fun)
		given putSchemaParkingFreeValetParkingExceptionEnum: Conversion[Schema.Parking.FreeValetParkingExceptionEnum, Option[Schema.Parking.FreeValetParkingExceptionEnum]] = (fun: Schema.Parking.FreeValetParkingExceptionEnum) => Option(fun)
		given putSchemaParkingElectricCarChargingStationsExceptionEnum: Conversion[Schema.Parking.ElectricCarChargingStationsExceptionEnum, Option[Schema.Parking.ElectricCarChargingStationsExceptionEnum]] = (fun: Schema.Parking.ElectricCarChargingStationsExceptionEnum) => Option(fun)
		given putSchemaHousekeepingHousekeepingAvailableExceptionEnum: Conversion[Schema.Housekeeping.HousekeepingAvailableExceptionEnum, Option[Schema.Housekeeping.HousekeepingAvailableExceptionEnum]] = (fun: Schema.Housekeeping.HousekeepingAvailableExceptionEnum) => Option(fun)
		given putSchemaHousekeepingDailyHousekeepingExceptionEnum: Conversion[Schema.Housekeeping.DailyHousekeepingExceptionEnum, Option[Schema.Housekeeping.DailyHousekeepingExceptionEnum]] = (fun: Schema.Housekeeping.DailyHousekeepingExceptionEnum) => Option(fun)
		given putSchemaHousekeepingTurndownServiceExceptionEnum: Conversion[Schema.Housekeeping.TurndownServiceExceptionEnum, Option[Schema.Housekeeping.TurndownServiceExceptionEnum]] = (fun: Schema.Housekeeping.TurndownServiceExceptionEnum) => Option(fun)
		given putSchemaEnhancedCleaning: Conversion[Schema.EnhancedCleaning, Option[Schema.EnhancedCleaning]] = (fun: Schema.EnhancedCleaning) => Option(fun)
		given putSchemaIncreasedFoodSafety: Conversion[Schema.IncreasedFoodSafety, Option[Schema.IncreasedFoodSafety]] = (fun: Schema.IncreasedFoodSafety) => Option(fun)
		given putSchemaMinimizedContact: Conversion[Schema.MinimizedContact, Option[Schema.MinimizedContact]] = (fun: Schema.MinimizedContact) => Option(fun)
		given putSchemaPersonalProtection: Conversion[Schema.PersonalProtection, Option[Schema.PersonalProtection]] = (fun: Schema.PersonalProtection) => Option(fun)
		given putSchemaPhysicalDistancing: Conversion[Schema.PhysicalDistancing, Option[Schema.PhysicalDistancing]] = (fun: Schema.PhysicalDistancing) => Option(fun)
		given putSchemaEnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum: Conversion[Schema.EnhancedCleaning.CommonAreasEnhancedCleaningExceptionEnum, Option[Schema.EnhancedCleaning.CommonAreasEnhancedCleaningExceptionEnum]] = (fun: Schema.EnhancedCleaning.CommonAreasEnhancedCleaningExceptionEnum) => Option(fun)
		given putSchemaEnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum: Conversion[Schema.EnhancedCleaning.GuestRoomsEnhancedCleaningExceptionEnum, Option[Schema.EnhancedCleaning.GuestRoomsEnhancedCleaningExceptionEnum]] = (fun: Schema.EnhancedCleaning.GuestRoomsEnhancedCleaningExceptionEnum) => Option(fun)
		given putSchemaEnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum: Conversion[Schema.EnhancedCleaning.CommercialGradeDisinfectantCleaningExceptionEnum, Option[Schema.EnhancedCleaning.CommercialGradeDisinfectantCleaningExceptionEnum]] = (fun: Schema.EnhancedCleaning.CommercialGradeDisinfectantCleaningExceptionEnum) => Option(fun)
		given putSchemaEnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum: Conversion[Schema.EnhancedCleaning.EmployeesTrainedCleaningProceduresExceptionEnum, Option[Schema.EnhancedCleaning.EmployeesTrainedCleaningProceduresExceptionEnum]] = (fun: Schema.EnhancedCleaning.EmployeesTrainedCleaningProceduresExceptionEnum) => Option(fun)
		given putSchemaEnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum: Conversion[Schema.EnhancedCleaning.EmployeesTrainedThoroughHandWashingExceptionEnum, Option[Schema.EnhancedCleaning.EmployeesTrainedThoroughHandWashingExceptionEnum]] = (fun: Schema.EnhancedCleaning.EmployeesTrainedThoroughHandWashingExceptionEnum) => Option(fun)
		given putSchemaEnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum: Conversion[Schema.EnhancedCleaning.EmployeesWearProtectiveEquipmentExceptionEnum, Option[Schema.EnhancedCleaning.EmployeesWearProtectiveEquipmentExceptionEnum]] = (fun: Schema.EnhancedCleaning.EmployeesWearProtectiveEquipmentExceptionEnum) => Option(fun)
		given putSchemaIncreasedFoodSafetyFoodPreparationAndServingAdditionalSafetyExceptionEnum: Conversion[Schema.IncreasedFoodSafety.FoodPreparationAndServingAdditionalSafetyExceptionEnum, Option[Schema.IncreasedFoodSafety.FoodPreparationAndServingAdditionalSafetyExceptionEnum]] = (fun: Schema.IncreasedFoodSafety.FoodPreparationAndServingAdditionalSafetyExceptionEnum) => Option(fun)
		given putSchemaIncreasedFoodSafetyDiningAreasAdditionalSanitationExceptionEnum: Conversion[Schema.IncreasedFoodSafety.DiningAreasAdditionalSanitationExceptionEnum, Option[Schema.IncreasedFoodSafety.DiningAreasAdditionalSanitationExceptionEnum]] = (fun: Schema.IncreasedFoodSafety.DiningAreasAdditionalSanitationExceptionEnum) => Option(fun)
		given putSchemaIncreasedFoodSafetyIndividualPackagedMealsExceptionEnum: Conversion[Schema.IncreasedFoodSafety.IndividualPackagedMealsExceptionEnum, Option[Schema.IncreasedFoodSafety.IndividualPackagedMealsExceptionEnum]] = (fun: Schema.IncreasedFoodSafety.IndividualPackagedMealsExceptionEnum) => Option(fun)
		given putSchemaIncreasedFoodSafetyDisposableFlatwareExceptionEnum: Conversion[Schema.IncreasedFoodSafety.DisposableFlatwareExceptionEnum, Option[Schema.IncreasedFoodSafety.DisposableFlatwareExceptionEnum]] = (fun: Schema.IncreasedFoodSafety.DisposableFlatwareExceptionEnum) => Option(fun)
		given putSchemaIncreasedFoodSafetySingleUseFoodMenusExceptionEnum: Conversion[Schema.IncreasedFoodSafety.SingleUseFoodMenusExceptionEnum, Option[Schema.IncreasedFoodSafety.SingleUseFoodMenusExceptionEnum]] = (fun: Schema.IncreasedFoodSafety.SingleUseFoodMenusExceptionEnum) => Option(fun)
		given putSchemaMinimizedContactNoHighTouchItemsCommonAreasExceptionEnum: Conversion[Schema.MinimizedContact.NoHighTouchItemsCommonAreasExceptionEnum, Option[Schema.MinimizedContact.NoHighTouchItemsCommonAreasExceptionEnum]] = (fun: Schema.MinimizedContact.NoHighTouchItemsCommonAreasExceptionEnum) => Option(fun)
		given putSchemaMinimizedContactNoHighTouchItemsGuestRoomsExceptionEnum: Conversion[Schema.MinimizedContact.NoHighTouchItemsGuestRoomsExceptionEnum, Option[Schema.MinimizedContact.NoHighTouchItemsGuestRoomsExceptionEnum]] = (fun: Schema.MinimizedContact.NoHighTouchItemsGuestRoomsExceptionEnum) => Option(fun)
		given putSchemaMinimizedContactDigitalGuestRoomKeysExceptionEnum: Conversion[Schema.MinimizedContact.DigitalGuestRoomKeysExceptionEnum, Option[Schema.MinimizedContact.DigitalGuestRoomKeysExceptionEnum]] = (fun: Schema.MinimizedContact.DigitalGuestRoomKeysExceptionEnum) => Option(fun)
		given putSchemaMinimizedContactPlasticKeycardsDisinfectedExceptionEnum: Conversion[Schema.MinimizedContact.PlasticKeycardsDisinfectedExceptionEnum, Option[Schema.MinimizedContact.PlasticKeycardsDisinfectedExceptionEnum]] = (fun: Schema.MinimizedContact.PlasticKeycardsDisinfectedExceptionEnum) => Option(fun)
		given putSchemaMinimizedContactRoomBookingsBufferExceptionEnum: Conversion[Schema.MinimizedContact.RoomBookingsBufferExceptionEnum, Option[Schema.MinimizedContact.RoomBookingsBufferExceptionEnum]] = (fun: Schema.MinimizedContact.RoomBookingsBufferExceptionEnum) => Option(fun)
		given putSchemaMinimizedContactHousekeepingScheduledRequestOnlyExceptionEnum: Conversion[Schema.MinimizedContact.HousekeepingScheduledRequestOnlyExceptionEnum, Option[Schema.MinimizedContact.HousekeepingScheduledRequestOnlyExceptionEnum]] = (fun: Schema.MinimizedContact.HousekeepingScheduledRequestOnlyExceptionEnum) => Option(fun)
		given putSchemaMinimizedContactContactlessCheckinCheckoutExceptionEnum: Conversion[Schema.MinimizedContact.ContactlessCheckinCheckoutExceptionEnum, Option[Schema.MinimizedContact.ContactlessCheckinCheckoutExceptionEnum]] = (fun: Schema.MinimizedContact.ContactlessCheckinCheckoutExceptionEnum) => Option(fun)
		given putSchemaPersonalProtectionCommonAreasOfferSanitizingItemsExceptionEnum: Conversion[Schema.PersonalProtection.CommonAreasOfferSanitizingItemsExceptionEnum, Option[Schema.PersonalProtection.CommonAreasOfferSanitizingItemsExceptionEnum]] = (fun: Schema.PersonalProtection.CommonAreasOfferSanitizingItemsExceptionEnum) => Option(fun)
		given putSchemaPersonalProtectionGuestRoomHygieneKitsAvailableExceptionEnum: Conversion[Schema.PersonalProtection.GuestRoomHygieneKitsAvailableExceptionEnum, Option[Schema.PersonalProtection.GuestRoomHygieneKitsAvailableExceptionEnum]] = (fun: Schema.PersonalProtection.GuestRoomHygieneKitsAvailableExceptionEnum) => Option(fun)
		given putSchemaPersonalProtectionProtectiveEquipmentAvailableExceptionEnum: Conversion[Schema.PersonalProtection.ProtectiveEquipmentAvailableExceptionEnum, Option[Schema.PersonalProtection.ProtectiveEquipmentAvailableExceptionEnum]] = (fun: Schema.PersonalProtection.ProtectiveEquipmentAvailableExceptionEnum) => Option(fun)
		given putSchemaPersonalProtectionFaceMaskRequiredExceptionEnum: Conversion[Schema.PersonalProtection.FaceMaskRequiredExceptionEnum, Option[Schema.PersonalProtection.FaceMaskRequiredExceptionEnum]] = (fun: Schema.PersonalProtection.FaceMaskRequiredExceptionEnum) => Option(fun)
		given putSchemaPhysicalDistancingPhysicalDistancingRequiredExceptionEnum: Conversion[Schema.PhysicalDistancing.PhysicalDistancingRequiredExceptionEnum, Option[Schema.PhysicalDistancing.PhysicalDistancingRequiredExceptionEnum]] = (fun: Schema.PhysicalDistancing.PhysicalDistancingRequiredExceptionEnum) => Option(fun)
		given putSchemaPhysicalDistancingSafetyDividersExceptionEnum: Conversion[Schema.PhysicalDistancing.SafetyDividersExceptionEnum, Option[Schema.PhysicalDistancing.SafetyDividersExceptionEnum]] = (fun: Schema.PhysicalDistancing.SafetyDividersExceptionEnum) => Option(fun)
		given putSchemaPhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum: Conversion[Schema.PhysicalDistancing.SharedAreasLimitedOccupancyExceptionEnum, Option[Schema.PhysicalDistancing.SharedAreasLimitedOccupancyExceptionEnum]] = (fun: Schema.PhysicalDistancing.SharedAreasLimitedOccupancyExceptionEnum) => Option(fun)
		given putSchemaPhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum: Conversion[Schema.PhysicalDistancing.WellnessAreasHavePrivateSpacesExceptionEnum, Option[Schema.PhysicalDistancing.WellnessAreasHavePrivateSpacesExceptionEnum]] = (fun: Schema.PhysicalDistancing.WellnessAreasHavePrivateSpacesExceptionEnum) => Option(fun)
		given putSchemaPhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum: Conversion[Schema.PhysicalDistancing.CommonAreasPhysicalDistancingArrangedExceptionEnum, Option[Schema.PhysicalDistancing.CommonAreasPhysicalDistancingArrangedExceptionEnum]] = (fun: Schema.PhysicalDistancing.CommonAreasPhysicalDistancingArrangedExceptionEnum) => Option(fun)
		given putSchemaEnergyEfficiency: Conversion[Schema.EnergyEfficiency, Option[Schema.EnergyEfficiency]] = (fun: Schema.EnergyEfficiency) => Option(fun)
		given putSchemaWaterConservation: Conversion[Schema.WaterConservation, Option[Schema.WaterConservation]] = (fun: Schema.WaterConservation) => Option(fun)
		given putSchemaWasteReduction: Conversion[Schema.WasteReduction, Option[Schema.WasteReduction]] = (fun: Schema.WasteReduction) => Option(fun)
		given putSchemaSustainableSourcing: Conversion[Schema.SustainableSourcing, Option[Schema.SustainableSourcing]] = (fun: Schema.SustainableSourcing) => Option(fun)
		given putSchemaSustainabilityCertifications: Conversion[Schema.SustainabilityCertifications, Option[Schema.SustainabilityCertifications]] = (fun: Schema.SustainabilityCertifications) => Option(fun)
		given putSchemaEnergyEfficiencyGreenBuildingDesignExceptionEnum: Conversion[Schema.EnergyEfficiency.GreenBuildingDesignExceptionEnum, Option[Schema.EnergyEfficiency.GreenBuildingDesignExceptionEnum]] = (fun: Schema.EnergyEfficiency.GreenBuildingDesignExceptionEnum) => Option(fun)
		given putSchemaEnergyEfficiencyEnergyConservationProgramExceptionEnum: Conversion[Schema.EnergyEfficiency.EnergyConservationProgramExceptionEnum, Option[Schema.EnergyEfficiency.EnergyConservationProgramExceptionEnum]] = (fun: Schema.EnergyEfficiency.EnergyConservationProgramExceptionEnum) => Option(fun)
		given putSchemaEnergyEfficiencyIndependentOrganizationAuditsEnergyUseExceptionEnum: Conversion[Schema.EnergyEfficiency.IndependentOrganizationAuditsEnergyUseExceptionEnum, Option[Schema.EnergyEfficiency.IndependentOrganizationAuditsEnergyUseExceptionEnum]] = (fun: Schema.EnergyEfficiency.IndependentOrganizationAuditsEnergyUseExceptionEnum) => Option(fun)
		given putSchemaEnergyEfficiencyCarbonFreeEnergySourcesExceptionEnum: Conversion[Schema.EnergyEfficiency.CarbonFreeEnergySourcesExceptionEnum, Option[Schema.EnergyEfficiency.CarbonFreeEnergySourcesExceptionEnum]] = (fun: Schema.EnergyEfficiency.CarbonFreeEnergySourcesExceptionEnum) => Option(fun)
		given putSchemaEnergyEfficiencyEnergyEfficientHeatingAndCoolingSystemsExceptionEnum: Conversion[Schema.EnergyEfficiency.EnergyEfficientHeatingAndCoolingSystemsExceptionEnum, Option[Schema.EnergyEfficiency.EnergyEfficientHeatingAndCoolingSystemsExceptionEnum]] = (fun: Schema.EnergyEfficiency.EnergyEfficientHeatingAndCoolingSystemsExceptionEnum) => Option(fun)
		given putSchemaEnergyEfficiencyEnergyEfficientLightingExceptionEnum: Conversion[Schema.EnergyEfficiency.EnergyEfficientLightingExceptionEnum, Option[Schema.EnergyEfficiency.EnergyEfficientLightingExceptionEnum]] = (fun: Schema.EnergyEfficiency.EnergyEfficientLightingExceptionEnum) => Option(fun)
		given putSchemaEnergyEfficiencyEnergySavingThermostatsExceptionEnum: Conversion[Schema.EnergyEfficiency.EnergySavingThermostatsExceptionEnum, Option[Schema.EnergyEfficiency.EnergySavingThermostatsExceptionEnum]] = (fun: Schema.EnergyEfficiency.EnergySavingThermostatsExceptionEnum) => Option(fun)
		given putSchemaWaterConservationIndependentOrganizationAuditsWaterUseExceptionEnum: Conversion[Schema.WaterConservation.IndependentOrganizationAuditsWaterUseExceptionEnum, Option[Schema.WaterConservation.IndependentOrganizationAuditsWaterUseExceptionEnum]] = (fun: Schema.WaterConservation.IndependentOrganizationAuditsWaterUseExceptionEnum) => Option(fun)
		given putSchemaWaterConservationWaterSavingSinksExceptionEnum: Conversion[Schema.WaterConservation.WaterSavingSinksExceptionEnum, Option[Schema.WaterConservation.WaterSavingSinksExceptionEnum]] = (fun: Schema.WaterConservation.WaterSavingSinksExceptionEnum) => Option(fun)
		given putSchemaWaterConservationWaterSavingToiletsExceptionEnum: Conversion[Schema.WaterConservation.WaterSavingToiletsExceptionEnum, Option[Schema.WaterConservation.WaterSavingToiletsExceptionEnum]] = (fun: Schema.WaterConservation.WaterSavingToiletsExceptionEnum) => Option(fun)
		given putSchemaWaterConservationWaterSavingShowersExceptionEnum: Conversion[Schema.WaterConservation.WaterSavingShowersExceptionEnum, Option[Schema.WaterConservation.WaterSavingShowersExceptionEnum]] = (fun: Schema.WaterConservation.WaterSavingShowersExceptionEnum) => Option(fun)
		given putSchemaWaterConservationTowelReuseProgramExceptionEnum: Conversion[Schema.WaterConservation.TowelReuseProgramExceptionEnum, Option[Schema.WaterConservation.TowelReuseProgramExceptionEnum]] = (fun: Schema.WaterConservation.TowelReuseProgramExceptionEnum) => Option(fun)
		given putSchemaWaterConservationLinenReuseProgramExceptionEnum: Conversion[Schema.WaterConservation.LinenReuseProgramExceptionEnum, Option[Schema.WaterConservation.LinenReuseProgramExceptionEnum]] = (fun: Schema.WaterConservation.LinenReuseProgramExceptionEnum) => Option(fun)
		given putSchemaWasteReductionRecyclingProgramExceptionEnum: Conversion[Schema.WasteReduction.RecyclingProgramExceptionEnum, Option[Schema.WasteReduction.RecyclingProgramExceptionEnum]] = (fun: Schema.WasteReduction.RecyclingProgramExceptionEnum) => Option(fun)
		given putSchemaWasteReductionFoodWasteReductionProgramExceptionEnum: Conversion[Schema.WasteReduction.FoodWasteReductionProgramExceptionEnum, Option[Schema.WasteReduction.FoodWasteReductionProgramExceptionEnum]] = (fun: Schema.WasteReduction.FoodWasteReductionProgramExceptionEnum) => Option(fun)
		given putSchemaWasteReductionDonatesExcessFoodExceptionEnum: Conversion[Schema.WasteReduction.DonatesExcessFoodExceptionEnum, Option[Schema.WasteReduction.DonatesExcessFoodExceptionEnum]] = (fun: Schema.WasteReduction.DonatesExcessFoodExceptionEnum) => Option(fun)
		given putSchemaWasteReductionCompostsExcessFoodExceptionEnum: Conversion[Schema.WasteReduction.CompostsExcessFoodExceptionEnum, Option[Schema.WasteReduction.CompostsExcessFoodExceptionEnum]] = (fun: Schema.WasteReduction.CompostsExcessFoodExceptionEnum) => Option(fun)
		given putSchemaWasteReductionSoapDonationProgramExceptionEnum: Conversion[Schema.WasteReduction.SoapDonationProgramExceptionEnum, Option[Schema.WasteReduction.SoapDonationProgramExceptionEnum]] = (fun: Schema.WasteReduction.SoapDonationProgramExceptionEnum) => Option(fun)
		given putSchemaWasteReductionToiletryDonationProgramExceptionEnum: Conversion[Schema.WasteReduction.ToiletryDonationProgramExceptionEnum, Option[Schema.WasteReduction.ToiletryDonationProgramExceptionEnum]] = (fun: Schema.WasteReduction.ToiletryDonationProgramExceptionEnum) => Option(fun)
		given putSchemaWasteReductionSafelyHandlesHazardousSubstancesExceptionEnum: Conversion[Schema.WasteReduction.SafelyHandlesHazardousSubstancesExceptionEnum, Option[Schema.WasteReduction.SafelyHandlesHazardousSubstancesExceptionEnum]] = (fun: Schema.WasteReduction.SafelyHandlesHazardousSubstancesExceptionEnum) => Option(fun)
		given putSchemaWasteReductionSafelyDisposesElectronicsExceptionEnum: Conversion[Schema.WasteReduction.SafelyDisposesElectronicsExceptionEnum, Option[Schema.WasteReduction.SafelyDisposesElectronicsExceptionEnum]] = (fun: Schema.WasteReduction.SafelyDisposesElectronicsExceptionEnum) => Option(fun)
		given putSchemaWasteReductionSafelyDisposesBatteriesExceptionEnum: Conversion[Schema.WasteReduction.SafelyDisposesBatteriesExceptionEnum, Option[Schema.WasteReduction.SafelyDisposesBatteriesExceptionEnum]] = (fun: Schema.WasteReduction.SafelyDisposesBatteriesExceptionEnum) => Option(fun)
		given putSchemaWasteReductionSafelyDisposesLightbulbsExceptionEnum: Conversion[Schema.WasteReduction.SafelyDisposesLightbulbsExceptionEnum, Option[Schema.WasteReduction.SafelyDisposesLightbulbsExceptionEnum]] = (fun: Schema.WasteReduction.SafelyDisposesLightbulbsExceptionEnum) => Option(fun)
		given putSchemaWasteReductionRefillableToiletryContainersExceptionEnum: Conversion[Schema.WasteReduction.RefillableToiletryContainersExceptionEnum, Option[Schema.WasteReduction.RefillableToiletryContainersExceptionEnum]] = (fun: Schema.WasteReduction.RefillableToiletryContainersExceptionEnum) => Option(fun)
		given putSchemaWasteReductionWaterBottleFillingStationsExceptionEnum: Conversion[Schema.WasteReduction.WaterBottleFillingStationsExceptionEnum, Option[Schema.WasteReduction.WaterBottleFillingStationsExceptionEnum]] = (fun: Schema.WasteReduction.WaterBottleFillingStationsExceptionEnum) => Option(fun)
		given putSchemaWasteReductionCompostableFoodContainersAndCutleryExceptionEnum: Conversion[Schema.WasteReduction.CompostableFoodContainersAndCutleryExceptionEnum, Option[Schema.WasteReduction.CompostableFoodContainersAndCutleryExceptionEnum]] = (fun: Schema.WasteReduction.CompostableFoodContainersAndCutleryExceptionEnum) => Option(fun)
		given putSchemaWasteReductionNoStyrofoamFoodContainersExceptionEnum: Conversion[Schema.WasteReduction.NoStyrofoamFoodContainersExceptionEnum, Option[Schema.WasteReduction.NoStyrofoamFoodContainersExceptionEnum]] = (fun: Schema.WasteReduction.NoStyrofoamFoodContainersExceptionEnum) => Option(fun)
		given putSchemaWasteReductionNoSingleUsePlasticWaterBottlesExceptionEnum: Conversion[Schema.WasteReduction.NoSingleUsePlasticWaterBottlesExceptionEnum, Option[Schema.WasteReduction.NoSingleUsePlasticWaterBottlesExceptionEnum]] = (fun: Schema.WasteReduction.NoSingleUsePlasticWaterBottlesExceptionEnum) => Option(fun)
		given putSchemaWasteReductionNoSingleUsePlasticStrawsExceptionEnum: Conversion[Schema.WasteReduction.NoSingleUsePlasticStrawsExceptionEnum, Option[Schema.WasteReduction.NoSingleUsePlasticStrawsExceptionEnum]] = (fun: Schema.WasteReduction.NoSingleUsePlasticStrawsExceptionEnum) => Option(fun)
		given putSchemaSustainableSourcingResponsiblePurchasingPolicyExceptionEnum: Conversion[Schema.SustainableSourcing.ResponsiblePurchasingPolicyExceptionEnum, Option[Schema.SustainableSourcing.ResponsiblePurchasingPolicyExceptionEnum]] = (fun: Schema.SustainableSourcing.ResponsiblePurchasingPolicyExceptionEnum) => Option(fun)
		given putSchemaSustainableSourcingOrganicFoodAndBeveragesExceptionEnum: Conversion[Schema.SustainableSourcing.OrganicFoodAndBeveragesExceptionEnum, Option[Schema.SustainableSourcing.OrganicFoodAndBeveragesExceptionEnum]] = (fun: Schema.SustainableSourcing.OrganicFoodAndBeveragesExceptionEnum) => Option(fun)
		given putSchemaSustainableSourcingLocallySourcedFoodAndBeveragesExceptionEnum: Conversion[Schema.SustainableSourcing.LocallySourcedFoodAndBeveragesExceptionEnum, Option[Schema.SustainableSourcing.LocallySourcedFoodAndBeveragesExceptionEnum]] = (fun: Schema.SustainableSourcing.LocallySourcedFoodAndBeveragesExceptionEnum) => Option(fun)
		given putSchemaSustainableSourcingResponsiblySourcesSeafoodExceptionEnum: Conversion[Schema.SustainableSourcing.ResponsiblySourcesSeafoodExceptionEnum, Option[Schema.SustainableSourcing.ResponsiblySourcesSeafoodExceptionEnum]] = (fun: Schema.SustainableSourcing.ResponsiblySourcesSeafoodExceptionEnum) => Option(fun)
		given putSchemaSustainableSourcingOrganicCageFreeEggsExceptionEnum: Conversion[Schema.SustainableSourcing.OrganicCageFreeEggsExceptionEnum, Option[Schema.SustainableSourcing.OrganicCageFreeEggsExceptionEnum]] = (fun: Schema.SustainableSourcing.OrganicCageFreeEggsExceptionEnum) => Option(fun)
		given putSchemaSustainableSourcingVegetarianMealsExceptionEnum: Conversion[Schema.SustainableSourcing.VegetarianMealsExceptionEnum, Option[Schema.SustainableSourcing.VegetarianMealsExceptionEnum]] = (fun: Schema.SustainableSourcing.VegetarianMealsExceptionEnum) => Option(fun)
		given putSchemaSustainableSourcingVeganMealsExceptionEnum: Conversion[Schema.SustainableSourcing.VeganMealsExceptionEnum, Option[Schema.SustainableSourcing.VeganMealsExceptionEnum]] = (fun: Schema.SustainableSourcing.VeganMealsExceptionEnum) => Option(fun)
		given putSchemaSustainableSourcingEcoFriendlyToiletriesExceptionEnum: Conversion[Schema.SustainableSourcing.EcoFriendlyToiletriesExceptionEnum, Option[Schema.SustainableSourcing.EcoFriendlyToiletriesExceptionEnum]] = (fun: Schema.SustainableSourcing.EcoFriendlyToiletriesExceptionEnum) => Option(fun)
		given putSchemaSustainabilityCertificationsBreeamCertificationEnum: Conversion[Schema.SustainabilityCertifications.BreeamCertificationEnum, Option[Schema.SustainabilityCertifications.BreeamCertificationEnum]] = (fun: Schema.SustainabilityCertifications.BreeamCertificationEnum) => Option(fun)
		given putSchemaSustainabilityCertificationsBreeamCertificationExceptionEnum: Conversion[Schema.SustainabilityCertifications.BreeamCertificationExceptionEnum, Option[Schema.SustainabilityCertifications.BreeamCertificationExceptionEnum]] = (fun: Schema.SustainabilityCertifications.BreeamCertificationExceptionEnum) => Option(fun)
		given putSchemaSustainabilityCertificationsLeedCertificationEnum: Conversion[Schema.SustainabilityCertifications.LeedCertificationEnum, Option[Schema.SustainabilityCertifications.LeedCertificationEnum]] = (fun: Schema.SustainabilityCertifications.LeedCertificationEnum) => Option(fun)
		given putSchemaSustainabilityCertificationsLeedCertificationExceptionEnum: Conversion[Schema.SustainabilityCertifications.LeedCertificationExceptionEnum, Option[Schema.SustainabilityCertifications.LeedCertificationExceptionEnum]] = (fun: Schema.SustainabilityCertifications.LeedCertificationExceptionEnum) => Option(fun)
		given putListSchemaEcoCertification: Conversion[List[Schema.EcoCertification], Option[List[Schema.EcoCertification]]] = (fun: List[Schema.EcoCertification]) => Option(fun)
		given putSchemaEcoCertificationEcoCertificateEnum: Conversion[Schema.EcoCertification.EcoCertificateEnum, Option[Schema.EcoCertification.EcoCertificateEnum]] = (fun: Schema.EcoCertification.EcoCertificateEnum) => Option(fun)
		given putSchemaEcoCertificationAwardedExceptionEnum: Conversion[Schema.EcoCertification.AwardedExceptionEnum, Option[Schema.EcoCertification.AwardedExceptionEnum]] = (fun: Schema.EcoCertification.AwardedExceptionEnum) => Option(fun)
		given putSchemaLivingAreaLayout: Conversion[Schema.LivingAreaLayout, Option[Schema.LivingAreaLayout]] = (fun: Schema.LivingAreaLayout) => Option(fun)
		given putSchemaLivingAreaFeatures: Conversion[Schema.LivingAreaFeatures, Option[Schema.LivingAreaFeatures]] = (fun: Schema.LivingAreaFeatures) => Option(fun)
		given putSchemaLivingAreaEating: Conversion[Schema.LivingAreaEating, Option[Schema.LivingAreaEating]] = (fun: Schema.LivingAreaEating) => Option(fun)
		given putSchemaLivingAreaSleeping: Conversion[Schema.LivingAreaSleeping, Option[Schema.LivingAreaSleeping]] = (fun: Schema.LivingAreaSleeping) => Option(fun)
		given putSchemaLivingAreaAccessibility: Conversion[Schema.LivingAreaAccessibility, Option[Schema.LivingAreaAccessibility]] = (fun: Schema.LivingAreaAccessibility) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaLivingAreaLayoutLivingAreaSqMetersExceptionEnum: Conversion[Schema.LivingAreaLayout.LivingAreaSqMetersExceptionEnum, Option[Schema.LivingAreaLayout.LivingAreaSqMetersExceptionEnum]] = (fun: Schema.LivingAreaLayout.LivingAreaSqMetersExceptionEnum) => Option(fun)
		given putSchemaLivingAreaLayoutStairsExceptionEnum: Conversion[Schema.LivingAreaLayout.StairsExceptionEnum, Option[Schema.LivingAreaLayout.StairsExceptionEnum]] = (fun: Schema.LivingAreaLayout.StairsExceptionEnum) => Option(fun)
		given putSchemaLivingAreaLayoutLoftExceptionEnum: Conversion[Schema.LivingAreaLayout.LoftExceptionEnum, Option[Schema.LivingAreaLayout.LoftExceptionEnum]] = (fun: Schema.LivingAreaLayout.LoftExceptionEnum) => Option(fun)
		given putSchemaLivingAreaLayoutNonSmokingExceptionEnum: Conversion[Schema.LivingAreaLayout.NonSmokingExceptionEnum, Option[Schema.LivingAreaLayout.NonSmokingExceptionEnum]] = (fun: Schema.LivingAreaLayout.NonSmokingExceptionEnum) => Option(fun)
		given putSchemaLivingAreaLayoutPatioExceptionEnum: Conversion[Schema.LivingAreaLayout.PatioExceptionEnum, Option[Schema.LivingAreaLayout.PatioExceptionEnum]] = (fun: Schema.LivingAreaLayout.PatioExceptionEnum) => Option(fun)
		given putSchemaLivingAreaLayoutBalconyExceptionEnum: Conversion[Schema.LivingAreaLayout.BalconyExceptionEnum, Option[Schema.LivingAreaLayout.BalconyExceptionEnum]] = (fun: Schema.LivingAreaLayout.BalconyExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesPrivateBathroomExceptionEnum: Conversion[Schema.LivingAreaFeatures.PrivateBathroomExceptionEnum, Option[Schema.LivingAreaFeatures.PrivateBathroomExceptionEnum]] = (fun: Schema.LivingAreaFeatures.PrivateBathroomExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesToiletExceptionEnum: Conversion[Schema.LivingAreaFeatures.ToiletExceptionEnum, Option[Schema.LivingAreaFeatures.ToiletExceptionEnum]] = (fun: Schema.LivingAreaFeatures.ToiletExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesBidetExceptionEnum: Conversion[Schema.LivingAreaFeatures.BidetExceptionEnum, Option[Schema.LivingAreaFeatures.BidetExceptionEnum]] = (fun: Schema.LivingAreaFeatures.BidetExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesShowerExceptionEnum: Conversion[Schema.LivingAreaFeatures.ShowerExceptionEnum, Option[Schema.LivingAreaFeatures.ShowerExceptionEnum]] = (fun: Schema.LivingAreaFeatures.ShowerExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesBathtubExceptionEnum: Conversion[Schema.LivingAreaFeatures.BathtubExceptionEnum, Option[Schema.LivingAreaFeatures.BathtubExceptionEnum]] = (fun: Schema.LivingAreaFeatures.BathtubExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesHairdryerExceptionEnum: Conversion[Schema.LivingAreaFeatures.HairdryerExceptionEnum, Option[Schema.LivingAreaFeatures.HairdryerExceptionEnum]] = (fun: Schema.LivingAreaFeatures.HairdryerExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesWasherExceptionEnum: Conversion[Schema.LivingAreaFeatures.WasherExceptionEnum, Option[Schema.LivingAreaFeatures.WasherExceptionEnum]] = (fun: Schema.LivingAreaFeatures.WasherExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesDryerExceptionEnum: Conversion[Schema.LivingAreaFeatures.DryerExceptionEnum, Option[Schema.LivingAreaFeatures.DryerExceptionEnum]] = (fun: Schema.LivingAreaFeatures.DryerExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesIroningEquipmentExceptionEnum: Conversion[Schema.LivingAreaFeatures.IroningEquipmentExceptionEnum, Option[Schema.LivingAreaFeatures.IroningEquipmentExceptionEnum]] = (fun: Schema.LivingAreaFeatures.IroningEquipmentExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesUniversalPowerAdaptersExceptionEnum: Conversion[Schema.LivingAreaFeatures.UniversalPowerAdaptersExceptionEnum, Option[Schema.LivingAreaFeatures.UniversalPowerAdaptersExceptionEnum]] = (fun: Schema.LivingAreaFeatures.UniversalPowerAdaptersExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesAirConditioningExceptionEnum: Conversion[Schema.LivingAreaFeatures.AirConditioningExceptionEnum, Option[Schema.LivingAreaFeatures.AirConditioningExceptionEnum]] = (fun: Schema.LivingAreaFeatures.AirConditioningExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesHeatingExceptionEnum: Conversion[Schema.LivingAreaFeatures.HeatingExceptionEnum, Option[Schema.LivingAreaFeatures.HeatingExceptionEnum]] = (fun: Schema.LivingAreaFeatures.HeatingExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesFireplaceExceptionEnum: Conversion[Schema.LivingAreaFeatures.FireplaceExceptionEnum, Option[Schema.LivingAreaFeatures.FireplaceExceptionEnum]] = (fun: Schema.LivingAreaFeatures.FireplaceExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesTvExceptionEnum: Conversion[Schema.LivingAreaFeatures.TvExceptionEnum, Option[Schema.LivingAreaFeatures.TvExceptionEnum]] = (fun: Schema.LivingAreaFeatures.TvExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesTvCastingExceptionEnum: Conversion[Schema.LivingAreaFeatures.TvCastingExceptionEnum, Option[Schema.LivingAreaFeatures.TvCastingExceptionEnum]] = (fun: Schema.LivingAreaFeatures.TvCastingExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesTvStreamingExceptionEnum: Conversion[Schema.LivingAreaFeatures.TvStreamingExceptionEnum, Option[Schema.LivingAreaFeatures.TvStreamingExceptionEnum]] = (fun: Schema.LivingAreaFeatures.TvStreamingExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesPayPerViewMoviesExceptionEnum: Conversion[Schema.LivingAreaFeatures.PayPerViewMoviesExceptionEnum, Option[Schema.LivingAreaFeatures.PayPerViewMoviesExceptionEnum]] = (fun: Schema.LivingAreaFeatures.PayPerViewMoviesExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesInunitSafeExceptionEnum: Conversion[Schema.LivingAreaFeatures.InunitSafeExceptionEnum, Option[Schema.LivingAreaFeatures.InunitSafeExceptionEnum]] = (fun: Schema.LivingAreaFeatures.InunitSafeExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesElectronicRoomKeyExceptionEnum: Conversion[Schema.LivingAreaFeatures.ElectronicRoomKeyExceptionEnum, Option[Schema.LivingAreaFeatures.ElectronicRoomKeyExceptionEnum]] = (fun: Schema.LivingAreaFeatures.ElectronicRoomKeyExceptionEnum) => Option(fun)
		given putSchemaLivingAreaFeaturesInunitWifiAvailableExceptionEnum: Conversion[Schema.LivingAreaFeatures.InunitWifiAvailableExceptionEnum, Option[Schema.LivingAreaFeatures.InunitWifiAvailableExceptionEnum]] = (fun: Schema.LivingAreaFeatures.InunitWifiAvailableExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingKitchenAvailableExceptionEnum: Conversion[Schema.LivingAreaEating.KitchenAvailableExceptionEnum, Option[Schema.LivingAreaEating.KitchenAvailableExceptionEnum]] = (fun: Schema.LivingAreaEating.KitchenAvailableExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingRefrigeratorExceptionEnum: Conversion[Schema.LivingAreaEating.RefrigeratorExceptionEnum, Option[Schema.LivingAreaEating.RefrigeratorExceptionEnum]] = (fun: Schema.LivingAreaEating.RefrigeratorExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingDishwasherExceptionEnum: Conversion[Schema.LivingAreaEating.DishwasherExceptionEnum, Option[Schema.LivingAreaEating.DishwasherExceptionEnum]] = (fun: Schema.LivingAreaEating.DishwasherExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingStoveExceptionEnum: Conversion[Schema.LivingAreaEating.StoveExceptionEnum, Option[Schema.LivingAreaEating.StoveExceptionEnum]] = (fun: Schema.LivingAreaEating.StoveExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingOvenExceptionEnum: Conversion[Schema.LivingAreaEating.OvenExceptionEnum, Option[Schema.LivingAreaEating.OvenExceptionEnum]] = (fun: Schema.LivingAreaEating.OvenExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingCookwareExceptionEnum: Conversion[Schema.LivingAreaEating.CookwareExceptionEnum, Option[Schema.LivingAreaEating.CookwareExceptionEnum]] = (fun: Schema.LivingAreaEating.CookwareExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingSinkExceptionEnum: Conversion[Schema.LivingAreaEating.SinkExceptionEnum, Option[Schema.LivingAreaEating.SinkExceptionEnum]] = (fun: Schema.LivingAreaEating.SinkExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingMicrowaveExceptionEnum: Conversion[Schema.LivingAreaEating.MicrowaveExceptionEnum, Option[Schema.LivingAreaEating.MicrowaveExceptionEnum]] = (fun: Schema.LivingAreaEating.MicrowaveExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingToasterExceptionEnum: Conversion[Schema.LivingAreaEating.ToasterExceptionEnum, Option[Schema.LivingAreaEating.ToasterExceptionEnum]] = (fun: Schema.LivingAreaEating.ToasterExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingIndoorGrillExceptionEnum: Conversion[Schema.LivingAreaEating.IndoorGrillExceptionEnum, Option[Schema.LivingAreaEating.IndoorGrillExceptionEnum]] = (fun: Schema.LivingAreaEating.IndoorGrillExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingOutdoorGrillExceptionEnum: Conversion[Schema.LivingAreaEating.OutdoorGrillExceptionEnum, Option[Schema.LivingAreaEating.OutdoorGrillExceptionEnum]] = (fun: Schema.LivingAreaEating.OutdoorGrillExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingMinibarExceptionEnum: Conversion[Schema.LivingAreaEating.MinibarExceptionEnum, Option[Schema.LivingAreaEating.MinibarExceptionEnum]] = (fun: Schema.LivingAreaEating.MinibarExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingSnackbarExceptionEnum: Conversion[Schema.LivingAreaEating.SnackbarExceptionEnum, Option[Schema.LivingAreaEating.SnackbarExceptionEnum]] = (fun: Schema.LivingAreaEating.SnackbarExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingCoffeeMakerExceptionEnum: Conversion[Schema.LivingAreaEating.CoffeeMakerExceptionEnum, Option[Schema.LivingAreaEating.CoffeeMakerExceptionEnum]] = (fun: Schema.LivingAreaEating.CoffeeMakerExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingKettleExceptionEnum: Conversion[Schema.LivingAreaEating.KettleExceptionEnum, Option[Schema.LivingAreaEating.KettleExceptionEnum]] = (fun: Schema.LivingAreaEating.KettleExceptionEnum) => Option(fun)
		given putSchemaLivingAreaEatingTeaStationExceptionEnum: Conversion[Schema.LivingAreaEating.TeaStationExceptionEnum, Option[Schema.LivingAreaEating.TeaStationExceptionEnum]] = (fun: Schema.LivingAreaEating.TeaStationExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingBedsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.BedsCountExceptionEnum, Option[Schema.LivingAreaSleeping.BedsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.BedsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingKingBedsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.KingBedsCountExceptionEnum, Option[Schema.LivingAreaSleeping.KingBedsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.KingBedsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingQueenBedsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.QueenBedsCountExceptionEnum, Option[Schema.LivingAreaSleeping.QueenBedsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.QueenBedsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingDoubleBedsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.DoubleBedsCountExceptionEnum, Option[Schema.LivingAreaSleeping.DoubleBedsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.DoubleBedsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingSingleOrTwinBedsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.SingleOrTwinBedsCountExceptionEnum, Option[Schema.LivingAreaSleeping.SingleOrTwinBedsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.SingleOrTwinBedsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingSofaBedsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.SofaBedsCountExceptionEnum, Option[Schema.LivingAreaSleeping.SofaBedsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.SofaBedsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingBunkBedsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.BunkBedsCountExceptionEnum, Option[Schema.LivingAreaSleeping.BunkBedsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.BunkBedsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingOtherBedsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.OtherBedsCountExceptionEnum, Option[Schema.LivingAreaSleeping.OtherBedsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.OtherBedsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingRollAwayBedsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.RollAwayBedsCountExceptionEnum, Option[Schema.LivingAreaSleeping.RollAwayBedsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.RollAwayBedsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingCribsCountExceptionEnum: Conversion[Schema.LivingAreaSleeping.CribsCountExceptionEnum, Option[Schema.LivingAreaSleeping.CribsCountExceptionEnum]] = (fun: Schema.LivingAreaSleeping.CribsCountExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingHypoallergenicBeddingExceptionEnum: Conversion[Schema.LivingAreaSleeping.HypoallergenicBeddingExceptionEnum, Option[Schema.LivingAreaSleeping.HypoallergenicBeddingExceptionEnum]] = (fun: Schema.LivingAreaSleeping.HypoallergenicBeddingExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingSyntheticPillowsExceptionEnum: Conversion[Schema.LivingAreaSleeping.SyntheticPillowsExceptionEnum, Option[Schema.LivingAreaSleeping.SyntheticPillowsExceptionEnum]] = (fun: Schema.LivingAreaSleeping.SyntheticPillowsExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingMemoryFoamPillowsExceptionEnum: Conversion[Schema.LivingAreaSleeping.MemoryFoamPillowsExceptionEnum, Option[Schema.LivingAreaSleeping.MemoryFoamPillowsExceptionEnum]] = (fun: Schema.LivingAreaSleeping.MemoryFoamPillowsExceptionEnum) => Option(fun)
		given putSchemaLivingAreaSleepingFeatherPillowsExceptionEnum: Conversion[Schema.LivingAreaSleeping.FeatherPillowsExceptionEnum, Option[Schema.LivingAreaSleeping.FeatherPillowsExceptionEnum]] = (fun: Schema.LivingAreaSleeping.FeatherPillowsExceptionEnum) => Option(fun)
		given putSchemaLivingAreaAccessibilityMobilityAccessibleUnitExceptionEnum: Conversion[Schema.LivingAreaAccessibility.MobilityAccessibleUnitExceptionEnum, Option[Schema.LivingAreaAccessibility.MobilityAccessibleUnitExceptionEnum]] = (fun: Schema.LivingAreaAccessibility.MobilityAccessibleUnitExceptionEnum) => Option(fun)
		given putSchemaLivingAreaAccessibilityAdaCompliantUnitExceptionEnum: Conversion[Schema.LivingAreaAccessibility.AdaCompliantUnitExceptionEnum, Option[Schema.LivingAreaAccessibility.AdaCompliantUnitExceptionEnum]] = (fun: Schema.LivingAreaAccessibility.AdaCompliantUnitExceptionEnum) => Option(fun)
		given putSchemaLivingAreaAccessibilityHearingAccessibleUnitExceptionEnum: Conversion[Schema.LivingAreaAccessibility.HearingAccessibleUnitExceptionEnum, Option[Schema.LivingAreaAccessibility.HearingAccessibleUnitExceptionEnum]] = (fun: Schema.LivingAreaAccessibility.HearingAccessibleUnitExceptionEnum) => Option(fun)
		given putSchemaLivingAreaAccessibilityMobilityAccessibleShowerExceptionEnum: Conversion[Schema.LivingAreaAccessibility.MobilityAccessibleShowerExceptionEnum, Option[Schema.LivingAreaAccessibility.MobilityAccessibleShowerExceptionEnum]] = (fun: Schema.LivingAreaAccessibility.MobilityAccessibleShowerExceptionEnum) => Option(fun)
		given putSchemaLivingAreaAccessibilityMobilityAccessibleBathtubExceptionEnum: Conversion[Schema.LivingAreaAccessibility.MobilityAccessibleBathtubExceptionEnum, Option[Schema.LivingAreaAccessibility.MobilityAccessibleBathtubExceptionEnum]] = (fun: Schema.LivingAreaAccessibility.MobilityAccessibleBathtubExceptionEnum) => Option(fun)
		given putSchemaLivingAreaAccessibilityMobilityAccessibleToiletExceptionEnum: Conversion[Schema.LivingAreaAccessibility.MobilityAccessibleToiletExceptionEnum, Option[Schema.LivingAreaAccessibility.MobilityAccessibleToiletExceptionEnum]] = (fun: Schema.LivingAreaAccessibility.MobilityAccessibleToiletExceptionEnum) => Option(fun)
		given putSchemaLivingAreaAccessibilityHearingAccessibleDoorbellExceptionEnum: Conversion[Schema.LivingAreaAccessibility.HearingAccessibleDoorbellExceptionEnum, Option[Schema.LivingAreaAccessibility.HearingAccessibleDoorbellExceptionEnum]] = (fun: Schema.LivingAreaAccessibility.HearingAccessibleDoorbellExceptionEnum) => Option(fun)
		given putSchemaLivingAreaAccessibilityHearingAccessibleFireAlarmExceptionEnum: Conversion[Schema.LivingAreaAccessibility.HearingAccessibleFireAlarmExceptionEnum, Option[Schema.LivingAreaAccessibility.HearingAccessibleFireAlarmExceptionEnum]] = (fun: Schema.LivingAreaAccessibility.HearingAccessibleFireAlarmExceptionEnum) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putSchemaGuestUnitFeaturesTierEnum: Conversion[Schema.GuestUnitFeatures.TierEnum, Option[Schema.GuestUnitFeatures.TierEnum]] = (fun: Schema.GuestUnitFeatures.TierEnum) => Option(fun)
		given putSchemaGuestUnitFeaturesTierExceptionEnum: Conversion[Schema.GuestUnitFeatures.TierExceptionEnum, Option[Schema.GuestUnitFeatures.TierExceptionEnum]] = (fun: Schema.GuestUnitFeatures.TierExceptionEnum) => Option(fun)
		given putSchemaGuestUnitFeaturesMaxOccupantsCountExceptionEnum: Conversion[Schema.GuestUnitFeatures.MaxOccupantsCountExceptionEnum, Option[Schema.GuestUnitFeatures.MaxOccupantsCountExceptionEnum]] = (fun: Schema.GuestUnitFeatures.MaxOccupantsCountExceptionEnum) => Option(fun)
		given putSchemaGuestUnitFeaturesMaxAdultOccupantsCountExceptionEnum: Conversion[Schema.GuestUnitFeatures.MaxAdultOccupantsCountExceptionEnum, Option[Schema.GuestUnitFeatures.MaxAdultOccupantsCountExceptionEnum]] = (fun: Schema.GuestUnitFeatures.MaxAdultOccupantsCountExceptionEnum) => Option(fun)
		given putSchemaGuestUnitFeaturesMaxChildOccupantsCountExceptionEnum: Conversion[Schema.GuestUnitFeatures.MaxChildOccupantsCountExceptionEnum, Option[Schema.GuestUnitFeatures.MaxChildOccupantsCountExceptionEnum]] = (fun: Schema.GuestUnitFeatures.MaxChildOccupantsCountExceptionEnum) => Option(fun)
		given putSchemaGuestUnitFeaturesPrivateHomeExceptionEnum: Conversion[Schema.GuestUnitFeatures.PrivateHomeExceptionEnum, Option[Schema.GuestUnitFeatures.PrivateHomeExceptionEnum]] = (fun: Schema.GuestUnitFeatures.PrivateHomeExceptionEnum) => Option(fun)
		given putSchemaGuestUnitFeaturesSuiteExceptionEnum: Conversion[Schema.GuestUnitFeatures.SuiteExceptionEnum, Option[Schema.GuestUnitFeatures.SuiteExceptionEnum]] = (fun: Schema.GuestUnitFeatures.SuiteExceptionEnum) => Option(fun)
		given putSchemaGuestUnitFeaturesBungalowOrVillaExceptionEnum: Conversion[Schema.GuestUnitFeatures.BungalowOrVillaExceptionEnum, Option[Schema.GuestUnitFeatures.BungalowOrVillaExceptionEnum]] = (fun: Schema.GuestUnitFeatures.BungalowOrVillaExceptionEnum) => Option(fun)
		given putSchemaGuestUnitFeaturesExecutiveFloorExceptionEnum: Conversion[Schema.GuestUnitFeatures.ExecutiveFloorExceptionEnum, Option[Schema.GuestUnitFeatures.ExecutiveFloorExceptionEnum]] = (fun: Schema.GuestUnitFeatures.ExecutiveFloorExceptionEnum) => Option(fun)
		given putSchemaGuestUnitFeaturesConnectingUnitAvailableExceptionEnum: Conversion[Schema.GuestUnitFeatures.ConnectingUnitAvailableExceptionEnum, Option[Schema.GuestUnitFeatures.ConnectingUnitAvailableExceptionEnum]] = (fun: Schema.GuestUnitFeatures.ConnectingUnitAvailableExceptionEnum) => Option(fun)
		given putSchemaViewsFromUnit: Conversion[Schema.ViewsFromUnit, Option[Schema.ViewsFromUnit]] = (fun: Schema.ViewsFromUnit) => Option(fun)
		given putSchemaViewsFromUnitBeachViewExceptionEnum: Conversion[Schema.ViewsFromUnit.BeachViewExceptionEnum, Option[Schema.ViewsFromUnit.BeachViewExceptionEnum]] = (fun: Schema.ViewsFromUnit.BeachViewExceptionEnum) => Option(fun)
		given putSchemaViewsFromUnitCityViewExceptionEnum: Conversion[Schema.ViewsFromUnit.CityViewExceptionEnum, Option[Schema.ViewsFromUnit.CityViewExceptionEnum]] = (fun: Schema.ViewsFromUnit.CityViewExceptionEnum) => Option(fun)
		given putSchemaViewsFromUnitGardenViewExceptionEnum: Conversion[Schema.ViewsFromUnit.GardenViewExceptionEnum, Option[Schema.ViewsFromUnit.GardenViewExceptionEnum]] = (fun: Schema.ViewsFromUnit.GardenViewExceptionEnum) => Option(fun)
		given putSchemaViewsFromUnitLakeViewExceptionEnum: Conversion[Schema.ViewsFromUnit.LakeViewExceptionEnum, Option[Schema.ViewsFromUnit.LakeViewExceptionEnum]] = (fun: Schema.ViewsFromUnit.LakeViewExceptionEnum) => Option(fun)
		given putSchemaViewsFromUnitLandmarkViewExceptionEnum: Conversion[Schema.ViewsFromUnit.LandmarkViewExceptionEnum, Option[Schema.ViewsFromUnit.LandmarkViewExceptionEnum]] = (fun: Schema.ViewsFromUnit.LandmarkViewExceptionEnum) => Option(fun)
		given putSchemaViewsFromUnitOceanViewExceptionEnum: Conversion[Schema.ViewsFromUnit.OceanViewExceptionEnum, Option[Schema.ViewsFromUnit.OceanViewExceptionEnum]] = (fun: Schema.ViewsFromUnit.OceanViewExceptionEnum) => Option(fun)
		given putSchemaViewsFromUnitPoolViewExceptionEnum: Conversion[Schema.ViewsFromUnit.PoolViewExceptionEnum, Option[Schema.ViewsFromUnit.PoolViewExceptionEnum]] = (fun: Schema.ViewsFromUnit.PoolViewExceptionEnum) => Option(fun)
		given putSchemaViewsFromUnitValleyViewExceptionEnum: Conversion[Schema.ViewsFromUnit.ValleyViewExceptionEnum, Option[Schema.ViewsFromUnit.ValleyViewExceptionEnum]] = (fun: Schema.ViewsFromUnit.ValleyViewExceptionEnum) => Option(fun)
		given putSchemaLodging: Conversion[Schema.Lodging, Option[Schema.Lodging]] = (fun: Schema.Lodging) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
