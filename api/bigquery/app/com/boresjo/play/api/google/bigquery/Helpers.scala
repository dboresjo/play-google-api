package com.boresjo.play.api.google.bigquery

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putSchemaArgumentArgumentKindEnum: Conversion[Schema.Argument.ArgumentKindEnum, Option[Schema.Argument.ArgumentKindEnum]] = (fun: Schema.Argument.ArgumentKindEnum) => Option(fun)
		given putSchemaStandardSqlDataType: Conversion[Schema.StandardSqlDataType, Option[Schema.StandardSqlDataType]] = (fun: Schema.StandardSqlDataType) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaArgumentModeEnum: Conversion[Schema.Argument.ModeEnum, Option[Schema.Argument.ModeEnum]] = (fun: Schema.Argument.ModeEnum) => Option(fun)
		given putListBigDecimal: Conversion[List[BigDecimal], Option[List[BigDecimal]]] = (fun: List[BigDecimal]) => Option(fun)
		given putListSchemaArimaFittingMetrics: Conversion[List[Schema.ArimaFittingMetrics], Option[List[Schema.ArimaFittingMetrics]]] = (fun: List[Schema.ArimaFittingMetrics]) => Option(fun)
		given putListSchemaArimaSingleModelForecastingMetrics: Conversion[List[Schema.ArimaSingleModelForecastingMetrics], Option[List[Schema.ArimaSingleModelForecastingMetrics]]] = (fun: List[Schema.ArimaSingleModelForecastingMetrics]) => Option(fun)
		given putListBoolean: Conversion[List[Boolean], Option[List[Boolean]]] = (fun: List[Boolean]) => Option(fun)
		given putListSchemaArimaOrder: Conversion[List[Schema.ArimaOrder], Option[List[Schema.ArimaOrder]]] = (fun: List[Schema.ArimaOrder]) => Option(fun)
		given putListSchemaArimaForecastingMetricsSeasonalPeriodsEnum: Conversion[List[Schema.ArimaForecastingMetrics.SeasonalPeriodsEnum], Option[List[Schema.ArimaForecastingMetrics.SeasonalPeriodsEnum]]] = (fun: List[Schema.ArimaForecastingMetrics.SeasonalPeriodsEnum]) => Option(fun)
		given putSchemaArimaCoefficients: Conversion[Schema.ArimaCoefficients, Option[Schema.ArimaCoefficients]] = (fun: Schema.ArimaCoefficients) => Option(fun)
		given putSchemaArimaFittingMetrics: Conversion[Schema.ArimaFittingMetrics, Option[Schema.ArimaFittingMetrics]] = (fun: Schema.ArimaFittingMetrics) => Option(fun)
		given putSchemaArimaOrder: Conversion[Schema.ArimaOrder, Option[Schema.ArimaOrder]] = (fun: Schema.ArimaOrder) => Option(fun)
		given putListSchemaArimaModelInfoSeasonalPeriodsEnum: Conversion[List[Schema.ArimaModelInfo.SeasonalPeriodsEnum], Option[List[Schema.ArimaModelInfo.SeasonalPeriodsEnum]]] = (fun: List[Schema.ArimaModelInfo.SeasonalPeriodsEnum]) => Option(fun)
		given putListSchemaArimaModelInfo: Conversion[List[Schema.ArimaModelInfo], Option[List[Schema.ArimaModelInfo]]] = (fun: List[Schema.ArimaModelInfo]) => Option(fun)
		given putListSchemaArimaResultSeasonalPeriodsEnum: Conversion[List[Schema.ArimaResult.SeasonalPeriodsEnum], Option[List[Schema.ArimaResult.SeasonalPeriodsEnum]]] = (fun: List[Schema.ArimaResult.SeasonalPeriodsEnum]) => Option(fun)
		given putListSchemaArimaSingleModelForecastingMetricsSeasonalPeriodsEnum: Conversion[List[Schema.ArimaSingleModelForecastingMetrics.SeasonalPeriodsEnum], Option[List[Schema.ArimaSingleModelForecastingMetrics.SeasonalPeriodsEnum]]] = (fun: List[Schema.ArimaSingleModelForecastingMetrics.SeasonalPeriodsEnum]) => Option(fun)
		given putListSchemaAuditLogConfig: Conversion[List[Schema.AuditLogConfig], Option[List[Schema.AuditLogConfig]]] = (fun: List[Schema.AuditLogConfig]) => Option(fun)
		given putSchemaAuditLogConfigLogTypeEnum: Conversion[Schema.AuditLogConfig.LogTypeEnum, Option[Schema.AuditLogConfig.LogTypeEnum]] = (fun: Schema.AuditLogConfig.LogTypeEnum) => Option(fun)
		given putSchemaBiEngineReasonCodeEnum: Conversion[Schema.BiEngineReason.CodeEnum, Option[Schema.BiEngineReason.CodeEnum]] = (fun: Schema.BiEngineReason.CodeEnum) => Option(fun)
		given putSchemaBiEngineStatisticsAccelerationModeEnum: Conversion[Schema.BiEngineStatistics.AccelerationModeEnum, Option[Schema.BiEngineStatistics.AccelerationModeEnum]] = (fun: Schema.BiEngineStatistics.AccelerationModeEnum) => Option(fun)
		given putSchemaBiEngineStatisticsBiEngineModeEnum: Conversion[Schema.BiEngineStatistics.BiEngineModeEnum, Option[Schema.BiEngineStatistics.BiEngineModeEnum]] = (fun: Schema.BiEngineStatistics.BiEngineModeEnum) => Option(fun)
		given putListSchemaBiEngineReason: Conversion[List[Schema.BiEngineReason], Option[List[Schema.BiEngineReason]]] = (fun: List[Schema.BiEngineReason]) => Option(fun)
		given putSchemaBigLakeConfigurationFileFormatEnum: Conversion[Schema.BigLakeConfiguration.FileFormatEnum, Option[Schema.BigLakeConfiguration.FileFormatEnum]] = (fun: Schema.BigLakeConfiguration.FileFormatEnum) => Option(fun)
		given putSchemaBigLakeConfigurationTableFormatEnum: Conversion[Schema.BigLakeConfiguration.TableFormatEnum, Option[Schema.BigLakeConfiguration.TableFormatEnum]] = (fun: Schema.BigLakeConfiguration.TableFormatEnum) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListSchemaBigtableColumn: Conversion[List[Schema.BigtableColumn], Option[List[Schema.BigtableColumn]]] = (fun: List[Schema.BigtableColumn]) => Option(fun)
		given putListSchemaBigtableColumnFamily: Conversion[List[Schema.BigtableColumnFamily], Option[List[Schema.BigtableColumnFamily]]] = (fun: List[Schema.BigtableColumnFamily]) => Option(fun)
		given putSchemaAggregateClassificationMetrics: Conversion[Schema.AggregateClassificationMetrics, Option[Schema.AggregateClassificationMetrics]] = (fun: Schema.AggregateClassificationMetrics) => Option(fun)
		given putListSchemaBinaryConfusionMatrix: Conversion[List[Schema.BinaryConfusionMatrix], Option[List[Schema.BinaryConfusionMatrix]]] = (fun: List[Schema.BinaryConfusionMatrix]) => Option(fun)
		given putSchemaExpr: Conversion[Schema.Expr, Option[Schema.Expr]] = (fun: Schema.Expr) => Option(fun)
		given putListSchemaBqmlIterationResult: Conversion[List[Schema.BqmlIterationResult], Option[List[Schema.BqmlIterationResult]]] = (fun: List[Schema.BqmlIterationResult]) => Option(fun)
		given putSchemaBqmlTrainingRunTrainingOptionsItem: Conversion[Schema.BqmlTrainingRun.TrainingOptionsItem, Option[Schema.BqmlTrainingRun.TrainingOptionsItem]] = (fun: Schema.BqmlTrainingRun.TrainingOptionsItem) => Option(fun)
		given putListSchemaCategoryCount: Conversion[List[Schema.CategoryCount], Option[List[Schema.CategoryCount]]] = (fun: List[Schema.CategoryCount]) => Option(fun)
		given putSchemaTableReference: Conversion[Schema.TableReference, Option[Schema.TableReference]] = (fun: Schema.TableReference) => Option(fun)
		given putListSchemaFeatureValue: Conversion[List[Schema.FeatureValue], Option[List[Schema.FeatureValue]]] = (fun: List[Schema.FeatureValue]) => Option(fun)
		given putListSchemaCluster: Conversion[List[Schema.Cluster], Option[List[Schema.Cluster]]] = (fun: List[Schema.Cluster]) => Option(fun)
		given putListSchemaRow: Conversion[List[Schema.Row], Option[List[Schema.Row]]] = (fun: List[Schema.Row]) => Option(fun)
		given putListSchemaDatasetAccessItem: Conversion[List[Schema.Dataset.AccessItem], Option[List[Schema.Dataset.AccessItem]]] = (fun: List[Schema.Dataset.AccessItem]) => Option(fun)
		given putSchemaDatasetReference: Conversion[Schema.DatasetReference, Option[Schema.DatasetReference]] = (fun: Schema.DatasetReference) => Option(fun)
		given putSchemaEncryptionConfiguration: Conversion[Schema.EncryptionConfiguration, Option[Schema.EncryptionConfiguration]] = (fun: Schema.EncryptionConfiguration) => Option(fun)
		given putSchemaDatasetDefaultRoundingModeEnum: Conversion[Schema.Dataset.DefaultRoundingModeEnum, Option[Schema.Dataset.DefaultRoundingModeEnum]] = (fun: Schema.Dataset.DefaultRoundingModeEnum) => Option(fun)
		given putSchemaExternalCatalogDatasetOptions: Conversion[Schema.ExternalCatalogDatasetOptions, Option[Schema.ExternalCatalogDatasetOptions]] = (fun: Schema.ExternalCatalogDatasetOptions) => Option(fun)
		given putSchemaExternalDatasetReference: Conversion[Schema.ExternalDatasetReference, Option[Schema.ExternalDatasetReference]] = (fun: Schema.ExternalDatasetReference) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putSchemaLinkedDatasetMetadata: Conversion[Schema.LinkedDatasetMetadata, Option[Schema.LinkedDatasetMetadata]] = (fun: Schema.LinkedDatasetMetadata) => Option(fun)
		given putSchemaLinkedDatasetSource: Conversion[Schema.LinkedDatasetSource, Option[Schema.LinkedDatasetSource]] = (fun: Schema.LinkedDatasetSource) => Option(fun)
		given putSchemaRestrictionConfig: Conversion[Schema.RestrictionConfig, Option[Schema.RestrictionConfig]] = (fun: Schema.RestrictionConfig) => Option(fun)
		given putSchemaDatasetStorageBillingModelEnum: Conversion[Schema.Dataset.StorageBillingModelEnum, Option[Schema.Dataset.StorageBillingModelEnum]] = (fun: Schema.Dataset.StorageBillingModelEnum) => Option(fun)
		given putListSchemaDatasetTagsItem: Conversion[List[Schema.Dataset.TagsItem], Option[List[Schema.Dataset.TagsItem]]] = (fun: List[Schema.Dataset.TagsItem]) => Option(fun)
		given putListSchemaDatasetAccessEntryTargetTypesEnum: Conversion[List[Schema.DatasetAccessEntry.TargetTypesEnum], Option[List[Schema.DatasetAccessEntry.TargetTypesEnum]]] = (fun: List[Schema.DatasetAccessEntry.TargetTypesEnum]) => Option(fun)
		given putListSchemaDatasetListDatasetsItem: Conversion[List[Schema.DatasetList.DatasetsItem], Option[List[Schema.DatasetList.DatasetsItem]]] = (fun: List[Schema.DatasetList.DatasetsItem]) => Option(fun)
		given putSchemaDoubleCandidates: Conversion[Schema.DoubleCandidates, Option[Schema.DoubleCandidates]] = (fun: Schema.DoubleCandidates) => Option(fun)
		given putSchemaDoubleRange: Conversion[Schema.DoubleRange, Option[Schema.DoubleRange]] = (fun: Schema.DoubleRange) => Option(fun)
		given putSchemaArimaForecastingMetrics: Conversion[Schema.ArimaForecastingMetrics, Option[Schema.ArimaForecastingMetrics]] = (fun: Schema.ArimaForecastingMetrics) => Option(fun)
		given putSchemaBinaryClassificationMetrics: Conversion[Schema.BinaryClassificationMetrics, Option[Schema.BinaryClassificationMetrics]] = (fun: Schema.BinaryClassificationMetrics) => Option(fun)
		given putSchemaClusteringMetrics: Conversion[Schema.ClusteringMetrics, Option[Schema.ClusteringMetrics]] = (fun: Schema.ClusteringMetrics) => Option(fun)
		given putSchemaDimensionalityReductionMetrics: Conversion[Schema.DimensionalityReductionMetrics, Option[Schema.DimensionalityReductionMetrics]] = (fun: Schema.DimensionalityReductionMetrics) => Option(fun)
		given putSchemaMultiClassClassificationMetrics: Conversion[Schema.MultiClassClassificationMetrics, Option[Schema.MultiClassClassificationMetrics]] = (fun: Schema.MultiClassClassificationMetrics) => Option(fun)
		given putSchemaRankingMetrics: Conversion[Schema.RankingMetrics, Option[Schema.RankingMetrics]] = (fun: Schema.RankingMetrics) => Option(fun)
		given putSchemaRegressionMetrics: Conversion[Schema.RegressionMetrics, Option[Schema.RegressionMetrics]] = (fun: Schema.RegressionMetrics) => Option(fun)
		given putSchemaExplainQueryStageComputeModeEnum: Conversion[Schema.ExplainQueryStage.ComputeModeEnum, Option[Schema.ExplainQueryStage.ComputeModeEnum]] = (fun: Schema.ExplainQueryStage.ComputeModeEnum) => Option(fun)
		given putListSchemaExplainQueryStep: Conversion[List[Schema.ExplainQueryStep], Option[List[Schema.ExplainQueryStep]]] = (fun: List[Schema.ExplainQueryStep]) => Option(fun)
		given putSchemaStorageDescriptor: Conversion[Schema.StorageDescriptor, Option[Schema.StorageDescriptor]] = (fun: Schema.StorageDescriptor) => Option(fun)
		given putSchemaAvroOptions: Conversion[Schema.AvroOptions, Option[Schema.AvroOptions]] = (fun: Schema.AvroOptions) => Option(fun)
		given putSchemaBigtableOptions: Conversion[Schema.BigtableOptions, Option[Schema.BigtableOptions]] = (fun: Schema.BigtableOptions) => Option(fun)
		given putSchemaCsvOptions: Conversion[Schema.CsvOptions, Option[Schema.CsvOptions]] = (fun: Schema.CsvOptions) => Option(fun)
		given putListSchemaExternalDataConfigurationDecimalTargetTypesEnum: Conversion[List[Schema.ExternalDataConfiguration.DecimalTargetTypesEnum], Option[List[Schema.ExternalDataConfiguration.DecimalTargetTypesEnum]]] = (fun: List[Schema.ExternalDataConfiguration.DecimalTargetTypesEnum]) => Option(fun)
		given putSchemaExternalDataConfigurationFileSetSpecTypeEnum: Conversion[Schema.ExternalDataConfiguration.FileSetSpecTypeEnum, Option[Schema.ExternalDataConfiguration.FileSetSpecTypeEnum]] = (fun: Schema.ExternalDataConfiguration.FileSetSpecTypeEnum) => Option(fun)
		given putSchemaGoogleSheetsOptions: Conversion[Schema.GoogleSheetsOptions, Option[Schema.GoogleSheetsOptions]] = (fun: Schema.GoogleSheetsOptions) => Option(fun)
		given putSchemaHivePartitioningOptions: Conversion[Schema.HivePartitioningOptions, Option[Schema.HivePartitioningOptions]] = (fun: Schema.HivePartitioningOptions) => Option(fun)
		given putSchemaExternalDataConfigurationJsonExtensionEnum: Conversion[Schema.ExternalDataConfiguration.JsonExtensionEnum, Option[Schema.ExternalDataConfiguration.JsonExtensionEnum]] = (fun: Schema.ExternalDataConfiguration.JsonExtensionEnum) => Option(fun)
		given putSchemaJsonOptions: Conversion[Schema.JsonOptions, Option[Schema.JsonOptions]] = (fun: Schema.JsonOptions) => Option(fun)
		given putSchemaExternalDataConfigurationMetadataCacheModeEnum: Conversion[Schema.ExternalDataConfiguration.MetadataCacheModeEnum, Option[Schema.ExternalDataConfiguration.MetadataCacheModeEnum]] = (fun: Schema.ExternalDataConfiguration.MetadataCacheModeEnum) => Option(fun)
		given putSchemaExternalDataConfigurationObjectMetadataEnum: Conversion[Schema.ExternalDataConfiguration.ObjectMetadataEnum, Option[Schema.ExternalDataConfiguration.ObjectMetadataEnum]] = (fun: Schema.ExternalDataConfiguration.ObjectMetadataEnum) => Option(fun)
		given putSchemaParquetOptions: Conversion[Schema.ParquetOptions, Option[Schema.ParquetOptions]] = (fun: Schema.ParquetOptions) => Option(fun)
		given putSchemaTableSchema: Conversion[Schema.TableSchema, Option[Schema.TableSchema]] = (fun: Schema.TableSchema) => Option(fun)
		given putSchemaCategoricalValue: Conversion[Schema.CategoricalValue, Option[Schema.CategoricalValue]] = (fun: Schema.CategoricalValue) => Option(fun)
		given putSchemaForeignTypeInfoTypeSystemEnum: Conversion[Schema.ForeignTypeInfo.TypeSystemEnum, Option[Schema.ForeignTypeInfo.TypeSystemEnum]] = (fun: Schema.ForeignTypeInfo.TypeSystemEnum) => Option(fun)
		given putSchemaGetPolicyOptions: Conversion[Schema.GetPolicyOptions, Option[Schema.GetPolicyOptions]] = (fun: Schema.GetPolicyOptions) => Option(fun)
		given putListSchemaErrorProto: Conversion[List[Schema.ErrorProto], Option[List[Schema.ErrorProto]]] = (fun: List[Schema.ErrorProto]) => Option(fun)
		given putSchemaJobReference: Conversion[Schema.JobReference, Option[Schema.JobReference]] = (fun: Schema.JobReference) => Option(fun)
		given putListSchemaTableRow: Conversion[List[Schema.TableRow], Option[List[Schema.TableRow]]] = (fun: List[Schema.TableRow]) => Option(fun)
		given putListSchemaExplanation: Conversion[List[Schema.Explanation], Option[List[Schema.Explanation]]] = (fun: List[Schema.Explanation]) => Option(fun)
		given putSchemaStringHparamSearchSpace: Conversion[Schema.StringHparamSearchSpace, Option[Schema.StringHparamSearchSpace]] = (fun: Schema.StringHparamSearchSpace) => Option(fun)
		given putSchemaIntHparamSearchSpace: Conversion[Schema.IntHparamSearchSpace, Option[Schema.IntHparamSearchSpace]] = (fun: Schema.IntHparamSearchSpace) => Option(fun)
		given putSchemaDoubleHparamSearchSpace: Conversion[Schema.DoubleHparamSearchSpace, Option[Schema.DoubleHparamSearchSpace]] = (fun: Schema.DoubleHparamSearchSpace) => Option(fun)
		given putSchemaIntArrayHparamSearchSpace: Conversion[Schema.IntArrayHparamSearchSpace, Option[Schema.IntArrayHparamSearchSpace]] = (fun: Schema.IntArrayHparamSearchSpace) => Option(fun)
		given putSchemaEvaluationMetrics: Conversion[Schema.EvaluationMetrics, Option[Schema.EvaluationMetrics]] = (fun: Schema.EvaluationMetrics) => Option(fun)
		given putSchemaTrainingOptions: Conversion[Schema.TrainingOptions, Option[Schema.TrainingOptions]] = (fun: Schema.TrainingOptions) => Option(fun)
		given putSchemaHparamTuningTrialStatusEnum: Conversion[Schema.HparamTuningTrial.StatusEnum, Option[Schema.HparamTuningTrial.StatusEnum]] = (fun: Schema.HparamTuningTrial.StatusEnum) => Option(fun)
		given putSchemaIndexUnusedReasonCodeEnum: Conversion[Schema.IndexUnusedReason.CodeEnum, Option[Schema.IndexUnusedReason.CodeEnum]] = (fun: Schema.IndexUnusedReason.CodeEnum) => Option(fun)
		given putListSchemaIntArray: Conversion[List[Schema.IntArray], Option[List[Schema.IntArray]]] = (fun: List[Schema.IntArray]) => Option(fun)
		given putSchemaIntCandidates: Conversion[Schema.IntCandidates, Option[Schema.IntCandidates]] = (fun: Schema.IntCandidates) => Option(fun)
		given putSchemaIntRange: Conversion[Schema.IntRange, Option[Schema.IntRange]] = (fun: Schema.IntRange) => Option(fun)
		given putSchemaArimaResult: Conversion[Schema.ArimaResult, Option[Schema.ArimaResult]] = (fun: Schema.ArimaResult) => Option(fun)
		given putListSchemaClusterInfo: Conversion[List[Schema.ClusterInfo], Option[List[Schema.ClusterInfo]]] = (fun: List[Schema.ClusterInfo]) => Option(fun)
		given putListSchemaPrincipalComponentInfo: Conversion[List[Schema.PrincipalComponentInfo], Option[List[Schema.PrincipalComponentInfo]]] = (fun: List[Schema.PrincipalComponentInfo]) => Option(fun)
		given putSchemaJobConfiguration: Conversion[Schema.JobConfiguration, Option[Schema.JobConfiguration]] = (fun: Schema.JobConfiguration) => Option(fun)
		given putSchemaJobCreationReason: Conversion[Schema.JobCreationReason, Option[Schema.JobCreationReason]] = (fun: Schema.JobCreationReason) => Option(fun)
		given putSchemaJobStatistics: Conversion[Schema.JobStatistics, Option[Schema.JobStatistics]] = (fun: Schema.JobStatistics) => Option(fun)
		given putSchemaJobStatus: Conversion[Schema.JobStatus, Option[Schema.JobStatus]] = (fun: Schema.JobStatus) => Option(fun)
		given putSchemaJob: Conversion[Schema.Job, Option[Schema.Job]] = (fun: Schema.Job) => Option(fun)
		given putSchemaJobConfigurationTableCopy: Conversion[Schema.JobConfigurationTableCopy, Option[Schema.JobConfigurationTableCopy]] = (fun: Schema.JobConfigurationTableCopy) => Option(fun)
		given putSchemaJobConfigurationExtract: Conversion[Schema.JobConfigurationExtract, Option[Schema.JobConfigurationExtract]] = (fun: Schema.JobConfigurationExtract) => Option(fun)
		given putSchemaJobConfigurationLoad: Conversion[Schema.JobConfigurationLoad, Option[Schema.JobConfigurationLoad]] = (fun: Schema.JobConfigurationLoad) => Option(fun)
		given putSchemaJobConfigurationQuery: Conversion[Schema.JobConfigurationQuery, Option[Schema.JobConfigurationQuery]] = (fun: Schema.JobConfigurationQuery) => Option(fun)
		given putSchemaModelExtractOptions: Conversion[Schema.ModelExtractOptions, Option[Schema.ModelExtractOptions]] = (fun: Schema.ModelExtractOptions) => Option(fun)
		given putSchemaModelReference: Conversion[Schema.ModelReference, Option[Schema.ModelReference]] = (fun: Schema.ModelReference) => Option(fun)
		given putSchemaClustering: Conversion[Schema.Clustering, Option[Schema.Clustering]] = (fun: Schema.Clustering) => Option(fun)
		given putSchemaJobConfigurationLoadColumnNameCharacterMapEnum: Conversion[Schema.JobConfigurationLoad.ColumnNameCharacterMapEnum, Option[Schema.JobConfigurationLoad.ColumnNameCharacterMapEnum]] = (fun: Schema.JobConfigurationLoad.ColumnNameCharacterMapEnum) => Option(fun)
		given putListSchemaConnectionProperty: Conversion[List[Schema.ConnectionProperty], Option[List[Schema.ConnectionProperty]]] = (fun: List[Schema.ConnectionProperty]) => Option(fun)
		given putListSchemaJobConfigurationLoadDecimalTargetTypesEnum: Conversion[List[Schema.JobConfigurationLoad.DecimalTargetTypesEnum], Option[List[Schema.JobConfigurationLoad.DecimalTargetTypesEnum]]] = (fun: List[Schema.JobConfigurationLoad.DecimalTargetTypesEnum]) => Option(fun)
		given putSchemaDestinationTableProperties: Conversion[Schema.DestinationTableProperties, Option[Schema.DestinationTableProperties]] = (fun: Schema.DestinationTableProperties) => Option(fun)
		given putSchemaJobConfigurationLoadFileSetSpecTypeEnum: Conversion[Schema.JobConfigurationLoad.FileSetSpecTypeEnum, Option[Schema.JobConfigurationLoad.FileSetSpecTypeEnum]] = (fun: Schema.JobConfigurationLoad.FileSetSpecTypeEnum) => Option(fun)
		given putSchemaJobConfigurationLoadJsonExtensionEnum: Conversion[Schema.JobConfigurationLoad.JsonExtensionEnum, Option[Schema.JobConfigurationLoad.JsonExtensionEnum]] = (fun: Schema.JobConfigurationLoad.JsonExtensionEnum) => Option(fun)
		given putSchemaRangePartitioning: Conversion[Schema.RangePartitioning, Option[Schema.RangePartitioning]] = (fun: Schema.RangePartitioning) => Option(fun)
		given putSchemaTimePartitioning: Conversion[Schema.TimePartitioning, Option[Schema.TimePartitioning]] = (fun: Schema.TimePartitioning) => Option(fun)
		given putListSchemaQueryParameter: Conversion[List[Schema.QueryParameter], Option[List[Schema.QueryParameter]]] = (fun: List[Schema.QueryParameter]) => Option(fun)
		given putSchemaScriptOptions: Conversion[Schema.ScriptOptions, Option[Schema.ScriptOptions]] = (fun: Schema.ScriptOptions) => Option(fun)
		given putSchemaSystemVariables: Conversion[Schema.SystemVariables, Option[Schema.SystemVariables]] = (fun: Schema.SystemVariables) => Option(fun)
		given putMapStringSchemaExternalDataConfiguration: Conversion[Map[String, Schema.ExternalDataConfiguration], Option[Map[String, Schema.ExternalDataConfiguration]]] = (fun: Map[String, Schema.ExternalDataConfiguration]) => Option(fun)
		given putListSchemaUserDefinedFunctionResource: Conversion[List[Schema.UserDefinedFunctionResource], Option[List[Schema.UserDefinedFunctionResource]]] = (fun: List[Schema.UserDefinedFunctionResource]) => Option(fun)
		given putSchemaJobConfigurationTableCopyOperationTypeEnum: Conversion[Schema.JobConfigurationTableCopy.OperationTypeEnum, Option[Schema.JobConfigurationTableCopy.OperationTypeEnum]] = (fun: Schema.JobConfigurationTableCopy.OperationTypeEnum) => Option(fun)
		given putListSchemaTableReference: Conversion[List[Schema.TableReference], Option[List[Schema.TableReference]]] = (fun: List[Schema.TableReference]) => Option(fun)
		given putSchemaJobCreationReasonCodeEnum: Conversion[Schema.JobCreationReason.CodeEnum, Option[Schema.JobCreationReason.CodeEnum]] = (fun: Schema.JobCreationReason.CodeEnum) => Option(fun)
		given putListSchemaJobListJobsItem: Conversion[List[Schema.JobList.JobsItem], Option[List[Schema.JobList.JobsItem]]] = (fun: List[Schema.JobList.JobsItem]) => Option(fun)
		given putSchemaJobStatistics5: Conversion[Schema.JobStatistics5, Option[Schema.JobStatistics5]] = (fun: Schema.JobStatistics5) => Option(fun)
		given putSchemaDataMaskingStatistics: Conversion[Schema.DataMaskingStatistics, Option[Schema.DataMaskingStatistics]] = (fun: Schema.DataMaskingStatistics) => Option(fun)
		given putSchemaJobStatisticsEditionEnum: Conversion[Schema.JobStatistics.EditionEnum, Option[Schema.JobStatistics.EditionEnum]] = (fun: Schema.JobStatistics.EditionEnum) => Option(fun)
		given putSchemaJobStatistics4: Conversion[Schema.JobStatistics4, Option[Schema.JobStatistics4]] = (fun: Schema.JobStatistics4) => Option(fun)
		given putSchemaJobStatistics3: Conversion[Schema.JobStatistics3, Option[Schema.JobStatistics3]] = (fun: Schema.JobStatistics3) => Option(fun)
		given putSchemaJobStatistics2: Conversion[Schema.JobStatistics2, Option[Schema.JobStatistics2]] = (fun: Schema.JobStatistics2) => Option(fun)
		given putListSchemaJobStatisticsReservationUsageItem: Conversion[List[Schema.JobStatistics.ReservationUsageItem], Option[List[Schema.JobStatistics.ReservationUsageItem]]] = (fun: List[Schema.JobStatistics.ReservationUsageItem]) => Option(fun)
		given putSchemaRowLevelSecurityStatistics: Conversion[Schema.RowLevelSecurityStatistics, Option[Schema.RowLevelSecurityStatistics]] = (fun: Schema.RowLevelSecurityStatistics) => Option(fun)
		given putSchemaScriptStatistics: Conversion[Schema.ScriptStatistics, Option[Schema.ScriptStatistics]] = (fun: Schema.ScriptStatistics) => Option(fun)
		given putSchemaSessionInfo: Conversion[Schema.SessionInfo, Option[Schema.SessionInfo]] = (fun: Schema.SessionInfo) => Option(fun)
		given putSchemaTransactionInfo: Conversion[Schema.TransactionInfo, Option[Schema.TransactionInfo]] = (fun: Schema.TransactionInfo) => Option(fun)
		given putSchemaBiEngineStatistics: Conversion[Schema.BiEngineStatistics, Option[Schema.BiEngineStatistics]] = (fun: Schema.BiEngineStatistics) => Option(fun)
		given putSchemaRoutineReference: Conversion[Schema.RoutineReference, Option[Schema.RoutineReference]] = (fun: Schema.RoutineReference) => Option(fun)
		given putSchemaRowAccessPolicyReference: Conversion[Schema.RowAccessPolicyReference, Option[Schema.RowAccessPolicyReference]] = (fun: Schema.RowAccessPolicyReference) => Option(fun)
		given putSchemaDmlStatistics: Conversion[Schema.DmlStatistics, Option[Schema.DmlStatistics]] = (fun: Schema.DmlStatistics) => Option(fun)
		given putSchemaExportDataStatistics: Conversion[Schema.ExportDataStatistics, Option[Schema.ExportDataStatistics]] = (fun: Schema.ExportDataStatistics) => Option(fun)
		given putListSchemaExternalServiceCost: Conversion[List[Schema.ExternalServiceCost], Option[List[Schema.ExternalServiceCost]]] = (fun: List[Schema.ExternalServiceCost]) => Option(fun)
		given putSchemaLoadQueryStatistics: Conversion[Schema.LoadQueryStatistics, Option[Schema.LoadQueryStatistics]] = (fun: Schema.LoadQueryStatistics) => Option(fun)
		given putSchemaMaterializedViewStatistics: Conversion[Schema.MaterializedViewStatistics, Option[Schema.MaterializedViewStatistics]] = (fun: Schema.MaterializedViewStatistics) => Option(fun)
		given putSchemaMetadataCacheStatistics: Conversion[Schema.MetadataCacheStatistics, Option[Schema.MetadataCacheStatistics]] = (fun: Schema.MetadataCacheStatistics) => Option(fun)
		given putSchemaMlStatistics: Conversion[Schema.MlStatistics, Option[Schema.MlStatistics]] = (fun: Schema.MlStatistics) => Option(fun)
		given putSchemaBigQueryModelTraining: Conversion[Schema.BigQueryModelTraining, Option[Schema.BigQueryModelTraining]] = (fun: Schema.BigQueryModelTraining) => Option(fun)
		given putSchemaPerformanceInsights: Conversion[Schema.PerformanceInsights, Option[Schema.PerformanceInsights]] = (fun: Schema.PerformanceInsights) => Option(fun)
		given putSchemaQueryInfo: Conversion[Schema.QueryInfo, Option[Schema.QueryInfo]] = (fun: Schema.QueryInfo) => Option(fun)
		given putListSchemaExplainQueryStage: Conversion[List[Schema.ExplainQueryStage], Option[List[Schema.ExplainQueryStage]]] = (fun: List[Schema.ExplainQueryStage]) => Option(fun)
		given putListSchemaRoutineReference: Conversion[List[Schema.RoutineReference], Option[List[Schema.RoutineReference]]] = (fun: List[Schema.RoutineReference]) => Option(fun)
		given putListSchemaJobStatistics2ReservationUsageItem: Conversion[List[Schema.JobStatistics2.ReservationUsageItem], Option[List[Schema.JobStatistics2.ReservationUsageItem]]] = (fun: List[Schema.JobStatistics2.ReservationUsageItem]) => Option(fun)
		given putSchemaSearchStatistics: Conversion[Schema.SearchStatistics, Option[Schema.SearchStatistics]] = (fun: Schema.SearchStatistics) => Option(fun)
		given putSchemaSparkStatistics: Conversion[Schema.SparkStatistics, Option[Schema.SparkStatistics]] = (fun: Schema.SparkStatistics) => Option(fun)
		given putListSchemaQueryTimelineSample: Conversion[List[Schema.QueryTimelineSample], Option[List[Schema.QueryTimelineSample]]] = (fun: List[Schema.QueryTimelineSample]) => Option(fun)
		given putSchemaVectorSearchStatistics: Conversion[Schema.VectorSearchStatistics, Option[Schema.VectorSearchStatistics]] = (fun: Schema.VectorSearchStatistics) => Option(fun)
		given putSchemaErrorProto: Conversion[Schema.ErrorProto, Option[Schema.ErrorProto]] = (fun: Schema.ErrorProto) => Option(fun)
		given putSchemaJoinRestrictionPolicyJoinConditionEnum: Conversion[Schema.JoinRestrictionPolicy.JoinConditionEnum, Option[Schema.JoinRestrictionPolicy.JoinConditionEnum]] = (fun: Schema.JoinRestrictionPolicy.JoinConditionEnum) => Option(fun)
		given putSchemaLinkedDatasetMetadataLinkStateEnum: Conversion[Schema.LinkedDatasetMetadata.LinkStateEnum, Option[Schema.LinkedDatasetMetadata.LinkStateEnum]] = (fun: Schema.LinkedDatasetMetadata.LinkStateEnum) => Option(fun)
		given putListSchemaModel: Conversion[List[Schema.Model], Option[List[Schema.Model]]] = (fun: List[Schema.Model]) => Option(fun)
		given putListSchemaRoutine: Conversion[List[Schema.Routine], Option[List[Schema.Routine]]] = (fun: List[Schema.Routine]) => Option(fun)
		given putListSchemaRowAccessPolicy: Conversion[List[Schema.RowAccessPolicy], Option[List[Schema.RowAccessPolicy]]] = (fun: List[Schema.RowAccessPolicy]) => Option(fun)
		given putSchemaMaterializedViewRejectedReasonEnum: Conversion[Schema.MaterializedView.RejectedReasonEnum, Option[Schema.MaterializedView.RejectedReasonEnum]] = (fun: Schema.MaterializedView.RejectedReasonEnum) => Option(fun)
		given putListSchemaMaterializedView: Conversion[List[Schema.MaterializedView], Option[List[Schema.MaterializedView]]] = (fun: List[Schema.MaterializedView]) => Option(fun)
		given putListSchemaTableMetadataCacheUsage: Conversion[List[Schema.TableMetadataCacheUsage], Option[List[Schema.TableMetadataCacheUsage]]] = (fun: List[Schema.TableMetadataCacheUsage]) => Option(fun)
		given putListSchemaHparamTuningTrial: Conversion[List[Schema.HparamTuningTrial], Option[List[Schema.HparamTuningTrial]]] = (fun: List[Schema.HparamTuningTrial]) => Option(fun)
		given putListSchemaIterationResult: Conversion[List[Schema.IterationResult], Option[List[Schema.IterationResult]]] = (fun: List[Schema.IterationResult]) => Option(fun)
		given putSchemaMlStatisticsModelTypeEnum: Conversion[Schema.MlStatistics.ModelTypeEnum, Option[Schema.MlStatistics.ModelTypeEnum]] = (fun: Schema.MlStatistics.ModelTypeEnum) => Option(fun)
		given putSchemaMlStatisticsTrainingTypeEnum: Conversion[Schema.MlStatistics.TrainingTypeEnum, Option[Schema.MlStatistics.TrainingTypeEnum]] = (fun: Schema.MlStatistics.TrainingTypeEnum) => Option(fun)
		given putListSchemaStandardSqlField: Conversion[List[Schema.StandardSqlField], Option[List[Schema.StandardSqlField]]] = (fun: List[Schema.StandardSqlField]) => Option(fun)
		given putSchemaHparamSearchSpaces: Conversion[Schema.HparamSearchSpaces, Option[Schema.HparamSearchSpaces]] = (fun: Schema.HparamSearchSpaces) => Option(fun)
		given putSchemaModelModelTypeEnum: Conversion[Schema.Model.ModelTypeEnum, Option[Schema.Model.ModelTypeEnum]] = (fun: Schema.Model.ModelTypeEnum) => Option(fun)
		given putSchemaRemoteModelInfo: Conversion[Schema.RemoteModelInfo, Option[Schema.RemoteModelInfo]] = (fun: Schema.RemoteModelInfo) => Option(fun)
		given putListSchemaTrainingRun: Conversion[List[Schema.TrainingRun], Option[List[Schema.TrainingRun]]] = (fun: List[Schema.TrainingRun]) => Option(fun)
		given putListSchemaTransformColumn: Conversion[List[Schema.TransformColumn], Option[List[Schema.TransformColumn]]] = (fun: List[Schema.TransformColumn]) => Option(fun)
		given putSchemaModelDefinitionModelOptionsItem: Conversion[Schema.ModelDefinition.ModelOptionsItem, Option[Schema.ModelDefinition.ModelOptionsItem]] = (fun: Schema.ModelDefinition.ModelOptionsItem) => Option(fun)
		given putListSchemaBqmlTrainingRun: Conversion[List[Schema.BqmlTrainingRun], Option[List[Schema.BqmlTrainingRun]]] = (fun: List[Schema.BqmlTrainingRun]) => Option(fun)
		given putListSchemaConfusionMatrix: Conversion[List[Schema.ConfusionMatrix], Option[List[Schema.ConfusionMatrix]]] = (fun: List[Schema.ConfusionMatrix]) => Option(fun)
		given putSchemaParquetOptionsMapTargetTypeEnum: Conversion[Schema.ParquetOptions.MapTargetTypeEnum, Option[Schema.ParquetOptions.MapTargetTypeEnum]] = (fun: Schema.ParquetOptions.MapTargetTypeEnum) => Option(fun)
		given putListSchemaSkewSource: Conversion[List[Schema.SkewSource], Option[List[Schema.SkewSource]]] = (fun: List[Schema.SkewSource]) => Option(fun)
		given putListSchemaPartitionedColumn: Conversion[List[Schema.PartitionedColumn], Option[List[Schema.PartitionedColumn]]] = (fun: List[Schema.PartitionedColumn]) => Option(fun)
		given putListSchemaStagePerformanceChangeInsight: Conversion[List[Schema.StagePerformanceChangeInsight], Option[List[Schema.StagePerformanceChangeInsight]]] = (fun: List[Schema.StagePerformanceChangeInsight]) => Option(fun)
		given putListSchemaStagePerformanceStandaloneInsight: Conversion[List[Schema.StagePerformanceStandaloneInsight], Option[List[Schema.StagePerformanceStandaloneInsight]]] = (fun: List[Schema.StagePerformanceStandaloneInsight]) => Option(fun)
		given putListSchemaAuditConfig: Conversion[List[Schema.AuditConfig], Option[List[Schema.AuditConfig]]] = (fun: List[Schema.AuditConfig]) => Option(fun)
		given putListSchemaBinding: Conversion[List[Schema.Binding], Option[List[Schema.Binding]]] = (fun: List[Schema.Binding]) => Option(fun)
		given putSchemaAggregationThresholdPolicy: Conversion[Schema.AggregationThresholdPolicy, Option[Schema.AggregationThresholdPolicy]] = (fun: Schema.AggregationThresholdPolicy) => Option(fun)
		given putSchemaDifferentialPrivacyPolicy: Conversion[Schema.DifferentialPrivacyPolicy, Option[Schema.DifferentialPrivacyPolicy]] = (fun: Schema.DifferentialPrivacyPolicy) => Option(fun)
		given putSchemaJoinRestrictionPolicy: Conversion[Schema.JoinRestrictionPolicy, Option[Schema.JoinRestrictionPolicy]] = (fun: Schema.JoinRestrictionPolicy) => Option(fun)
		given putListSchemaProjectListProjectsItem: Conversion[List[Schema.ProjectList.ProjectsItem], Option[List[Schema.ProjectList.ProjectsItem]]] = (fun: List[Schema.ProjectList.ProjectsItem]) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putSchemaQueryParameterType: Conversion[Schema.QueryParameterType, Option[Schema.QueryParameterType]] = (fun: Schema.QueryParameterType) => Option(fun)
		given putSchemaQueryParameterValue: Conversion[Schema.QueryParameterValue, Option[Schema.QueryParameterValue]] = (fun: Schema.QueryParameterValue) => Option(fun)
		given putListSchemaQueryParameterTypeStructTypesItem: Conversion[List[Schema.QueryParameterType.StructTypesItem], Option[List[Schema.QueryParameterType.StructTypesItem]]] = (fun: List[Schema.QueryParameterType.StructTypesItem]) => Option(fun)
		given putListSchemaQueryParameterValue: Conversion[List[Schema.QueryParameterValue], Option[List[Schema.QueryParameterValue]]] = (fun: List[Schema.QueryParameterValue]) => Option(fun)
		given putSchemaRangeValue: Conversion[Schema.RangeValue, Option[Schema.RangeValue]] = (fun: Schema.RangeValue) => Option(fun)
		given putMapStringSchemaQueryParameterValue: Conversion[Map[String, Schema.QueryParameterValue], Option[Map[String, Schema.QueryParameterValue]]] = (fun: Map[String, Schema.QueryParameterValue]) => Option(fun)
		given putSchemaDataFormatOptions: Conversion[Schema.DataFormatOptions, Option[Schema.DataFormatOptions]] = (fun: Schema.DataFormatOptions) => Option(fun)
		given putSchemaQueryRequestJobCreationModeEnum: Conversion[Schema.QueryRequest.JobCreationModeEnum, Option[Schema.QueryRequest.JobCreationModeEnum]] = (fun: Schema.QueryRequest.JobCreationModeEnum) => Option(fun)
		given putSchemaRangePartitioningRangeItem: Conversion[Schema.RangePartitioning.RangeItem, Option[Schema.RangePartitioning.RangeItem]] = (fun: Schema.RangePartitioning.RangeItem) => Option(fun)
		given putSchemaRemoteModelInfoRemoteServiceTypeEnum: Conversion[Schema.RemoteModelInfo.RemoteServiceTypeEnum, Option[Schema.RemoteModelInfo.RemoteServiceTypeEnum]] = (fun: Schema.RemoteModelInfo.RemoteServiceTypeEnum) => Option(fun)
		given putSchemaRestrictionConfigTypeEnum: Conversion[Schema.RestrictionConfig.TypeEnum, Option[Schema.RestrictionConfig.TypeEnum]] = (fun: Schema.RestrictionConfig.TypeEnum) => Option(fun)
		given putListSchemaArgument: Conversion[List[Schema.Argument], Option[List[Schema.Argument]]] = (fun: List[Schema.Argument]) => Option(fun)
		given putSchemaRoutineDataGovernanceTypeEnum: Conversion[Schema.Routine.DataGovernanceTypeEnum, Option[Schema.Routine.DataGovernanceTypeEnum]] = (fun: Schema.Routine.DataGovernanceTypeEnum) => Option(fun)
		given putSchemaRoutineDeterminismLevelEnum: Conversion[Schema.Routine.DeterminismLevelEnum, Option[Schema.Routine.DeterminismLevelEnum]] = (fun: Schema.Routine.DeterminismLevelEnum) => Option(fun)
		given putSchemaRoutineLanguageEnum: Conversion[Schema.Routine.LanguageEnum, Option[Schema.Routine.LanguageEnum]] = (fun: Schema.Routine.LanguageEnum) => Option(fun)
		given putSchemaRemoteFunctionOptions: Conversion[Schema.RemoteFunctionOptions, Option[Schema.RemoteFunctionOptions]] = (fun: Schema.RemoteFunctionOptions) => Option(fun)
		given putSchemaStandardSqlTableType: Conversion[Schema.StandardSqlTableType, Option[Schema.StandardSqlTableType]] = (fun: Schema.StandardSqlTableType) => Option(fun)
		given putSchemaRoutineRoutineTypeEnum: Conversion[Schema.Routine.RoutineTypeEnum, Option[Schema.Routine.RoutineTypeEnum]] = (fun: Schema.Routine.RoutineTypeEnum) => Option(fun)
		given putSchemaRoutineSecurityModeEnum: Conversion[Schema.Routine.SecurityModeEnum, Option[Schema.Routine.SecurityModeEnum]] = (fun: Schema.Routine.SecurityModeEnum) => Option(fun)
		given putSchemaSparkOptions: Conversion[Schema.SparkOptions, Option[Schema.SparkOptions]] = (fun: Schema.SparkOptions) => Option(fun)
		given putListSchemaEntry: Conversion[List[Schema.Entry], Option[List[Schema.Entry]]] = (fun: List[Schema.Entry]) => Option(fun)
		given putSchemaScriptOptionsKeyResultStatementEnum: Conversion[Schema.ScriptOptions.KeyResultStatementEnum, Option[Schema.ScriptOptions.KeyResultStatementEnum]] = (fun: Schema.ScriptOptions.KeyResultStatementEnum) => Option(fun)
		given putSchemaScriptStatisticsEvaluationKindEnum: Conversion[Schema.ScriptStatistics.EvaluationKindEnum, Option[Schema.ScriptStatistics.EvaluationKindEnum]] = (fun: Schema.ScriptStatistics.EvaluationKindEnum) => Option(fun)
		given putListSchemaScriptStackFrame: Conversion[List[Schema.ScriptStackFrame], Option[List[Schema.ScriptStackFrame]]] = (fun: List[Schema.ScriptStackFrame]) => Option(fun)
		given putListSchemaIndexUnusedReason: Conversion[List[Schema.IndexUnusedReason], Option[List[Schema.IndexUnusedReason]]] = (fun: List[Schema.IndexUnusedReason]) => Option(fun)
		given putSchemaSearchStatisticsIndexUsageModeEnum: Conversion[Schema.SearchStatistics.IndexUsageModeEnum, Option[Schema.SearchStatistics.IndexUsageModeEnum]] = (fun: Schema.SearchStatistics.IndexUsageModeEnum) => Option(fun)
		given putSchemaPolicy: Conversion[Schema.Policy, Option[Schema.Policy]] = (fun: Schema.Policy) => Option(fun)
		given putSchemaSparkLoggingInfo: Conversion[Schema.SparkLoggingInfo, Option[Schema.SparkLoggingInfo]] = (fun: Schema.SparkLoggingInfo) => Option(fun)
		given putSchemaInputDataChange: Conversion[Schema.InputDataChange, Option[Schema.InputDataChange]] = (fun: Schema.InputDataChange) => Option(fun)
		given putListSchemaHighCardinalityJoin: Conversion[List[Schema.HighCardinalityJoin], Option[List[Schema.HighCardinalityJoin]]] = (fun: List[Schema.HighCardinalityJoin]) => Option(fun)
		given putSchemaPartitionSkew: Conversion[Schema.PartitionSkew, Option[Schema.PartitionSkew]] = (fun: Schema.PartitionSkew) => Option(fun)
		given putSchemaStandardSqlStructType: Conversion[Schema.StandardSqlStructType, Option[Schema.StandardSqlStructType]] = (fun: Schema.StandardSqlStructType) => Option(fun)
		given putSchemaStandardSqlDataTypeTypeKindEnum: Conversion[Schema.StandardSqlDataType.TypeKindEnum, Option[Schema.StandardSqlDataType.TypeKindEnum]] = (fun: Schema.StandardSqlDataType.TypeKindEnum) => Option(fun)
		given putSchemaSerDeInfo: Conversion[Schema.SerDeInfo, Option[Schema.SerDeInfo]] = (fun: Schema.SerDeInfo) => Option(fun)
		given putMapStringSchemaStandardSqlDataType: Conversion[Map[String, Schema.StandardSqlDataType], Option[Map[String, Schema.StandardSqlDataType]]] = (fun: Map[String, Schema.StandardSqlDataType]) => Option(fun)
		given putSchemaBigLakeConfiguration: Conversion[Schema.BigLakeConfiguration, Option[Schema.BigLakeConfiguration]] = (fun: Schema.BigLakeConfiguration) => Option(fun)
		given putSchemaCloneDefinition: Conversion[Schema.CloneDefinition, Option[Schema.CloneDefinition]] = (fun: Schema.CloneDefinition) => Option(fun)
		given putSchemaTableDefaultRoundingModeEnum: Conversion[Schema.Table.DefaultRoundingModeEnum, Option[Schema.Table.DefaultRoundingModeEnum]] = (fun: Schema.Table.DefaultRoundingModeEnum) => Option(fun)
		given putSchemaExternalCatalogTableOptions: Conversion[Schema.ExternalCatalogTableOptions, Option[Schema.ExternalCatalogTableOptions]] = (fun: Schema.ExternalCatalogTableOptions) => Option(fun)
		given putSchemaExternalDataConfiguration: Conversion[Schema.ExternalDataConfiguration, Option[Schema.ExternalDataConfiguration]] = (fun: Schema.ExternalDataConfiguration) => Option(fun)
		given putSchemaMaterializedViewDefinition: Conversion[Schema.MaterializedViewDefinition, Option[Schema.MaterializedViewDefinition]] = (fun: Schema.MaterializedViewDefinition) => Option(fun)
		given putSchemaMaterializedViewStatus: Conversion[Schema.MaterializedViewStatus, Option[Schema.MaterializedViewStatus]] = (fun: Schema.MaterializedViewStatus) => Option(fun)
		given putSchemaModelDefinition: Conversion[Schema.ModelDefinition, Option[Schema.ModelDefinition]] = (fun: Schema.ModelDefinition) => Option(fun)
		given putSchemaPartitioningDefinition: Conversion[Schema.PartitioningDefinition, Option[Schema.PartitioningDefinition]] = (fun: Schema.PartitioningDefinition) => Option(fun)
		given putSchemaSnapshotDefinition: Conversion[Schema.SnapshotDefinition, Option[Schema.SnapshotDefinition]] = (fun: Schema.SnapshotDefinition) => Option(fun)
		given putSchemaStreamingbuffer: Conversion[Schema.Streamingbuffer, Option[Schema.Streamingbuffer]] = (fun: Schema.Streamingbuffer) => Option(fun)
		given putSchemaTableConstraints: Conversion[Schema.TableConstraints, Option[Schema.TableConstraints]] = (fun: Schema.TableConstraints) => Option(fun)
		given putSchemaTableReplicationInfo: Conversion[Schema.TableReplicationInfo, Option[Schema.TableReplicationInfo]] = (fun: Schema.TableReplicationInfo) => Option(fun)
		given putSchemaViewDefinition: Conversion[Schema.ViewDefinition, Option[Schema.ViewDefinition]] = (fun: Schema.ViewDefinition) => Option(fun)
		given putJsValue: Conversion[JsValue, Option[JsValue]] = (fun: JsValue) => Option(fun)
		given putListSchemaTableConstraintsForeignKeysItem: Conversion[List[Schema.TableConstraints.ForeignKeysItem], Option[List[Schema.TableConstraints.ForeignKeysItem]]] = (fun: List[Schema.TableConstraints.ForeignKeysItem]) => Option(fun)
		given putSchemaTableConstraintsPrimaryKeyItem: Conversion[Schema.TableConstraints.PrimaryKeyItem, Option[Schema.TableConstraints.PrimaryKeyItem]] = (fun: Schema.TableConstraints.PrimaryKeyItem) => Option(fun)
		given putListSchemaTableDataInsertAllRequestRowsItem: Conversion[List[Schema.TableDataInsertAllRequest.RowsItem], Option[List[Schema.TableDataInsertAllRequest.RowsItem]]] = (fun: List[Schema.TableDataInsertAllRequest.RowsItem]) => Option(fun)
		given putListSchemaTableDataInsertAllResponseInsertErrorsItem: Conversion[List[Schema.TableDataInsertAllResponse.InsertErrorsItem], Option[List[Schema.TableDataInsertAllResponse.InsertErrorsItem]]] = (fun: List[Schema.TableDataInsertAllResponse.InsertErrorsItem]) => Option(fun)
		given putSchemaTableFieldSchemaCategoriesItem: Conversion[Schema.TableFieldSchema.CategoriesItem, Option[Schema.TableFieldSchema.CategoriesItem]] = (fun: Schema.TableFieldSchema.CategoriesItem) => Option(fun)
		given putListSchemaDataPolicyOption: Conversion[List[Schema.DataPolicyOption], Option[List[Schema.DataPolicyOption]]] = (fun: List[Schema.DataPolicyOption]) => Option(fun)
		given putListSchemaTableFieldSchema: Conversion[List[Schema.TableFieldSchema], Option[List[Schema.TableFieldSchema]]] = (fun: List[Schema.TableFieldSchema]) => Option(fun)
		given putSchemaTableFieldSchemaPolicyTagsItem: Conversion[Schema.TableFieldSchema.PolicyTagsItem, Option[Schema.TableFieldSchema.PolicyTagsItem]] = (fun: Schema.TableFieldSchema.PolicyTagsItem) => Option(fun)
		given putSchemaTableFieldSchemaRangeElementTypeItem: Conversion[Schema.TableFieldSchema.RangeElementTypeItem, Option[Schema.TableFieldSchema.RangeElementTypeItem]] = (fun: Schema.TableFieldSchema.RangeElementTypeItem) => Option(fun)
		given putSchemaTableFieldSchemaRoundingModeEnum: Conversion[Schema.TableFieldSchema.RoundingModeEnum, Option[Schema.TableFieldSchema.RoundingModeEnum]] = (fun: Schema.TableFieldSchema.RoundingModeEnum) => Option(fun)
		given putListSchemaTableListTablesItem: Conversion[List[Schema.TableList.TablesItem], Option[List[Schema.TableList.TablesItem]]] = (fun: List[Schema.TableList.TablesItem]) => Option(fun)
		given putSchemaTableMetadataCacheUsageUnusedReasonEnum: Conversion[Schema.TableMetadataCacheUsage.UnusedReasonEnum, Option[Schema.TableMetadataCacheUsage.UnusedReasonEnum]] = (fun: Schema.TableMetadataCacheUsage.UnusedReasonEnum) => Option(fun)
		given putSchemaTableReplicationInfoReplicationStatusEnum: Conversion[Schema.TableReplicationInfo.ReplicationStatusEnum, Option[Schema.TableReplicationInfo.ReplicationStatusEnum]] = (fun: Schema.TableReplicationInfo.ReplicationStatusEnum) => Option(fun)
		given putListSchemaTableCell: Conversion[List[Schema.TableCell], Option[List[Schema.TableCell]]] = (fun: List[Schema.TableCell]) => Option(fun)
		given putSchemaForeignTypeInfo: Conversion[Schema.ForeignTypeInfo, Option[Schema.ForeignTypeInfo]] = (fun: Schema.ForeignTypeInfo) => Option(fun)
		given putSchemaTrainingOptionsBoosterTypeEnum: Conversion[Schema.TrainingOptions.BoosterTypeEnum, Option[Schema.TrainingOptions.BoosterTypeEnum]] = (fun: Schema.TrainingOptions.BoosterTypeEnum) => Option(fun)
		given putSchemaTrainingOptionsCategoryEncodingMethodEnum: Conversion[Schema.TrainingOptions.CategoryEncodingMethodEnum, Option[Schema.TrainingOptions.CategoryEncodingMethodEnum]] = (fun: Schema.TrainingOptions.CategoryEncodingMethodEnum) => Option(fun)
		given putSchemaTrainingOptionsColorSpaceEnum: Conversion[Schema.TrainingOptions.ColorSpaceEnum, Option[Schema.TrainingOptions.ColorSpaceEnum]] = (fun: Schema.TrainingOptions.ColorSpaceEnum) => Option(fun)
		given putSchemaTrainingOptionsDartNormalizeTypeEnum: Conversion[Schema.TrainingOptions.DartNormalizeTypeEnum, Option[Schema.TrainingOptions.DartNormalizeTypeEnum]] = (fun: Schema.TrainingOptions.DartNormalizeTypeEnum) => Option(fun)
		given putSchemaTrainingOptionsDataFrequencyEnum: Conversion[Schema.TrainingOptions.DataFrequencyEnum, Option[Schema.TrainingOptions.DataFrequencyEnum]] = (fun: Schema.TrainingOptions.DataFrequencyEnum) => Option(fun)
		given putSchemaTrainingOptionsDataSplitMethodEnum: Conversion[Schema.TrainingOptions.DataSplitMethodEnum, Option[Schema.TrainingOptions.DataSplitMethodEnum]] = (fun: Schema.TrainingOptions.DataSplitMethodEnum) => Option(fun)
		given putSchemaTrainingOptionsDistanceTypeEnum: Conversion[Schema.TrainingOptions.DistanceTypeEnum, Option[Schema.TrainingOptions.DistanceTypeEnum]] = (fun: Schema.TrainingOptions.DistanceTypeEnum) => Option(fun)
		given putSchemaTrainingOptionsFeedbackTypeEnum: Conversion[Schema.TrainingOptions.FeedbackTypeEnum, Option[Schema.TrainingOptions.FeedbackTypeEnum]] = (fun: Schema.TrainingOptions.FeedbackTypeEnum) => Option(fun)
		given putSchemaTrainingOptionsHolidayRegionEnum: Conversion[Schema.TrainingOptions.HolidayRegionEnum, Option[Schema.TrainingOptions.HolidayRegionEnum]] = (fun: Schema.TrainingOptions.HolidayRegionEnum) => Option(fun)
		given putListSchemaTrainingOptionsHolidayRegionsEnum: Conversion[List[Schema.TrainingOptions.HolidayRegionsEnum], Option[List[Schema.TrainingOptions.HolidayRegionsEnum]]] = (fun: List[Schema.TrainingOptions.HolidayRegionsEnum]) => Option(fun)
		given putListSchemaTrainingOptionsHparamTuningObjectivesEnum: Conversion[List[Schema.TrainingOptions.HparamTuningObjectivesEnum], Option[List[Schema.TrainingOptions.HparamTuningObjectivesEnum]]] = (fun: List[Schema.TrainingOptions.HparamTuningObjectivesEnum]) => Option(fun)
		given putSchemaTrainingOptionsKmeansInitializationMethodEnum: Conversion[Schema.TrainingOptions.KmeansInitializationMethodEnum, Option[Schema.TrainingOptions.KmeansInitializationMethodEnum]] = (fun: Schema.TrainingOptions.KmeansInitializationMethodEnum) => Option(fun)
		given putMapStringBigDecimal: Conversion[Map[String, BigDecimal], Option[Map[String, BigDecimal]]] = (fun: Map[String, BigDecimal]) => Option(fun)
		given putSchemaTrainingOptionsLearnRateStrategyEnum: Conversion[Schema.TrainingOptions.LearnRateStrategyEnum, Option[Schema.TrainingOptions.LearnRateStrategyEnum]] = (fun: Schema.TrainingOptions.LearnRateStrategyEnum) => Option(fun)
		given putSchemaTrainingOptionsLossTypeEnum: Conversion[Schema.TrainingOptions.LossTypeEnum, Option[Schema.TrainingOptions.LossTypeEnum]] = (fun: Schema.TrainingOptions.LossTypeEnum) => Option(fun)
		given putSchemaTrainingOptionsModelRegistryEnum: Conversion[Schema.TrainingOptions.ModelRegistryEnum, Option[Schema.TrainingOptions.ModelRegistryEnum]] = (fun: Schema.TrainingOptions.ModelRegistryEnum) => Option(fun)
		given putSchemaTrainingOptionsOptimizationStrategyEnum: Conversion[Schema.TrainingOptions.OptimizationStrategyEnum, Option[Schema.TrainingOptions.OptimizationStrategyEnum]] = (fun: Schema.TrainingOptions.OptimizationStrategyEnum) => Option(fun)
		given putSchemaTrainingOptionsPcaSolverEnum: Conversion[Schema.TrainingOptions.PcaSolverEnum, Option[Schema.TrainingOptions.PcaSolverEnum]] = (fun: Schema.TrainingOptions.PcaSolverEnum) => Option(fun)
		given putSchemaTrainingOptionsTreeMethodEnum: Conversion[Schema.TrainingOptions.TreeMethodEnum, Option[Schema.TrainingOptions.TreeMethodEnum]] = (fun: Schema.TrainingOptions.TreeMethodEnum) => Option(fun)
		given putListSchemaGlobalExplanation: Conversion[List[Schema.GlobalExplanation], Option[List[Schema.GlobalExplanation]]] = (fun: List[Schema.GlobalExplanation]) => Option(fun)
		given putSchemaDataSplitResult: Conversion[Schema.DataSplitResult, Option[Schema.DataSplitResult]] = (fun: Schema.DataSplitResult) => Option(fun)
		given putSchemaGlobalExplanation: Conversion[Schema.GlobalExplanation, Option[Schema.GlobalExplanation]] = (fun: Schema.GlobalExplanation) => Option(fun)
		given putSchemaVectorSearchStatisticsIndexUsageModeEnum: Conversion[Schema.VectorSearchStatistics.IndexUsageModeEnum, Option[Schema.VectorSearchStatistics.IndexUsageModeEnum]] = (fun: Schema.VectorSearchStatistics.IndexUsageModeEnum) => Option(fun)
		given putListSchemaForeignViewDefinition: Conversion[List[Schema.ForeignViewDefinition], Option[List[Schema.ForeignViewDefinition]]] = (fun: List[Schema.ForeignViewDefinition]) => Option(fun)
		given putSchemaPrivacyPolicy: Conversion[Schema.PrivacyPolicy, Option[Schema.PrivacyPolicy]] = (fun: Schema.PrivacyPolicy) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
