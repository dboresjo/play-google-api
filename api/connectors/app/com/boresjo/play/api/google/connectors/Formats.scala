package com.boresjo.play.api.google.connectors

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtExecuteActionRequest: Format[Schema.ExecuteActionRequest] = Json.format[Schema.ExecuteActionRequest]
	given fmtExecuteActionResponse: Format[Schema.ExecuteActionResponse] = Json.format[Schema.ExecuteActionResponse]
	given fmtListActionsResponse: Format[Schema.ListActionsResponse] = Json.format[Schema.ListActionsResponse]
	given fmtAction: Format[Schema.Action] = Json.format[Schema.Action]
	given fmtInputParameter: Format[Schema.InputParameter] = Json.format[Schema.InputParameter]
	given fmtResultMetadata: Format[Schema.ResultMetadata] = Json.format[Schema.ResultMetadata]
	given fmtJsonSchema: Format[Schema.JsonSchema] = Json.format[Schema.JsonSchema]
	given fmtInputParameterDataTypeEnum: Format[Schema.InputParameter.DataTypeEnum] = JsonEnumFormat[Schema.InputParameter.DataTypeEnum]
	given fmtJsonSchemaJdbcTypeEnum: Format[Schema.JsonSchema.JdbcTypeEnum] = JsonEnumFormat[Schema.JsonSchema.JdbcTypeEnum]
	given fmtResultMetadataDataTypeEnum: Format[Schema.ResultMetadata.DataTypeEnum] = JsonEnumFormat[Schema.ResultMetadata.DataTypeEnum]
	given fmtCheckStatusResponse: Format[Schema.CheckStatusResponse] = Json.format[Schema.CheckStatusResponse]
	given fmtCheckStatusResponseStateEnum: Format[Schema.CheckStatusResponse.StateEnum] = JsonEnumFormat[Schema.CheckStatusResponse.StateEnum]
	given fmtCheckReadinessResponse: Format[Schema.CheckReadinessResponse] = Json.format[Schema.CheckReadinessResponse]
	given fmtExchangeAuthCodeRequest: Format[Schema.ExchangeAuthCodeRequest] = Json.format[Schema.ExchangeAuthCodeRequest]
	given fmtAuthCodeData: Format[Schema.AuthCodeData] = Json.format[Schema.AuthCodeData]
	given fmtExchangeAuthCodeResponse: Format[Schema.ExchangeAuthCodeResponse] = Json.format[Schema.ExchangeAuthCodeResponse]
	given fmtAccessCredentials: Format[Schema.AccessCredentials] = Json.format[Schema.AccessCredentials]
	given fmtRefreshAccessTokenRequest: Format[Schema.RefreshAccessTokenRequest] = Json.format[Schema.RefreshAccessTokenRequest]
	given fmtRefreshAccessTokenResponse: Format[Schema.RefreshAccessTokenResponse] = Json.format[Schema.RefreshAccessTokenResponse]
	given fmtEntityType: Format[Schema.EntityType] = Json.format[Schema.EntityType]
	given fmtField: Format[Schema.Field] = Json.format[Schema.Field]
	given fmtEntityTypeOperationsEnum: Format[Schema.EntityType.OperationsEnum] = JsonEnumFormat[Schema.EntityType.OperationsEnum]
	given fmtFieldDataTypeEnum: Format[Schema.Field.DataTypeEnum] = JsonEnumFormat[Schema.Field.DataTypeEnum]
	given fmtReference: Format[Schema.Reference] = Json.format[Schema.Reference]
	given fmtListEntityTypesResponse: Format[Schema.ListEntityTypesResponse] = Json.format[Schema.ListEntityTypesResponse]
	given fmtListEntitiesResponse: Format[Schema.ListEntitiesResponse] = Json.format[Schema.ListEntitiesResponse]
	given fmtEntity: Format[Schema.Entity] = Json.format[Schema.Entity]
	given fmtUpdateEntitiesWithConditionsResponse: Format[Schema.UpdateEntitiesWithConditionsResponse] = Json.format[Schema.UpdateEntitiesWithConditionsResponse]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtExecuteSqlQueryRequest: Format[Schema.ExecuteSqlQueryRequest] = Json.format[Schema.ExecuteSqlQueryRequest]
	given fmtQuery: Format[Schema.Query] = Json.format[Schema.Query]
	given fmtQueryParameter: Format[Schema.QueryParameter] = Json.format[Schema.QueryParameter]
	given fmtQueryParameterDataTypeEnum: Format[Schema.QueryParameter.DataTypeEnum] = JsonEnumFormat[Schema.QueryParameter.DataTypeEnum]
	given fmtExecuteSqlQueryResponse: Format[Schema.ExecuteSqlQueryResponse] = Json.format[Schema.ExecuteSqlQueryResponse]
	given fmtInstance: Format[Schema.Instance] = Json.format[Schema.Instance]
	given fmtInstanceStateEnum: Format[Schema.Instance.StateEnum] = JsonEnumFormat[Schema.Instance.StateEnum]
	given fmtProvisionedResource: Format[Schema.ProvisionedResource] = Json.format[Schema.ProvisionedResource]
	given fmtSloMetadata: Format[Schema.SloMetadata] = Json.format[Schema.SloMetadata]
	given fmtMaintenanceSchedule: Format[Schema.MaintenanceSchedule] = Json.format[Schema.MaintenanceSchedule]
	given fmtMaintenanceSettings: Format[Schema.MaintenanceSettings] = Json.format[Schema.MaintenanceSettings]
	given fmtNotificationParameter: Format[Schema.NotificationParameter] = Json.format[Schema.NotificationParameter]
	given fmtNodeSloMetadata: Format[Schema.NodeSloMetadata] = Json.format[Schema.NodeSloMetadata]
	given fmtPerSliSloEligibility: Format[Schema.PerSliSloEligibility] = Json.format[Schema.PerSliSloEligibility]
	given fmtSloEligibility: Format[Schema.SloEligibility] = Json.format[Schema.SloEligibility]
	given fmtMaintenancePolicy: Format[Schema.MaintenancePolicy] = Json.format[Schema.MaintenancePolicy]
	given fmtMaintenancePolicyStateEnum: Format[Schema.MaintenancePolicy.StateEnum] = JsonEnumFormat[Schema.MaintenancePolicy.StateEnum]
	given fmtUpdatePolicy: Format[Schema.UpdatePolicy] = Json.format[Schema.UpdatePolicy]
	given fmtMaintenanceWindow: Format[Schema.MaintenanceWindow] = Json.format[Schema.MaintenanceWindow]
	given fmtUpdatePolicyChannelEnum: Format[Schema.UpdatePolicy.ChannelEnum] = JsonEnumFormat[Schema.UpdatePolicy.ChannelEnum]
	given fmtDenyMaintenancePeriod: Format[Schema.DenyMaintenancePeriod] = Json.format[Schema.DenyMaintenancePeriod]
	given fmtDailyCycle: Format[Schema.DailyCycle] = Json.format[Schema.DailyCycle]
	given fmtWeeklyCycle: Format[Schema.WeeklyCycle] = Json.format[Schema.WeeklyCycle]
	given fmtTimeOfDay: Format[Schema.TimeOfDay] = Json.format[Schema.TimeOfDay]
	given fmtSchedule: Format[Schema.Schedule] = Json.format[Schema.Schedule]
	given fmtScheduleDayEnum: Format[Schema.Schedule.DayEnum] = JsonEnumFormat[Schema.Schedule.DayEnum]
	given fmtDate: Format[Schema.Date] = Json.format[Schema.Date]
}
