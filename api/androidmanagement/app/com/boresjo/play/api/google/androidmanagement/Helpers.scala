package com.boresjo.play.api.google.androidmanagement

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaOperation: Conversion[List[Schema.Operation], Option[List[Schema.Operation]]] = (fun: List[Schema.Operation]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putListSchemaEnterpriseEnabledNotificationTypesEnum: Conversion[List[Schema.Enterprise.EnabledNotificationTypesEnum], Option[List[Schema.Enterprise.EnabledNotificationTypesEnum]]] = (fun: List[Schema.Enterprise.EnabledNotificationTypesEnum]) => Option(fun)
		given putSchemaExternalData: Conversion[Schema.ExternalData, Option[Schema.ExternalData]] = (fun: Schema.ExternalData) => Option(fun)
		given putListSchemaTermsAndConditions: Conversion[List[Schema.TermsAndConditions], Option[List[Schema.TermsAndConditions]]] = (fun: List[Schema.TermsAndConditions]) => Option(fun)
		given putListSchemaSigninDetail: Conversion[List[Schema.SigninDetail], Option[List[Schema.SigninDetail]]] = (fun: List[Schema.SigninDetail]) => Option(fun)
		given putSchemaContactInfo: Conversion[Schema.ContactInfo, Option[Schema.ContactInfo]] = (fun: Schema.ContactInfo) => Option(fun)
		given putSchemaGoogleAuthenticationSettings: Conversion[Schema.GoogleAuthenticationSettings, Option[Schema.GoogleAuthenticationSettings]] = (fun: Schema.GoogleAuthenticationSettings) => Option(fun)
		given putSchemaUserFacingMessage: Conversion[Schema.UserFacingMessage, Option[Schema.UserFacingMessage]] = (fun: Schema.UserFacingMessage) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putSchemaSigninDetailAllowPersonalUsageEnum: Conversion[Schema.SigninDetail.AllowPersonalUsageEnum, Option[Schema.SigninDetail.AllowPersonalUsageEnum]] = (fun: Schema.SigninDetail.AllowPersonalUsageEnum) => Option(fun)
		given putSchemaSigninDetailDefaultStatusEnum: Conversion[Schema.SigninDetail.DefaultStatusEnum, Option[Schema.SigninDetail.DefaultStatusEnum]] = (fun: Schema.SigninDetail.DefaultStatusEnum) => Option(fun)
		given putSchemaGoogleAuthenticationSettingsGoogleAuthenticationRequiredEnum: Conversion[Schema.GoogleAuthenticationSettings.GoogleAuthenticationRequiredEnum, Option[Schema.GoogleAuthenticationSettings.GoogleAuthenticationRequiredEnum]] = (fun: Schema.GoogleAuthenticationSettings.GoogleAuthenticationRequiredEnum) => Option(fun)
		given putListSchemaEnterprise: Conversion[List[Schema.Enterprise], Option[List[Schema.Enterprise]]] = (fun: List[Schema.Enterprise]) => Option(fun)
		given putSchemaUser: Conversion[Schema.User, Option[Schema.User]] = (fun: Schema.User) => Option(fun)
		given putSchemaEnrollmentTokenAllowPersonalUsageEnum: Conversion[Schema.EnrollmentToken.AllowPersonalUsageEnum, Option[Schema.EnrollmentToken.AllowPersonalUsageEnum]] = (fun: Schema.EnrollmentToken.AllowPersonalUsageEnum) => Option(fun)
		given putListSchemaEnrollmentToken: Conversion[List[Schema.EnrollmentToken], Option[List[Schema.EnrollmentToken]]] = (fun: List[Schema.EnrollmentToken]) => Option(fun)
		given putListSchemaWebTokenPermissionsEnum: Conversion[List[Schema.WebToken.PermissionsEnum], Option[List[Schema.WebToken.PermissionsEnum]]] = (fun: List[Schema.WebToken.PermissionsEnum]) => Option(fun)
		given putListSchemaWebTokenEnabledFeaturesEnum: Conversion[List[Schema.WebToken.EnabledFeaturesEnum], Option[List[Schema.WebToken.EnabledFeaturesEnum]]] = (fun: List[Schema.WebToken.EnabledFeaturesEnum]) => Option(fun)
		given putSchemaDeviceManagementModeEnum: Conversion[Schema.Device.ManagementModeEnum, Option[Schema.Device.ManagementModeEnum]] = (fun: Schema.Device.ManagementModeEnum) => Option(fun)
		given putSchemaDeviceStateEnum: Conversion[Schema.Device.StateEnum, Option[Schema.Device.StateEnum]] = (fun: Schema.Device.StateEnum) => Option(fun)
		given putSchemaDeviceAppliedStateEnum: Conversion[Schema.Device.AppliedStateEnum, Option[Schema.Device.AppliedStateEnum]] = (fun: Schema.Device.AppliedStateEnum) => Option(fun)
		given putListSchemaNonComplianceDetail: Conversion[List[Schema.NonComplianceDetail], Option[List[Schema.NonComplianceDetail]]] = (fun: List[Schema.NonComplianceDetail]) => Option(fun)
		given putSchemaSoftwareInfo: Conversion[Schema.SoftwareInfo, Option[Schema.SoftwareInfo]] = (fun: Schema.SoftwareInfo) => Option(fun)
		given putSchemaHardwareInfo: Conversion[Schema.HardwareInfo, Option[Schema.HardwareInfo]] = (fun: Schema.HardwareInfo) => Option(fun)
		given putListSchemaDisplay: Conversion[List[Schema.Display], Option[List[Schema.Display]]] = (fun: List[Schema.Display]) => Option(fun)
		given putListSchemaApplicationReport: Conversion[List[Schema.ApplicationReport], Option[List[Schema.ApplicationReport]]] = (fun: List[Schema.ApplicationReport]) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putSchemaNetworkInfo: Conversion[Schema.NetworkInfo, Option[Schema.NetworkInfo]] = (fun: Schema.NetworkInfo) => Option(fun)
		given putSchemaMemoryInfo: Conversion[Schema.MemoryInfo, Option[Schema.MemoryInfo]] = (fun: Schema.MemoryInfo) => Option(fun)
		given putListSchemaMemoryEvent: Conversion[List[Schema.MemoryEvent], Option[List[Schema.MemoryEvent]]] = (fun: List[Schema.MemoryEvent]) => Option(fun)
		given putListSchemaPowerManagementEvent: Conversion[List[Schema.PowerManagementEvent], Option[List[Schema.PowerManagementEvent]]] = (fun: List[Schema.PowerManagementEvent]) => Option(fun)
		given putListSchemaHardwareStatus: Conversion[List[Schema.HardwareStatus], Option[List[Schema.HardwareStatus]]] = (fun: List[Schema.HardwareStatus]) => Option(fun)
		given putSchemaDeviceSettings: Conversion[Schema.DeviceSettings, Option[Schema.DeviceSettings]] = (fun: Schema.DeviceSettings) => Option(fun)
		given putSchemaSecurityPosture: Conversion[Schema.SecurityPosture, Option[Schema.SecurityPosture]] = (fun: Schema.SecurityPosture) => Option(fun)
		given putSchemaDeviceOwnershipEnum: Conversion[Schema.Device.OwnershipEnum, Option[Schema.Device.OwnershipEnum]] = (fun: Schema.Device.OwnershipEnum) => Option(fun)
		given putSchemaCommonCriteriaModeInfo: Conversion[Schema.CommonCriteriaModeInfo, Option[Schema.CommonCriteriaModeInfo]] = (fun: Schema.CommonCriteriaModeInfo) => Option(fun)
		given putListSchemaPasswordRequirements: Conversion[List[Schema.PasswordRequirements], Option[List[Schema.PasswordRequirements]]] = (fun: List[Schema.PasswordRequirements]) => Option(fun)
		given putSchemaDpcMigrationInfo: Conversion[Schema.DpcMigrationInfo, Option[Schema.DpcMigrationInfo]] = (fun: Schema.DpcMigrationInfo) => Option(fun)
		given putSchemaNonComplianceDetailNonComplianceReasonEnum: Conversion[Schema.NonComplianceDetail.NonComplianceReasonEnum, Option[Schema.NonComplianceDetail.NonComplianceReasonEnum]] = (fun: Schema.NonComplianceDetail.NonComplianceReasonEnum) => Option(fun)
		given putJsValue: Conversion[JsValue, Option[JsValue]] = (fun: JsValue) => Option(fun)
		given putSchemaNonComplianceDetailInstallationFailureReasonEnum: Conversion[Schema.NonComplianceDetail.InstallationFailureReasonEnum, Option[Schema.NonComplianceDetail.InstallationFailureReasonEnum]] = (fun: Schema.NonComplianceDetail.InstallationFailureReasonEnum) => Option(fun)
		given putSchemaNonComplianceDetailSpecificNonComplianceReasonEnum: Conversion[Schema.NonComplianceDetail.SpecificNonComplianceReasonEnum, Option[Schema.NonComplianceDetail.SpecificNonComplianceReasonEnum]] = (fun: Schema.NonComplianceDetail.SpecificNonComplianceReasonEnum) => Option(fun)
		given putSchemaSpecificNonComplianceContext: Conversion[Schema.SpecificNonComplianceContext, Option[Schema.SpecificNonComplianceContext]] = (fun: Schema.SpecificNonComplianceContext) => Option(fun)
		given putSchemaOncWifiContext: Conversion[Schema.OncWifiContext, Option[Schema.OncWifiContext]] = (fun: Schema.OncWifiContext) => Option(fun)
		given putSchemaPasswordPoliciesContext: Conversion[Schema.PasswordPoliciesContext, Option[Schema.PasswordPoliciesContext]] = (fun: Schema.PasswordPoliciesContext) => Option(fun)
		given putSchemaPasswordPoliciesContextPasswordPolicyScopeEnum: Conversion[Schema.PasswordPoliciesContext.PasswordPolicyScopeEnum, Option[Schema.PasswordPoliciesContext.PasswordPolicyScopeEnum]] = (fun: Schema.PasswordPoliciesContext.PasswordPolicyScopeEnum) => Option(fun)
		given putSchemaSystemUpdateInfo: Conversion[Schema.SystemUpdateInfo, Option[Schema.SystemUpdateInfo]] = (fun: Schema.SystemUpdateInfo) => Option(fun)
		given putSchemaSystemUpdateInfoUpdateStatusEnum: Conversion[Schema.SystemUpdateInfo.UpdateStatusEnum, Option[Schema.SystemUpdateInfo.UpdateStatusEnum]] = (fun: Schema.SystemUpdateInfo.UpdateStatusEnum) => Option(fun)
		given putListBigDecimal: Conversion[List[BigDecimal], Option[List[BigDecimal]]] = (fun: List[BigDecimal]) => Option(fun)
		given putSchemaDisplayStateEnum: Conversion[Schema.Display.StateEnum, Option[Schema.Display.StateEnum]] = (fun: Schema.Display.StateEnum) => Option(fun)
		given putListSchemaApplicationEvent: Conversion[List[Schema.ApplicationEvent], Option[List[Schema.ApplicationEvent]]] = (fun: List[Schema.ApplicationEvent]) => Option(fun)
		given putSchemaApplicationReportApplicationSourceEnum: Conversion[Schema.ApplicationReport.ApplicationSourceEnum, Option[Schema.ApplicationReport.ApplicationSourceEnum]] = (fun: Schema.ApplicationReport.ApplicationSourceEnum) => Option(fun)
		given putSchemaApplicationReportStateEnum: Conversion[Schema.ApplicationReport.StateEnum, Option[Schema.ApplicationReport.StateEnum]] = (fun: Schema.ApplicationReport.StateEnum) => Option(fun)
		given putListSchemaKeyedAppState: Conversion[List[Schema.KeyedAppState], Option[List[Schema.KeyedAppState]]] = (fun: List[Schema.KeyedAppState]) => Option(fun)
		given putSchemaApplicationReportUserFacingTypeEnum: Conversion[Schema.ApplicationReport.UserFacingTypeEnum, Option[Schema.ApplicationReport.UserFacingTypeEnum]] = (fun: Schema.ApplicationReport.UserFacingTypeEnum) => Option(fun)
		given putSchemaApplicationEventEventTypeEnum: Conversion[Schema.ApplicationEvent.EventTypeEnum, Option[Schema.ApplicationEvent.EventTypeEnum]] = (fun: Schema.ApplicationEvent.EventTypeEnum) => Option(fun)
		given putSchemaKeyedAppStateSeverityEnum: Conversion[Schema.KeyedAppState.SeverityEnum, Option[Schema.KeyedAppState.SeverityEnum]] = (fun: Schema.KeyedAppState.SeverityEnum) => Option(fun)
		given putListSchemaTelephonyInfo: Conversion[List[Schema.TelephonyInfo], Option[List[Schema.TelephonyInfo]]] = (fun: List[Schema.TelephonyInfo]) => Option(fun)
		given putSchemaMemoryEventEventTypeEnum: Conversion[Schema.MemoryEvent.EventTypeEnum, Option[Schema.MemoryEvent.EventTypeEnum]] = (fun: Schema.MemoryEvent.EventTypeEnum) => Option(fun)
		given putSchemaPowerManagementEventEventTypeEnum: Conversion[Schema.PowerManagementEvent.EventTypeEnum, Option[Schema.PowerManagementEvent.EventTypeEnum]] = (fun: Schema.PowerManagementEvent.EventTypeEnum) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaDeviceSettingsEncryptionStatusEnum: Conversion[Schema.DeviceSettings.EncryptionStatusEnum, Option[Schema.DeviceSettings.EncryptionStatusEnum]] = (fun: Schema.DeviceSettings.EncryptionStatusEnum) => Option(fun)
		given putSchemaSecurityPostureDevicePostureEnum: Conversion[Schema.SecurityPosture.DevicePostureEnum, Option[Schema.SecurityPosture.DevicePostureEnum]] = (fun: Schema.SecurityPosture.DevicePostureEnum) => Option(fun)
		given putListSchemaPostureDetail: Conversion[List[Schema.PostureDetail], Option[List[Schema.PostureDetail]]] = (fun: List[Schema.PostureDetail]) => Option(fun)
		given putSchemaPostureDetailSecurityRiskEnum: Conversion[Schema.PostureDetail.SecurityRiskEnum, Option[Schema.PostureDetail.SecurityRiskEnum]] = (fun: Schema.PostureDetail.SecurityRiskEnum) => Option(fun)
		given putListSchemaUserFacingMessage: Conversion[List[Schema.UserFacingMessage], Option[List[Schema.UserFacingMessage]]] = (fun: List[Schema.UserFacingMessage]) => Option(fun)
		given putSchemaCommonCriteriaModeInfoCommonCriteriaModeStatusEnum: Conversion[Schema.CommonCriteriaModeInfo.CommonCriteriaModeStatusEnum, Option[Schema.CommonCriteriaModeInfo.CommonCriteriaModeStatusEnum]] = (fun: Schema.CommonCriteriaModeInfo.CommonCriteriaModeStatusEnum) => Option(fun)
		given putSchemaCommonCriteriaModeInfoPolicySignatureVerificationStatusEnum: Conversion[Schema.CommonCriteriaModeInfo.PolicySignatureVerificationStatusEnum, Option[Schema.CommonCriteriaModeInfo.PolicySignatureVerificationStatusEnum]] = (fun: Schema.CommonCriteriaModeInfo.PolicySignatureVerificationStatusEnum) => Option(fun)
		given putSchemaPasswordRequirementsPasswordQualityEnum: Conversion[Schema.PasswordRequirements.PasswordQualityEnum, Option[Schema.PasswordRequirements.PasswordQualityEnum]] = (fun: Schema.PasswordRequirements.PasswordQualityEnum) => Option(fun)
		given putSchemaPasswordRequirementsPasswordScopeEnum: Conversion[Schema.PasswordRequirements.PasswordScopeEnum, Option[Schema.PasswordRequirements.PasswordScopeEnum]] = (fun: Schema.PasswordRequirements.PasswordScopeEnum) => Option(fun)
		given putSchemaPasswordRequirementsRequirePasswordUnlockEnum: Conversion[Schema.PasswordRequirements.RequirePasswordUnlockEnum, Option[Schema.PasswordRequirements.RequirePasswordUnlockEnum]] = (fun: Schema.PasswordRequirements.RequirePasswordUnlockEnum) => Option(fun)
		given putSchemaPasswordRequirementsUnifiedLockSettingsEnum: Conversion[Schema.PasswordRequirements.UnifiedLockSettingsEnum, Option[Schema.PasswordRequirements.UnifiedLockSettingsEnum]] = (fun: Schema.PasswordRequirements.UnifiedLockSettingsEnum) => Option(fun)
		given putListSchemaDevice: Conversion[List[Schema.Device], Option[List[Schema.Device]]] = (fun: List[Schema.Device]) => Option(fun)
		given putListSchemaApplicationPolicy: Conversion[List[Schema.ApplicationPolicy], Option[List[Schema.ApplicationPolicy]]] = (fun: List[Schema.ApplicationPolicy]) => Option(fun)
		given putListSchemaPolicyKeyguardDisabledFeaturesEnum: Conversion[List[Schema.Policy.KeyguardDisabledFeaturesEnum], Option[List[Schema.Policy.KeyguardDisabledFeaturesEnum]]] = (fun: List[Schema.Policy.KeyguardDisabledFeaturesEnum]) => Option(fun)
		given putSchemaPolicyDefaultPermissionPolicyEnum: Conversion[Schema.Policy.DefaultPermissionPolicyEnum, Option[Schema.Policy.DefaultPermissionPolicyEnum]] = (fun: Schema.Policy.DefaultPermissionPolicyEnum) => Option(fun)
		given putListSchemaPersistentPreferredActivity: Conversion[List[Schema.PersistentPreferredActivity], Option[List[Schema.PersistentPreferredActivity]]] = (fun: List[Schema.PersistentPreferredActivity]) => Option(fun)
		given putSchemaSystemUpdate: Conversion[Schema.SystemUpdate, Option[Schema.SystemUpdate]] = (fun: Schema.SystemUpdate) => Option(fun)
		given putSchemaStatusReportingSettings: Conversion[Schema.StatusReportingSettings, Option[Schema.StatusReportingSettings]] = (fun: Schema.StatusReportingSettings) => Option(fun)
		given putSchemaPasswordRequirements: Conversion[Schema.PasswordRequirements, Option[Schema.PasswordRequirements]] = (fun: Schema.PasswordRequirements) => Option(fun)
		given putSchemaPackageNameList: Conversion[Schema.PackageNameList, Option[Schema.PackageNameList]] = (fun: Schema.PackageNameList) => Option(fun)
		given putListSchemaPolicyStayOnPluggedModesEnum: Conversion[List[Schema.Policy.StayOnPluggedModesEnum], Option[List[Schema.Policy.StayOnPluggedModesEnum]]] = (fun: List[Schema.Policy.StayOnPluggedModesEnum]) => Option(fun)
		given putSchemaProxyInfo: Conversion[Schema.ProxyInfo, Option[Schema.ProxyInfo]] = (fun: Schema.ProxyInfo) => Option(fun)
		given putListSchemaChoosePrivateKeyRule: Conversion[List[Schema.ChoosePrivateKeyRule], Option[List[Schema.ChoosePrivateKeyRule]]] = (fun: List[Schema.ChoosePrivateKeyRule]) => Option(fun)
		given putSchemaAlwaysOnVpnPackage: Conversion[Schema.AlwaysOnVpnPackage, Option[Schema.AlwaysOnVpnPackage]] = (fun: Schema.AlwaysOnVpnPackage) => Option(fun)
		given putSchemaPolicyLocationModeEnum: Conversion[Schema.Policy.LocationModeEnum, Option[Schema.Policy.LocationModeEnum]] = (fun: Schema.Policy.LocationModeEnum) => Option(fun)
		given putListSchemaComplianceRule: Conversion[List[Schema.ComplianceRule], Option[List[Schema.ComplianceRule]]] = (fun: List[Schema.ComplianceRule]) => Option(fun)
		given putSchemaPolicyAppAutoUpdatePolicyEnum: Conversion[Schema.Policy.AppAutoUpdatePolicyEnum, Option[Schema.Policy.AppAutoUpdatePolicyEnum]] = (fun: Schema.Policy.AppAutoUpdatePolicyEnum) => Option(fun)
		given putListSchemaPolicyAndroidDevicePolicyTracksEnum: Conversion[List[Schema.Policy.AndroidDevicePolicyTracksEnum], Option[List[Schema.Policy.AndroidDevicePolicyTracksEnum]]] = (fun: List[Schema.Policy.AndroidDevicePolicyTracksEnum]) => Option(fun)
		given putSchemaPolicyEncryptionPolicyEnum: Conversion[Schema.Policy.EncryptionPolicyEnum, Option[Schema.Policy.EncryptionPolicyEnum]] = (fun: Schema.Policy.EncryptionPolicyEnum) => Option(fun)
		given putListSchemaPermissionGrant: Conversion[List[Schema.PermissionGrant], Option[List[Schema.PermissionGrant]]] = (fun: List[Schema.PermissionGrant]) => Option(fun)
		given putSchemaPolicyPlayStoreModeEnum: Conversion[Schema.Policy.PlayStoreModeEnum, Option[Schema.Policy.PlayStoreModeEnum]] = (fun: Schema.Policy.PlayStoreModeEnum) => Option(fun)
		given putListSchemaSetupAction: Conversion[List[Schema.SetupAction], Option[List[Schema.SetupAction]]] = (fun: List[Schema.SetupAction]) => Option(fun)
		given putListSchemaPolicyEnforcementRule: Conversion[List[Schema.PolicyEnforcementRule], Option[List[Schema.PolicyEnforcementRule]]] = (fun: List[Schema.PolicyEnforcementRule]) => Option(fun)
		given putSchemaKioskCustomization: Conversion[Schema.KioskCustomization, Option[Schema.KioskCustomization]] = (fun: Schema.KioskCustomization) => Option(fun)
		given putSchemaAdvancedSecurityOverrides: Conversion[Schema.AdvancedSecurityOverrides, Option[Schema.AdvancedSecurityOverrides]] = (fun: Schema.AdvancedSecurityOverrides) => Option(fun)
		given putSchemaPersonalUsagePolicies: Conversion[Schema.PersonalUsagePolicies, Option[Schema.PersonalUsagePolicies]] = (fun: Schema.PersonalUsagePolicies) => Option(fun)
		given putSchemaPolicyAutoDateAndTimeZoneEnum: Conversion[Schema.Policy.AutoDateAndTimeZoneEnum, Option[Schema.Policy.AutoDateAndTimeZoneEnum]] = (fun: Schema.Policy.AutoDateAndTimeZoneEnum) => Option(fun)
		given putListSchemaOncCertificateProvider: Conversion[List[Schema.OncCertificateProvider], Option[List[Schema.OncCertificateProvider]]] = (fun: List[Schema.OncCertificateProvider]) => Option(fun)
		given putSchemaCrossProfilePolicies: Conversion[Schema.CrossProfilePolicies, Option[Schema.CrossProfilePolicies]] = (fun: Schema.CrossProfilePolicies) => Option(fun)
		given putSchemaPolicyPreferentialNetworkServiceEnum: Conversion[Schema.Policy.PreferentialNetworkServiceEnum, Option[Schema.Policy.PreferentialNetworkServiceEnum]] = (fun: Schema.Policy.PreferentialNetworkServiceEnum) => Option(fun)
		given putSchemaUsageLog: Conversion[Schema.UsageLog, Option[Schema.UsageLog]] = (fun: Schema.UsageLog) => Option(fun)
		given putSchemaPolicyCameraAccessEnum: Conversion[Schema.Policy.CameraAccessEnum, Option[Schema.Policy.CameraAccessEnum]] = (fun: Schema.Policy.CameraAccessEnum) => Option(fun)
		given putSchemaPolicyMicrophoneAccessEnum: Conversion[Schema.Policy.MicrophoneAccessEnum, Option[Schema.Policy.MicrophoneAccessEnum]] = (fun: Schema.Policy.MicrophoneAccessEnum) => Option(fun)
		given putSchemaDeviceConnectivityManagement: Conversion[Schema.DeviceConnectivityManagement, Option[Schema.DeviceConnectivityManagement]] = (fun: Schema.DeviceConnectivityManagement) => Option(fun)
		given putSchemaDeviceRadioState: Conversion[Schema.DeviceRadioState, Option[Schema.DeviceRadioState]] = (fun: Schema.DeviceRadioState) => Option(fun)
		given putSchemaPolicyCredentialProviderPolicyDefaultEnum: Conversion[Schema.Policy.CredentialProviderPolicyDefaultEnum, Option[Schema.Policy.CredentialProviderPolicyDefaultEnum]] = (fun: Schema.Policy.CredentialProviderPolicyDefaultEnum) => Option(fun)
		given putSchemaPolicyPrintingPolicyEnum: Conversion[Schema.Policy.PrintingPolicyEnum, Option[Schema.Policy.PrintingPolicyEnum]] = (fun: Schema.Policy.PrintingPolicyEnum) => Option(fun)
		given putSchemaDisplaySettings: Conversion[Schema.DisplaySettings, Option[Schema.DisplaySettings]] = (fun: Schema.DisplaySettings) => Option(fun)
		given putSchemaPolicyAssistContentPolicyEnum: Conversion[Schema.Policy.AssistContentPolicyEnum, Option[Schema.Policy.AssistContentPolicyEnum]] = (fun: Schema.Policy.AssistContentPolicyEnum) => Option(fun)
		given putSchemaApplicationPolicyInstallTypeEnum: Conversion[Schema.ApplicationPolicy.InstallTypeEnum, Option[Schema.ApplicationPolicy.InstallTypeEnum]] = (fun: Schema.ApplicationPolicy.InstallTypeEnum) => Option(fun)
		given putSchemaApplicationPolicyDefaultPermissionPolicyEnum: Conversion[Schema.ApplicationPolicy.DefaultPermissionPolicyEnum, Option[Schema.ApplicationPolicy.DefaultPermissionPolicyEnum]] = (fun: Schema.ApplicationPolicy.DefaultPermissionPolicyEnum) => Option(fun)
		given putListSchemaApplicationPolicyDelegatedScopesEnum: Conversion[List[Schema.ApplicationPolicy.DelegatedScopesEnum], Option[List[Schema.ApplicationPolicy.DelegatedScopesEnum]]] = (fun: List[Schema.ApplicationPolicy.DelegatedScopesEnum]) => Option(fun)
		given putSchemaManagedConfigurationTemplate: Conversion[Schema.ManagedConfigurationTemplate, Option[Schema.ManagedConfigurationTemplate]] = (fun: Schema.ManagedConfigurationTemplate) => Option(fun)
		given putSchemaApplicationPolicyConnectedWorkAndPersonalAppEnum: Conversion[Schema.ApplicationPolicy.ConnectedWorkAndPersonalAppEnum, Option[Schema.ApplicationPolicy.ConnectedWorkAndPersonalAppEnum]] = (fun: Schema.ApplicationPolicy.ConnectedWorkAndPersonalAppEnum) => Option(fun)
		given putSchemaApplicationPolicyAutoUpdateModeEnum: Conversion[Schema.ApplicationPolicy.AutoUpdateModeEnum, Option[Schema.ApplicationPolicy.AutoUpdateModeEnum]] = (fun: Schema.ApplicationPolicy.AutoUpdateModeEnum) => Option(fun)
		given putSchemaExtensionConfig: Conversion[Schema.ExtensionConfig, Option[Schema.ExtensionConfig]] = (fun: Schema.ExtensionConfig) => Option(fun)
		given putSchemaApplicationPolicyAlwaysOnVpnLockdownExemptionEnum: Conversion[Schema.ApplicationPolicy.AlwaysOnVpnLockdownExemptionEnum, Option[Schema.ApplicationPolicy.AlwaysOnVpnLockdownExemptionEnum]] = (fun: Schema.ApplicationPolicy.AlwaysOnVpnLockdownExemptionEnum) => Option(fun)
		given putSchemaApplicationPolicyWorkProfileWidgetsEnum: Conversion[Schema.ApplicationPolicy.WorkProfileWidgetsEnum, Option[Schema.ApplicationPolicy.WorkProfileWidgetsEnum]] = (fun: Schema.ApplicationPolicy.WorkProfileWidgetsEnum) => Option(fun)
		given putSchemaApplicationPolicyCredentialProviderPolicyEnum: Conversion[Schema.ApplicationPolicy.CredentialProviderPolicyEnum, Option[Schema.ApplicationPolicy.CredentialProviderPolicyEnum]] = (fun: Schema.ApplicationPolicy.CredentialProviderPolicyEnum) => Option(fun)
		given putListSchemaInstallConstraint: Conversion[List[Schema.InstallConstraint], Option[List[Schema.InstallConstraint]]] = (fun: List[Schema.InstallConstraint]) => Option(fun)
		given putSchemaApplicationPolicyUserControlSettingsEnum: Conversion[Schema.ApplicationPolicy.UserControlSettingsEnum, Option[Schema.ApplicationPolicy.UserControlSettingsEnum]] = (fun: Schema.ApplicationPolicy.UserControlSettingsEnum) => Option(fun)
		given putSchemaPermissionGrantPolicyEnum: Conversion[Schema.PermissionGrant.PolicyEnum, Option[Schema.PermissionGrant.PolicyEnum]] = (fun: Schema.PermissionGrant.PolicyEnum) => Option(fun)
		given putSchemaInstallConstraintNetworkTypeConstraintEnum: Conversion[Schema.InstallConstraint.NetworkTypeConstraintEnum, Option[Schema.InstallConstraint.NetworkTypeConstraintEnum]] = (fun: Schema.InstallConstraint.NetworkTypeConstraintEnum) => Option(fun)
		given putSchemaInstallConstraintChargingConstraintEnum: Conversion[Schema.InstallConstraint.ChargingConstraintEnum, Option[Schema.InstallConstraint.ChargingConstraintEnum]] = (fun: Schema.InstallConstraint.ChargingConstraintEnum) => Option(fun)
		given putSchemaInstallConstraintDeviceIdleConstraintEnum: Conversion[Schema.InstallConstraint.DeviceIdleConstraintEnum, Option[Schema.InstallConstraint.DeviceIdleConstraintEnum]] = (fun: Schema.InstallConstraint.DeviceIdleConstraintEnum) => Option(fun)
		given putSchemaSystemUpdateTypeEnum: Conversion[Schema.SystemUpdate.TypeEnum, Option[Schema.SystemUpdate.TypeEnum]] = (fun: Schema.SystemUpdate.TypeEnum) => Option(fun)
		given putListSchemaFreezePeriod: Conversion[List[Schema.FreezePeriod], Option[List[Schema.FreezePeriod]]] = (fun: List[Schema.FreezePeriod]) => Option(fun)
		given putSchemaDate: Conversion[Schema.Date, Option[Schema.Date]] = (fun: Schema.Date) => Option(fun)
		given putSchemaApplicationReportingSettings: Conversion[Schema.ApplicationReportingSettings, Option[Schema.ApplicationReportingSettings]] = (fun: Schema.ApplicationReportingSettings) => Option(fun)
		given putSchemaNonComplianceDetailCondition: Conversion[Schema.NonComplianceDetailCondition, Option[Schema.NonComplianceDetailCondition]] = (fun: Schema.NonComplianceDetailCondition) => Option(fun)
		given putSchemaApiLevelCondition: Conversion[Schema.ApiLevelCondition, Option[Schema.ApiLevelCondition]] = (fun: Schema.ApiLevelCondition) => Option(fun)
		given putSchemaNonComplianceDetailConditionNonComplianceReasonEnum: Conversion[Schema.NonComplianceDetailCondition.NonComplianceReasonEnum, Option[Schema.NonComplianceDetailCondition.NonComplianceReasonEnum]] = (fun: Schema.NonComplianceDetailCondition.NonComplianceReasonEnum) => Option(fun)
		given putSchemaLaunchAppAction: Conversion[Schema.LaunchAppAction, Option[Schema.LaunchAppAction]] = (fun: Schema.LaunchAppAction) => Option(fun)
		given putSchemaBlockAction: Conversion[Schema.BlockAction, Option[Schema.BlockAction]] = (fun: Schema.BlockAction) => Option(fun)
		given putSchemaWipeAction: Conversion[Schema.WipeAction, Option[Schema.WipeAction]] = (fun: Schema.WipeAction) => Option(fun)
		given putSchemaBlockActionBlockScopeEnum: Conversion[Schema.BlockAction.BlockScopeEnum, Option[Schema.BlockAction.BlockScopeEnum]] = (fun: Schema.BlockAction.BlockScopeEnum) => Option(fun)
		given putSchemaKioskCustomizationPowerButtonActionsEnum: Conversion[Schema.KioskCustomization.PowerButtonActionsEnum, Option[Schema.KioskCustomization.PowerButtonActionsEnum]] = (fun: Schema.KioskCustomization.PowerButtonActionsEnum) => Option(fun)
		given putSchemaKioskCustomizationSystemErrorWarningsEnum: Conversion[Schema.KioskCustomization.SystemErrorWarningsEnum, Option[Schema.KioskCustomization.SystemErrorWarningsEnum]] = (fun: Schema.KioskCustomization.SystemErrorWarningsEnum) => Option(fun)
		given putSchemaKioskCustomizationSystemNavigationEnum: Conversion[Schema.KioskCustomization.SystemNavigationEnum, Option[Schema.KioskCustomization.SystemNavigationEnum]] = (fun: Schema.KioskCustomization.SystemNavigationEnum) => Option(fun)
		given putSchemaKioskCustomizationStatusBarEnum: Conversion[Schema.KioskCustomization.StatusBarEnum, Option[Schema.KioskCustomization.StatusBarEnum]] = (fun: Schema.KioskCustomization.StatusBarEnum) => Option(fun)
		given putSchemaKioskCustomizationDeviceSettingsEnum: Conversion[Schema.KioskCustomization.DeviceSettingsEnum, Option[Schema.KioskCustomization.DeviceSettingsEnum]] = (fun: Schema.KioskCustomization.DeviceSettingsEnum) => Option(fun)
		given putSchemaAdvancedSecurityOverridesUntrustedAppsPolicyEnum: Conversion[Schema.AdvancedSecurityOverrides.UntrustedAppsPolicyEnum, Option[Schema.AdvancedSecurityOverrides.UntrustedAppsPolicyEnum]] = (fun: Schema.AdvancedSecurityOverrides.UntrustedAppsPolicyEnum) => Option(fun)
		given putSchemaAdvancedSecurityOverridesGooglePlayProtectVerifyAppsEnum: Conversion[Schema.AdvancedSecurityOverrides.GooglePlayProtectVerifyAppsEnum, Option[Schema.AdvancedSecurityOverrides.GooglePlayProtectVerifyAppsEnum]] = (fun: Schema.AdvancedSecurityOverrides.GooglePlayProtectVerifyAppsEnum) => Option(fun)
		given putSchemaAdvancedSecurityOverridesDeveloperSettingsEnum: Conversion[Schema.AdvancedSecurityOverrides.DeveloperSettingsEnum, Option[Schema.AdvancedSecurityOverrides.DeveloperSettingsEnum]] = (fun: Schema.AdvancedSecurityOverrides.DeveloperSettingsEnum) => Option(fun)
		given putSchemaAdvancedSecurityOverridesCommonCriteriaModeEnum: Conversion[Schema.AdvancedSecurityOverrides.CommonCriteriaModeEnum, Option[Schema.AdvancedSecurityOverrides.CommonCriteriaModeEnum]] = (fun: Schema.AdvancedSecurityOverrides.CommonCriteriaModeEnum) => Option(fun)
		given putSchemaAdvancedSecurityOverridesMtePolicyEnum: Conversion[Schema.AdvancedSecurityOverrides.MtePolicyEnum, Option[Schema.AdvancedSecurityOverrides.MtePolicyEnum]] = (fun: Schema.AdvancedSecurityOverrides.MtePolicyEnum) => Option(fun)
		given putSchemaAdvancedSecurityOverridesContentProtectionPolicyEnum: Conversion[Schema.AdvancedSecurityOverrides.ContentProtectionPolicyEnum, Option[Schema.AdvancedSecurityOverrides.ContentProtectionPolicyEnum]] = (fun: Schema.AdvancedSecurityOverrides.ContentProtectionPolicyEnum) => Option(fun)
		given putSchemaPersonalUsagePoliciesPersonalPlayStoreModeEnum: Conversion[Schema.PersonalUsagePolicies.PersonalPlayStoreModeEnum, Option[Schema.PersonalUsagePolicies.PersonalPlayStoreModeEnum]] = (fun: Schema.PersonalUsagePolicies.PersonalPlayStoreModeEnum) => Option(fun)
		given putListSchemaPersonalApplicationPolicy: Conversion[List[Schema.PersonalApplicationPolicy], Option[List[Schema.PersonalApplicationPolicy]]] = (fun: List[Schema.PersonalApplicationPolicy]) => Option(fun)
		given putSchemaPersonalApplicationPolicyInstallTypeEnum: Conversion[Schema.PersonalApplicationPolicy.InstallTypeEnum, Option[Schema.PersonalApplicationPolicy.InstallTypeEnum]] = (fun: Schema.PersonalApplicationPolicy.InstallTypeEnum) => Option(fun)
		given putSchemaContentProviderEndpoint: Conversion[Schema.ContentProviderEndpoint, Option[Schema.ContentProviderEndpoint]] = (fun: Schema.ContentProviderEndpoint) => Option(fun)
		given putSchemaCrossProfilePoliciesShowWorkContactsInPersonalProfileEnum: Conversion[Schema.CrossProfilePolicies.ShowWorkContactsInPersonalProfileEnum, Option[Schema.CrossProfilePolicies.ShowWorkContactsInPersonalProfileEnum]] = (fun: Schema.CrossProfilePolicies.ShowWorkContactsInPersonalProfileEnum) => Option(fun)
		given putSchemaCrossProfilePoliciesCrossProfileCopyPasteEnum: Conversion[Schema.CrossProfilePolicies.CrossProfileCopyPasteEnum, Option[Schema.CrossProfilePolicies.CrossProfileCopyPasteEnum]] = (fun: Schema.CrossProfilePolicies.CrossProfileCopyPasteEnum) => Option(fun)
		given putSchemaCrossProfilePoliciesCrossProfileDataSharingEnum: Conversion[Schema.CrossProfilePolicies.CrossProfileDataSharingEnum, Option[Schema.CrossProfilePolicies.CrossProfileDataSharingEnum]] = (fun: Schema.CrossProfilePolicies.CrossProfileDataSharingEnum) => Option(fun)
		given putSchemaCrossProfilePoliciesWorkProfileWidgetsDefaultEnum: Conversion[Schema.CrossProfilePolicies.WorkProfileWidgetsDefaultEnum, Option[Schema.CrossProfilePolicies.WorkProfileWidgetsDefaultEnum]] = (fun: Schema.CrossProfilePolicies.WorkProfileWidgetsDefaultEnum) => Option(fun)
		given putListSchemaUsageLogEnabledLogTypesEnum: Conversion[List[Schema.UsageLog.EnabledLogTypesEnum], Option[List[Schema.UsageLog.EnabledLogTypesEnum]]] = (fun: List[Schema.UsageLog.EnabledLogTypesEnum]) => Option(fun)
		given putListSchemaUsageLogUploadOnCellularAllowedEnum: Conversion[List[Schema.UsageLog.UploadOnCellularAllowedEnum], Option[List[Schema.UsageLog.UploadOnCellularAllowedEnum]]] = (fun: List[Schema.UsageLog.UploadOnCellularAllowedEnum]) => Option(fun)
		given putSchemaDeviceConnectivityManagementUsbDataAccessEnum: Conversion[Schema.DeviceConnectivityManagement.UsbDataAccessEnum, Option[Schema.DeviceConnectivityManagement.UsbDataAccessEnum]] = (fun: Schema.DeviceConnectivityManagement.UsbDataAccessEnum) => Option(fun)
		given putSchemaDeviceConnectivityManagementConfigureWifiEnum: Conversion[Schema.DeviceConnectivityManagement.ConfigureWifiEnum, Option[Schema.DeviceConnectivityManagement.ConfigureWifiEnum]] = (fun: Schema.DeviceConnectivityManagement.ConfigureWifiEnum) => Option(fun)
		given putSchemaDeviceConnectivityManagementWifiDirectSettingsEnum: Conversion[Schema.DeviceConnectivityManagement.WifiDirectSettingsEnum, Option[Schema.DeviceConnectivityManagement.WifiDirectSettingsEnum]] = (fun: Schema.DeviceConnectivityManagement.WifiDirectSettingsEnum) => Option(fun)
		given putSchemaDeviceConnectivityManagementTetheringSettingsEnum: Conversion[Schema.DeviceConnectivityManagement.TetheringSettingsEnum, Option[Schema.DeviceConnectivityManagement.TetheringSettingsEnum]] = (fun: Schema.DeviceConnectivityManagement.TetheringSettingsEnum) => Option(fun)
		given putSchemaWifiSsidPolicy: Conversion[Schema.WifiSsidPolicy, Option[Schema.WifiSsidPolicy]] = (fun: Schema.WifiSsidPolicy) => Option(fun)
		given putSchemaWifiRoamingPolicy: Conversion[Schema.WifiRoamingPolicy, Option[Schema.WifiRoamingPolicy]] = (fun: Schema.WifiRoamingPolicy) => Option(fun)
		given putSchemaWifiSsidPolicyWifiSsidPolicyTypeEnum: Conversion[Schema.WifiSsidPolicy.WifiSsidPolicyTypeEnum, Option[Schema.WifiSsidPolicy.WifiSsidPolicyTypeEnum]] = (fun: Schema.WifiSsidPolicy.WifiSsidPolicyTypeEnum) => Option(fun)
		given putListSchemaWifiSsid: Conversion[List[Schema.WifiSsid], Option[List[Schema.WifiSsid]]] = (fun: List[Schema.WifiSsid]) => Option(fun)
		given putListSchemaWifiRoamingSetting: Conversion[List[Schema.WifiRoamingSetting], Option[List[Schema.WifiRoamingSetting]]] = (fun: List[Schema.WifiRoamingSetting]) => Option(fun)
		given putSchemaWifiRoamingSettingWifiRoamingModeEnum: Conversion[Schema.WifiRoamingSetting.WifiRoamingModeEnum, Option[Schema.WifiRoamingSetting.WifiRoamingModeEnum]] = (fun: Schema.WifiRoamingSetting.WifiRoamingModeEnum) => Option(fun)
		given putSchemaDeviceRadioStateWifiStateEnum: Conversion[Schema.DeviceRadioState.WifiStateEnum, Option[Schema.DeviceRadioState.WifiStateEnum]] = (fun: Schema.DeviceRadioState.WifiStateEnum) => Option(fun)
		given putSchemaDeviceRadioStateAirplaneModeStateEnum: Conversion[Schema.DeviceRadioState.AirplaneModeStateEnum, Option[Schema.DeviceRadioState.AirplaneModeStateEnum]] = (fun: Schema.DeviceRadioState.AirplaneModeStateEnum) => Option(fun)
		given putSchemaDeviceRadioStateUltraWidebandStateEnum: Conversion[Schema.DeviceRadioState.UltraWidebandStateEnum, Option[Schema.DeviceRadioState.UltraWidebandStateEnum]] = (fun: Schema.DeviceRadioState.UltraWidebandStateEnum) => Option(fun)
		given putSchemaDeviceRadioStateCellularTwoGStateEnum: Conversion[Schema.DeviceRadioState.CellularTwoGStateEnum, Option[Schema.DeviceRadioState.CellularTwoGStateEnum]] = (fun: Schema.DeviceRadioState.CellularTwoGStateEnum) => Option(fun)
		given putSchemaDeviceRadioStateMinimumWifiSecurityLevelEnum: Conversion[Schema.DeviceRadioState.MinimumWifiSecurityLevelEnum, Option[Schema.DeviceRadioState.MinimumWifiSecurityLevelEnum]] = (fun: Schema.DeviceRadioState.MinimumWifiSecurityLevelEnum) => Option(fun)
		given putSchemaScreenBrightnessSettings: Conversion[Schema.ScreenBrightnessSettings, Option[Schema.ScreenBrightnessSettings]] = (fun: Schema.ScreenBrightnessSettings) => Option(fun)
		given putSchemaScreenTimeoutSettings: Conversion[Schema.ScreenTimeoutSettings, Option[Schema.ScreenTimeoutSettings]] = (fun: Schema.ScreenTimeoutSettings) => Option(fun)
		given putSchemaScreenBrightnessSettingsScreenBrightnessModeEnum: Conversion[Schema.ScreenBrightnessSettings.ScreenBrightnessModeEnum, Option[Schema.ScreenBrightnessSettings.ScreenBrightnessModeEnum]] = (fun: Schema.ScreenBrightnessSettings.ScreenBrightnessModeEnum) => Option(fun)
		given putSchemaScreenTimeoutSettingsScreenTimeoutModeEnum: Conversion[Schema.ScreenTimeoutSettings.ScreenTimeoutModeEnum, Option[Schema.ScreenTimeoutSettings.ScreenTimeoutModeEnum]] = (fun: Schema.ScreenTimeoutSettings.ScreenTimeoutModeEnum) => Option(fun)
		given putListSchemaPolicy: Conversion[List[Schema.Policy], Option[List[Schema.Policy]]] = (fun: List[Schema.Policy]) => Option(fun)
		given putSchemaCommandTypeEnum: Conversion[Schema.Command.TypeEnum, Option[Schema.Command.TypeEnum]] = (fun: Schema.Command.TypeEnum) => Option(fun)
		given putSchemaCommandErrorCodeEnum: Conversion[Schema.Command.ErrorCodeEnum, Option[Schema.Command.ErrorCodeEnum]] = (fun: Schema.Command.ErrorCodeEnum) => Option(fun)
		given putListSchemaCommandResetPasswordFlagsEnum: Conversion[List[Schema.Command.ResetPasswordFlagsEnum], Option[List[Schema.Command.ResetPasswordFlagsEnum]]] = (fun: List[Schema.Command.ResetPasswordFlagsEnum]) => Option(fun)
		given putSchemaClearAppsDataParams: Conversion[Schema.ClearAppsDataParams, Option[Schema.ClearAppsDataParams]] = (fun: Schema.ClearAppsDataParams) => Option(fun)
		given putSchemaStartLostModeParams: Conversion[Schema.StartLostModeParams, Option[Schema.StartLostModeParams]] = (fun: Schema.StartLostModeParams) => Option(fun)
		given putSchemaStopLostModeParams: Conversion[Schema.StopLostModeParams, Option[Schema.StopLostModeParams]] = (fun: Schema.StopLostModeParams) => Option(fun)
		given putSchemaClearAppsDataStatus: Conversion[Schema.ClearAppsDataStatus, Option[Schema.ClearAppsDataStatus]] = (fun: Schema.ClearAppsDataStatus) => Option(fun)
		given putSchemaStartLostModeStatus: Conversion[Schema.StartLostModeStatus, Option[Schema.StartLostModeStatus]] = (fun: Schema.StartLostModeStatus) => Option(fun)
		given putSchemaStopLostModeStatus: Conversion[Schema.StopLostModeStatus, Option[Schema.StopLostModeStatus]] = (fun: Schema.StopLostModeStatus) => Option(fun)
		given putMapStringSchemaPerAppResult: Conversion[Map[String, Schema.PerAppResult], Option[Map[String, Schema.PerAppResult]]] = (fun: Map[String, Schema.PerAppResult]) => Option(fun)
		given putSchemaPerAppResultClearingResultEnum: Conversion[Schema.PerAppResult.ClearingResultEnum, Option[Schema.PerAppResult.ClearingResultEnum]] = (fun: Schema.PerAppResult.ClearingResultEnum) => Option(fun)
		given putSchemaStartLostModeStatusStatusEnum: Conversion[Schema.StartLostModeStatus.StatusEnum, Option[Schema.StartLostModeStatus.StatusEnum]] = (fun: Schema.StartLostModeStatus.StatusEnum) => Option(fun)
		given putSchemaStopLostModeStatusStatusEnum: Conversion[Schema.StopLostModeStatus.StatusEnum, Option[Schema.StopLostModeStatus.StatusEnum]] = (fun: Schema.StopLostModeStatus.StatusEnum) => Option(fun)
		given putListSchemaApplicationPermission: Conversion[List[Schema.ApplicationPermission], Option[List[Schema.ApplicationPermission]]] = (fun: List[Schema.ApplicationPermission]) => Option(fun)
		given putListSchemaManagedProperty: Conversion[List[Schema.ManagedProperty], Option[List[Schema.ManagedProperty]]] = (fun: List[Schema.ManagedProperty]) => Option(fun)
		given putListSchemaAppTrackInfo: Conversion[List[Schema.AppTrackInfo], Option[List[Schema.AppTrackInfo]]] = (fun: List[Schema.AppTrackInfo]) => Option(fun)
		given putSchemaApplicationDistributionChannelEnum: Conversion[Schema.Application.DistributionChannelEnum, Option[Schema.Application.DistributionChannelEnum]] = (fun: Schema.Application.DistributionChannelEnum) => Option(fun)
		given putSchemaApplicationAppPricingEnum: Conversion[Schema.Application.AppPricingEnum, Option[Schema.Application.AppPricingEnum]] = (fun: Schema.Application.AppPricingEnum) => Option(fun)
		given putSchemaApplicationContentRatingEnum: Conversion[Schema.Application.ContentRatingEnum, Option[Schema.Application.ContentRatingEnum]] = (fun: Schema.Application.ContentRatingEnum) => Option(fun)
		given putListSchemaApplicationFeaturesEnum: Conversion[List[Schema.Application.FeaturesEnum], Option[List[Schema.Application.FeaturesEnum]]] = (fun: List[Schema.Application.FeaturesEnum]) => Option(fun)
		given putListSchemaAppVersion: Conversion[List[Schema.AppVersion], Option[List[Schema.AppVersion]]] = (fun: List[Schema.AppVersion]) => Option(fun)
		given putSchemaManagedPropertyTypeEnum: Conversion[Schema.ManagedProperty.TypeEnum, Option[Schema.ManagedProperty.TypeEnum]] = (fun: Schema.ManagedProperty.TypeEnum) => Option(fun)
		given putListSchemaManagedPropertyEntry: Conversion[List[Schema.ManagedPropertyEntry], Option[List[Schema.ManagedPropertyEntry]]] = (fun: List[Schema.ManagedPropertyEntry]) => Option(fun)
		given putListSchemaWebAppIcon: Conversion[List[Schema.WebAppIcon], Option[List[Schema.WebAppIcon]]] = (fun: List[Schema.WebAppIcon]) => Option(fun)
		given putSchemaWebAppDisplayModeEnum: Conversion[Schema.WebApp.DisplayModeEnum, Option[Schema.WebApp.DisplayModeEnum]] = (fun: Schema.WebApp.DisplayModeEnum) => Option(fun)
		given putListSchemaWebApp: Conversion[List[Schema.WebApp], Option[List[Schema.WebApp]]] = (fun: List[Schema.WebApp]) => Option(fun)
		given putSchemaMigrationTokenManagementModeEnum: Conversion[Schema.MigrationToken.ManagementModeEnum, Option[Schema.MigrationToken.ManagementModeEnum]] = (fun: Schema.MigrationToken.ManagementModeEnum) => Option(fun)
		given putListSchemaMigrationToken: Conversion[List[Schema.MigrationToken], Option[List[Schema.MigrationToken]]] = (fun: List[Schema.MigrationToken]) => Option(fun)
		given putSchemaProvisioningInfoManagementModeEnum: Conversion[Schema.ProvisioningInfo.ManagementModeEnum, Option[Schema.ProvisioningInfo.ManagementModeEnum]] = (fun: Schema.ProvisioningInfo.ManagementModeEnum) => Option(fun)
		given putSchemaProvisioningInfoOwnershipEnum: Conversion[Schema.ProvisioningInfo.OwnershipEnum, Option[Schema.ProvisioningInfo.OwnershipEnum]] = (fun: Schema.ProvisioningInfo.OwnershipEnum) => Option(fun)
		given putListSchemaUsageLogEvent: Conversion[List[Schema.UsageLogEvent], Option[List[Schema.UsageLogEvent]]] = (fun: List[Schema.UsageLogEvent]) => Option(fun)
		given putSchemaUsageLogEventEventTypeEnum: Conversion[Schema.UsageLogEvent.EventTypeEnum, Option[Schema.UsageLogEvent.EventTypeEnum]] = (fun: Schema.UsageLogEvent.EventTypeEnum) => Option(fun)
		given putSchemaAdbShellCommandEvent: Conversion[Schema.AdbShellCommandEvent, Option[Schema.AdbShellCommandEvent]] = (fun: Schema.AdbShellCommandEvent) => Option(fun)
		given putSchemaAdbShellInteractiveEvent: Conversion[Schema.AdbShellInteractiveEvent, Option[Schema.AdbShellInteractiveEvent]] = (fun: Schema.AdbShellInteractiveEvent) => Option(fun)
		given putSchemaAppProcessStartEvent: Conversion[Schema.AppProcessStartEvent, Option[Schema.AppProcessStartEvent]] = (fun: Schema.AppProcessStartEvent) => Option(fun)
		given putSchemaKeyguardDismissedEvent: Conversion[Schema.KeyguardDismissedEvent, Option[Schema.KeyguardDismissedEvent]] = (fun: Schema.KeyguardDismissedEvent) => Option(fun)
		given putSchemaKeyguardDismissAuthAttemptEvent: Conversion[Schema.KeyguardDismissAuthAttemptEvent, Option[Schema.KeyguardDismissAuthAttemptEvent]] = (fun: Schema.KeyguardDismissAuthAttemptEvent) => Option(fun)
		given putSchemaKeyguardSecuredEvent: Conversion[Schema.KeyguardSecuredEvent, Option[Schema.KeyguardSecuredEvent]] = (fun: Schema.KeyguardSecuredEvent) => Option(fun)
		given putSchemaFilePulledEvent: Conversion[Schema.FilePulledEvent, Option[Schema.FilePulledEvent]] = (fun: Schema.FilePulledEvent) => Option(fun)
		given putSchemaFilePushedEvent: Conversion[Schema.FilePushedEvent, Option[Schema.FilePushedEvent]] = (fun: Schema.FilePushedEvent) => Option(fun)
		given putSchemaCertAuthorityInstalledEvent: Conversion[Schema.CertAuthorityInstalledEvent, Option[Schema.CertAuthorityInstalledEvent]] = (fun: Schema.CertAuthorityInstalledEvent) => Option(fun)
		given putSchemaCertAuthorityRemovedEvent: Conversion[Schema.CertAuthorityRemovedEvent, Option[Schema.CertAuthorityRemovedEvent]] = (fun: Schema.CertAuthorityRemovedEvent) => Option(fun)
		given putSchemaCertValidationFailureEvent: Conversion[Schema.CertValidationFailureEvent, Option[Schema.CertValidationFailureEvent]] = (fun: Schema.CertValidationFailureEvent) => Option(fun)
		given putSchemaCryptoSelfTestCompletedEvent: Conversion[Schema.CryptoSelfTestCompletedEvent, Option[Schema.CryptoSelfTestCompletedEvent]] = (fun: Schema.CryptoSelfTestCompletedEvent) => Option(fun)
		given putSchemaKeyDestructionEvent: Conversion[Schema.KeyDestructionEvent, Option[Schema.KeyDestructionEvent]] = (fun: Schema.KeyDestructionEvent) => Option(fun)
		given putSchemaKeyGeneratedEvent: Conversion[Schema.KeyGeneratedEvent, Option[Schema.KeyGeneratedEvent]] = (fun: Schema.KeyGeneratedEvent) => Option(fun)
		given putSchemaKeyImportEvent: Conversion[Schema.KeyImportEvent, Option[Schema.KeyImportEvent]] = (fun: Schema.KeyImportEvent) => Option(fun)
		given putSchemaKeyIntegrityViolationEvent: Conversion[Schema.KeyIntegrityViolationEvent, Option[Schema.KeyIntegrityViolationEvent]] = (fun: Schema.KeyIntegrityViolationEvent) => Option(fun)
		given putSchemaLoggingStartedEvent: Conversion[Schema.LoggingStartedEvent, Option[Schema.LoggingStartedEvent]] = (fun: Schema.LoggingStartedEvent) => Option(fun)
		given putSchemaLoggingStoppedEvent: Conversion[Schema.LoggingStoppedEvent, Option[Schema.LoggingStoppedEvent]] = (fun: Schema.LoggingStoppedEvent) => Option(fun)
		given putSchemaLogBufferSizeCriticalEvent: Conversion[Schema.LogBufferSizeCriticalEvent, Option[Schema.LogBufferSizeCriticalEvent]] = (fun: Schema.LogBufferSizeCriticalEvent) => Option(fun)
		given putSchemaMediaMountEvent: Conversion[Schema.MediaMountEvent, Option[Schema.MediaMountEvent]] = (fun: Schema.MediaMountEvent) => Option(fun)
		given putSchemaMediaUnmountEvent: Conversion[Schema.MediaUnmountEvent, Option[Schema.MediaUnmountEvent]] = (fun: Schema.MediaUnmountEvent) => Option(fun)
		given putSchemaOsShutdownEvent: Conversion[Schema.OsShutdownEvent, Option[Schema.OsShutdownEvent]] = (fun: Schema.OsShutdownEvent) => Option(fun)
		given putSchemaOsStartupEvent: Conversion[Schema.OsStartupEvent, Option[Schema.OsStartupEvent]] = (fun: Schema.OsStartupEvent) => Option(fun)
		given putSchemaRemoteLockEvent: Conversion[Schema.RemoteLockEvent, Option[Schema.RemoteLockEvent]] = (fun: Schema.RemoteLockEvent) => Option(fun)
		given putSchemaWipeFailureEvent: Conversion[Schema.WipeFailureEvent, Option[Schema.WipeFailureEvent]] = (fun: Schema.WipeFailureEvent) => Option(fun)
		given putSchemaConnectEvent: Conversion[Schema.ConnectEvent, Option[Schema.ConnectEvent]] = (fun: Schema.ConnectEvent) => Option(fun)
		given putSchemaDnsEvent: Conversion[Schema.DnsEvent, Option[Schema.DnsEvent]] = (fun: Schema.DnsEvent) => Option(fun)
		given putSchemaStopLostModeUserAttemptEvent: Conversion[Schema.StopLostModeUserAttemptEvent, Option[Schema.StopLostModeUserAttemptEvent]] = (fun: Schema.StopLostModeUserAttemptEvent) => Option(fun)
		given putSchemaLostModeOutgoingPhoneCallEvent: Conversion[Schema.LostModeOutgoingPhoneCallEvent, Option[Schema.LostModeOutgoingPhoneCallEvent]] = (fun: Schema.LostModeOutgoingPhoneCallEvent) => Option(fun)
		given putSchemaLostModeLocationEvent: Conversion[Schema.LostModeLocationEvent, Option[Schema.LostModeLocationEvent]] = (fun: Schema.LostModeLocationEvent) => Option(fun)
		given putSchemaEnrollmentCompleteEvent: Conversion[Schema.EnrollmentCompleteEvent, Option[Schema.EnrollmentCompleteEvent]] = (fun: Schema.EnrollmentCompleteEvent) => Option(fun)
		given putSchemaAppProcessInfo: Conversion[Schema.AppProcessInfo, Option[Schema.AppProcessInfo]] = (fun: Schema.AppProcessInfo) => Option(fun)
		given putSchemaOsStartupEventVerifiedBootStateEnum: Conversion[Schema.OsStartupEvent.VerifiedBootStateEnum, Option[Schema.OsStartupEvent.VerifiedBootStateEnum]] = (fun: Schema.OsStartupEvent.VerifiedBootStateEnum) => Option(fun)
		given putSchemaOsStartupEventVerityModeEnum: Conversion[Schema.OsStartupEvent.VerityModeEnum, Option[Schema.OsStartupEvent.VerityModeEnum]] = (fun: Schema.OsStartupEvent.VerityModeEnum) => Option(fun)
		given putSchemaStopLostModeUserAttemptEventStatusEnum: Conversion[Schema.StopLostModeUserAttemptEvent.StatusEnum, Option[Schema.StopLostModeUserAttemptEvent.StatusEnum]] = (fun: Schema.StopLostModeUserAttemptEvent.StatusEnum) => Option(fun)
		given putSchemaLocation: Conversion[Schema.Location, Option[Schema.Location]] = (fun: Schema.Location) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
