package com.boresjo.play.api.google.redis

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaOperation: Conversion[List[Schema.Operation], Option[List[Schema.Operation]]] = (fun: List[Schema.Operation]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putListSchemaLocation: Conversion[List[Schema.Location], Option[List[Schema.Location]]] = (fun: List[Schema.Location]) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putListSchemaCluster: Conversion[List[Schema.Cluster], Option[List[Schema.Cluster]]] = (fun: List[Schema.Cluster]) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putSchemaClusterStateEnum: Conversion[Schema.Cluster.StateEnum, Option[Schema.Cluster.StateEnum]] = (fun: Schema.Cluster.StateEnum) => Option(fun)
		given putSchemaClusterAuthorizationModeEnum: Conversion[Schema.Cluster.AuthorizationModeEnum, Option[Schema.Cluster.AuthorizationModeEnum]] = (fun: Schema.Cluster.AuthorizationModeEnum) => Option(fun)
		given putSchemaClusterTransitEncryptionModeEnum: Conversion[Schema.Cluster.TransitEncryptionModeEnum, Option[Schema.Cluster.TransitEncryptionModeEnum]] = (fun: Schema.Cluster.TransitEncryptionModeEnum) => Option(fun)
		given putListSchemaPscConfig: Conversion[List[Schema.PscConfig], Option[List[Schema.PscConfig]]] = (fun: List[Schema.PscConfig]) => Option(fun)
		given putListSchemaDiscoveryEndpoint: Conversion[List[Schema.DiscoveryEndpoint], Option[List[Schema.DiscoveryEndpoint]]] = (fun: List[Schema.DiscoveryEndpoint]) => Option(fun)
		given putListSchemaPscConnection: Conversion[List[Schema.PscConnection], Option[List[Schema.PscConnection]]] = (fun: List[Schema.PscConnection]) => Option(fun)
		given putSchemaStateInfo: Conversion[Schema.StateInfo, Option[Schema.StateInfo]] = (fun: Schema.StateInfo) => Option(fun)
		given putSchemaClusterNodeTypeEnum: Conversion[Schema.Cluster.NodeTypeEnum, Option[Schema.Cluster.NodeTypeEnum]] = (fun: Schema.Cluster.NodeTypeEnum) => Option(fun)
		given putSchemaClusterPersistenceConfig: Conversion[Schema.ClusterPersistenceConfig, Option[Schema.ClusterPersistenceConfig]] = (fun: Schema.ClusterPersistenceConfig) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaZoneDistributionConfig: Conversion[Schema.ZoneDistributionConfig, Option[Schema.ZoneDistributionConfig]] = (fun: Schema.ZoneDistributionConfig) => Option(fun)
		given putSchemaCrossClusterReplicationConfig: Conversion[Schema.CrossClusterReplicationConfig, Option[Schema.CrossClusterReplicationConfig]] = (fun: Schema.CrossClusterReplicationConfig) => Option(fun)
		given putSchemaClusterMaintenancePolicy: Conversion[Schema.ClusterMaintenancePolicy, Option[Schema.ClusterMaintenancePolicy]] = (fun: Schema.ClusterMaintenancePolicy) => Option(fun)
		given putSchemaClusterMaintenanceSchedule: Conversion[Schema.ClusterMaintenanceSchedule, Option[Schema.ClusterMaintenanceSchedule]] = (fun: Schema.ClusterMaintenanceSchedule) => Option(fun)
		given putListSchemaPscServiceAttachment: Conversion[List[Schema.PscServiceAttachment], Option[List[Schema.PscServiceAttachment]]] = (fun: List[Schema.PscServiceAttachment]) => Option(fun)
		given putListSchemaClusterEndpoint: Conversion[List[Schema.ClusterEndpoint], Option[List[Schema.ClusterEndpoint]]] = (fun: List[Schema.ClusterEndpoint]) => Option(fun)
		given putSchemaPscConfig: Conversion[Schema.PscConfig, Option[Schema.PscConfig]] = (fun: Schema.PscConfig) => Option(fun)
		given putSchemaPscConnectionPscConnectionStatusEnum: Conversion[Schema.PscConnection.PscConnectionStatusEnum, Option[Schema.PscConnection.PscConnectionStatusEnum]] = (fun: Schema.PscConnection.PscConnectionStatusEnum) => Option(fun)
		given putSchemaPscConnectionConnectionTypeEnum: Conversion[Schema.PscConnection.ConnectionTypeEnum, Option[Schema.PscConnection.ConnectionTypeEnum]] = (fun: Schema.PscConnection.ConnectionTypeEnum) => Option(fun)
		given putSchemaUpdateInfo: Conversion[Schema.UpdateInfo, Option[Schema.UpdateInfo]] = (fun: Schema.UpdateInfo) => Option(fun)
		given putSchemaClusterPersistenceConfigModeEnum: Conversion[Schema.ClusterPersistenceConfig.ModeEnum, Option[Schema.ClusterPersistenceConfig.ModeEnum]] = (fun: Schema.ClusterPersistenceConfig.ModeEnum) => Option(fun)
		given putSchemaRDBConfig: Conversion[Schema.RDBConfig, Option[Schema.RDBConfig]] = (fun: Schema.RDBConfig) => Option(fun)
		given putSchemaAOFConfig: Conversion[Schema.AOFConfig, Option[Schema.AOFConfig]] = (fun: Schema.AOFConfig) => Option(fun)
		given putSchemaRDBConfigRdbSnapshotPeriodEnum: Conversion[Schema.RDBConfig.RdbSnapshotPeriodEnum, Option[Schema.RDBConfig.RdbSnapshotPeriodEnum]] = (fun: Schema.RDBConfig.RdbSnapshotPeriodEnum) => Option(fun)
		given putSchemaAOFConfigAppendFsyncEnum: Conversion[Schema.AOFConfig.AppendFsyncEnum, Option[Schema.AOFConfig.AppendFsyncEnum]] = (fun: Schema.AOFConfig.AppendFsyncEnum) => Option(fun)
		given putSchemaZoneDistributionConfigModeEnum: Conversion[Schema.ZoneDistributionConfig.ModeEnum, Option[Schema.ZoneDistributionConfig.ModeEnum]] = (fun: Schema.ZoneDistributionConfig.ModeEnum) => Option(fun)
		given putSchemaCrossClusterReplicationConfigClusterRoleEnum: Conversion[Schema.CrossClusterReplicationConfig.ClusterRoleEnum, Option[Schema.CrossClusterReplicationConfig.ClusterRoleEnum]] = (fun: Schema.CrossClusterReplicationConfig.ClusterRoleEnum) => Option(fun)
		given putSchemaRemoteCluster: Conversion[Schema.RemoteCluster, Option[Schema.RemoteCluster]] = (fun: Schema.RemoteCluster) => Option(fun)
		given putListSchemaRemoteCluster: Conversion[List[Schema.RemoteCluster], Option[List[Schema.RemoteCluster]]] = (fun: List[Schema.RemoteCluster]) => Option(fun)
		given putSchemaMembership: Conversion[Schema.Membership, Option[Schema.Membership]] = (fun: Schema.Membership) => Option(fun)
		given putListSchemaClusterWeeklyMaintenanceWindow: Conversion[List[Schema.ClusterWeeklyMaintenanceWindow], Option[List[Schema.ClusterWeeklyMaintenanceWindow]]] = (fun: List[Schema.ClusterWeeklyMaintenanceWindow]) => Option(fun)
		given putSchemaClusterWeeklyMaintenanceWindowDayEnum: Conversion[Schema.ClusterWeeklyMaintenanceWindow.DayEnum, Option[Schema.ClusterWeeklyMaintenanceWindow.DayEnum]] = (fun: Schema.ClusterWeeklyMaintenanceWindow.DayEnum) => Option(fun)
		given putSchemaTimeOfDay: Conversion[Schema.TimeOfDay, Option[Schema.TimeOfDay]] = (fun: Schema.TimeOfDay) => Option(fun)
		given putSchemaPscServiceAttachmentConnectionTypeEnum: Conversion[Schema.PscServiceAttachment.ConnectionTypeEnum, Option[Schema.PscServiceAttachment.ConnectionTypeEnum]] = (fun: Schema.PscServiceAttachment.ConnectionTypeEnum) => Option(fun)
		given putListSchemaConnectionDetail: Conversion[List[Schema.ConnectionDetail], Option[List[Schema.ConnectionDetail]]] = (fun: List[Schema.ConnectionDetail]) => Option(fun)
		given putSchemaPscConnection: Conversion[Schema.PscConnection, Option[Schema.PscConnection]] = (fun: Schema.PscConnection) => Option(fun)
		given putSchemaManagedCertificateAuthority: Conversion[Schema.ManagedCertificateAuthority, Option[Schema.ManagedCertificateAuthority]] = (fun: Schema.ManagedCertificateAuthority) => Option(fun)
		given putListSchemaCertChain: Conversion[List[Schema.CertChain], Option[List[Schema.CertChain]]] = (fun: List[Schema.CertChain]) => Option(fun)
		given putSchemaRescheduleClusterMaintenanceRequestRescheduleTypeEnum: Conversion[Schema.RescheduleClusterMaintenanceRequest.RescheduleTypeEnum, Option[Schema.RescheduleClusterMaintenanceRequest.RescheduleTypeEnum]] = (fun: Schema.RescheduleClusterMaintenanceRequest.RescheduleTypeEnum) => Option(fun)
		given putListSchemaInstance: Conversion[List[Schema.Instance], Option[List[Schema.Instance]]] = (fun: List[Schema.Instance]) => Option(fun)
		given putSchemaInstanceStateEnum: Conversion[Schema.Instance.StateEnum, Option[Schema.Instance.StateEnum]] = (fun: Schema.Instance.StateEnum) => Option(fun)
		given putSchemaInstanceTierEnum: Conversion[Schema.Instance.TierEnum, Option[Schema.Instance.TierEnum]] = (fun: Schema.Instance.TierEnum) => Option(fun)
		given putSchemaInstanceConnectModeEnum: Conversion[Schema.Instance.ConnectModeEnum, Option[Schema.Instance.ConnectModeEnum]] = (fun: Schema.Instance.ConnectModeEnum) => Option(fun)
		given putListSchemaTlsCertificate: Conversion[List[Schema.TlsCertificate], Option[List[Schema.TlsCertificate]]] = (fun: List[Schema.TlsCertificate]) => Option(fun)
		given putSchemaInstanceTransitEncryptionModeEnum: Conversion[Schema.Instance.TransitEncryptionModeEnum, Option[Schema.Instance.TransitEncryptionModeEnum]] = (fun: Schema.Instance.TransitEncryptionModeEnum) => Option(fun)
		given putSchemaMaintenancePolicy: Conversion[Schema.MaintenancePolicy, Option[Schema.MaintenancePolicy]] = (fun: Schema.MaintenancePolicy) => Option(fun)
		given putSchemaMaintenanceSchedule: Conversion[Schema.MaintenanceSchedule, Option[Schema.MaintenanceSchedule]] = (fun: Schema.MaintenanceSchedule) => Option(fun)
		given putListSchemaNodeInfo: Conversion[List[Schema.NodeInfo], Option[List[Schema.NodeInfo]]] = (fun: List[Schema.NodeInfo]) => Option(fun)
		given putSchemaInstanceReadReplicasModeEnum: Conversion[Schema.Instance.ReadReplicasModeEnum, Option[Schema.Instance.ReadReplicasModeEnum]] = (fun: Schema.Instance.ReadReplicasModeEnum) => Option(fun)
		given putSchemaPersistenceConfig: Conversion[Schema.PersistenceConfig, Option[Schema.PersistenceConfig]] = (fun: Schema.PersistenceConfig) => Option(fun)
		given putListSchemaInstanceSuspensionReasonsEnum: Conversion[List[Schema.Instance.SuspensionReasonsEnum], Option[List[Schema.Instance.SuspensionReasonsEnum]]] = (fun: List[Schema.Instance.SuspensionReasonsEnum]) => Option(fun)
		given putListSchemaWeeklyMaintenanceWindow: Conversion[List[Schema.WeeklyMaintenanceWindow], Option[List[Schema.WeeklyMaintenanceWindow]]] = (fun: List[Schema.WeeklyMaintenanceWindow]) => Option(fun)
		given putSchemaWeeklyMaintenanceWindowDayEnum: Conversion[Schema.WeeklyMaintenanceWindow.DayEnum, Option[Schema.WeeklyMaintenanceWindow.DayEnum]] = (fun: Schema.WeeklyMaintenanceWindow.DayEnum) => Option(fun)
		given putSchemaPersistenceConfigPersistenceModeEnum: Conversion[Schema.PersistenceConfig.PersistenceModeEnum, Option[Schema.PersistenceConfig.PersistenceModeEnum]] = (fun: Schema.PersistenceConfig.PersistenceModeEnum) => Option(fun)
		given putSchemaPersistenceConfigRdbSnapshotPeriodEnum: Conversion[Schema.PersistenceConfig.RdbSnapshotPeriodEnum, Option[Schema.PersistenceConfig.RdbSnapshotPeriodEnum]] = (fun: Schema.PersistenceConfig.RdbSnapshotPeriodEnum) => Option(fun)
		given putSchemaInputConfig: Conversion[Schema.InputConfig, Option[Schema.InputConfig]] = (fun: Schema.InputConfig) => Option(fun)
		given putSchemaGcsSource: Conversion[Schema.GcsSource, Option[Schema.GcsSource]] = (fun: Schema.GcsSource) => Option(fun)
		given putSchemaOutputConfig: Conversion[Schema.OutputConfig, Option[Schema.OutputConfig]] = (fun: Schema.OutputConfig) => Option(fun)
		given putSchemaGcsDestination: Conversion[Schema.GcsDestination, Option[Schema.GcsDestination]] = (fun: Schema.GcsDestination) => Option(fun)
		given putSchemaFailoverInstanceRequestDataProtectionModeEnum: Conversion[Schema.FailoverInstanceRequest.DataProtectionModeEnum, Option[Schema.FailoverInstanceRequest.DataProtectionModeEnum]] = (fun: Schema.FailoverInstanceRequest.DataProtectionModeEnum) => Option(fun)
		given putSchemaRescheduleMaintenanceRequestRescheduleTypeEnum: Conversion[Schema.RescheduleMaintenanceRequest.RescheduleTypeEnum, Option[Schema.RescheduleMaintenanceRequest.RescheduleTypeEnum]] = (fun: Schema.RescheduleMaintenanceRequest.RescheduleTypeEnum) => Option(fun)
		given putSchemaReconciliationOperationMetadataExclusiveActionEnum: Conversion[Schema.ReconciliationOperationMetadata.ExclusiveActionEnum, Option[Schema.ReconciliationOperationMetadata.ExclusiveActionEnum]] = (fun: Schema.ReconciliationOperationMetadata.ExclusiveActionEnum) => Option(fun)
		given putSchemaDatabaseResourceId: Conversion[Schema.DatabaseResourceId, Option[Schema.DatabaseResourceId]] = (fun: Schema.DatabaseResourceId) => Option(fun)
		given putSchemaDatabaseResourceFeedFeedTypeEnum: Conversion[Schema.DatabaseResourceFeed.FeedTypeEnum, Option[Schema.DatabaseResourceFeed.FeedTypeEnum]] = (fun: Schema.DatabaseResourceFeed.FeedTypeEnum) => Option(fun)
		given putSchemaDatabaseResourceMetadata: Conversion[Schema.DatabaseResourceMetadata, Option[Schema.DatabaseResourceMetadata]] = (fun: Schema.DatabaseResourceMetadata) => Option(fun)
		given putSchemaDatabaseResourceHealthSignalData: Conversion[Schema.DatabaseResourceHealthSignalData, Option[Schema.DatabaseResourceHealthSignalData]] = (fun: Schema.DatabaseResourceHealthSignalData) => Option(fun)
		given putSchemaDatabaseResourceRecommendationSignalData: Conversion[Schema.DatabaseResourceRecommendationSignalData, Option[Schema.DatabaseResourceRecommendationSignalData]] = (fun: Schema.DatabaseResourceRecommendationSignalData) => Option(fun)
		given putSchemaObservabilityMetricData: Conversion[Schema.ObservabilityMetricData, Option[Schema.ObservabilityMetricData]] = (fun: Schema.ObservabilityMetricData) => Option(fun)
		given putSchemaDatabaseResourceIdProviderEnum: Conversion[Schema.DatabaseResourceId.ProviderEnum, Option[Schema.DatabaseResourceId.ProviderEnum]] = (fun: Schema.DatabaseResourceId.ProviderEnum) => Option(fun)
		given putSchemaDatabaseResourceMetadataExpectedStateEnum: Conversion[Schema.DatabaseResourceMetadata.ExpectedStateEnum, Option[Schema.DatabaseResourceMetadata.ExpectedStateEnum]] = (fun: Schema.DatabaseResourceMetadata.ExpectedStateEnum) => Option(fun)
		given putSchemaDatabaseResourceMetadataCurrentStateEnum: Conversion[Schema.DatabaseResourceMetadata.CurrentStateEnum, Option[Schema.DatabaseResourceMetadata.CurrentStateEnum]] = (fun: Schema.DatabaseResourceMetadata.CurrentStateEnum) => Option(fun)
		given putSchemaDatabaseResourceMetadataInstanceTypeEnum: Conversion[Schema.DatabaseResourceMetadata.InstanceTypeEnum, Option[Schema.DatabaseResourceMetadata.InstanceTypeEnum]] = (fun: Schema.DatabaseResourceMetadata.InstanceTypeEnum) => Option(fun)
		given putSchemaProduct: Conversion[Schema.Product, Option[Schema.Product]] = (fun: Schema.Product) => Option(fun)
		given putSchemaAvailabilityConfiguration: Conversion[Schema.AvailabilityConfiguration, Option[Schema.AvailabilityConfiguration]] = (fun: Schema.AvailabilityConfiguration) => Option(fun)
		given putSchemaBackupConfiguration: Conversion[Schema.BackupConfiguration, Option[Schema.BackupConfiguration]] = (fun: Schema.BackupConfiguration) => Option(fun)
		given putSchemaBackupRun: Conversion[Schema.BackupRun, Option[Schema.BackupRun]] = (fun: Schema.BackupRun) => Option(fun)
		given putSchemaCustomMetadataData: Conversion[Schema.CustomMetadataData, Option[Schema.CustomMetadataData]] = (fun: Schema.CustomMetadataData) => Option(fun)
		given putListSchemaEntitlement: Conversion[List[Schema.Entitlement], Option[List[Schema.Entitlement]]] = (fun: List[Schema.Entitlement]) => Option(fun)
		given putSchemaUserLabels: Conversion[Schema.UserLabels, Option[Schema.UserLabels]] = (fun: Schema.UserLabels) => Option(fun)
		given putSchemaMachineConfiguration: Conversion[Schema.MachineConfiguration, Option[Schema.MachineConfiguration]] = (fun: Schema.MachineConfiguration) => Option(fun)
		given putSchemaTags: Conversion[Schema.Tags, Option[Schema.Tags]] = (fun: Schema.Tags) => Option(fun)
		given putSchemaDatabaseResourceMetadataEditionEnum: Conversion[Schema.DatabaseResourceMetadata.EditionEnum, Option[Schema.DatabaseResourceMetadata.EditionEnum]] = (fun: Schema.DatabaseResourceMetadata.EditionEnum) => Option(fun)
		given putSchemaProductTypeEnum: Conversion[Schema.Product.TypeEnum, Option[Schema.Product.TypeEnum]] = (fun: Schema.Product.TypeEnum) => Option(fun)
		given putSchemaProductEngineEnum: Conversion[Schema.Product.EngineEnum, Option[Schema.Product.EngineEnum]] = (fun: Schema.Product.EngineEnum) => Option(fun)
		given putSchemaAvailabilityConfigurationAvailabilityTypeEnum: Conversion[Schema.AvailabilityConfiguration.AvailabilityTypeEnum, Option[Schema.AvailabilityConfiguration.AvailabilityTypeEnum]] = (fun: Schema.AvailabilityConfiguration.AvailabilityTypeEnum) => Option(fun)
		given putSchemaRetentionSettings: Conversion[Schema.RetentionSettings, Option[Schema.RetentionSettings]] = (fun: Schema.RetentionSettings) => Option(fun)
		given putSchemaRetentionSettingsRetentionUnitEnum: Conversion[Schema.RetentionSettings.RetentionUnitEnum, Option[Schema.RetentionSettings.RetentionUnitEnum]] = (fun: Schema.RetentionSettings.RetentionUnitEnum) => Option(fun)
		given putSchemaBackupRunStatusEnum: Conversion[Schema.BackupRun.StatusEnum, Option[Schema.BackupRun.StatusEnum]] = (fun: Schema.BackupRun.StatusEnum) => Option(fun)
		given putSchemaOperationError: Conversion[Schema.OperationError, Option[Schema.OperationError]] = (fun: Schema.OperationError) => Option(fun)
		given putSchemaOperationErrorErrorTypeEnum: Conversion[Schema.OperationError.ErrorTypeEnum, Option[Schema.OperationError.ErrorTypeEnum]] = (fun: Schema.OperationError.ErrorTypeEnum) => Option(fun)
		given putListSchemaInternalResourceMetadata: Conversion[List[Schema.InternalResourceMetadata], Option[List[Schema.InternalResourceMetadata]]] = (fun: List[Schema.InternalResourceMetadata]) => Option(fun)
		given putSchemaEntitlementTypeEnum: Conversion[Schema.Entitlement.TypeEnum, Option[Schema.Entitlement.TypeEnum]] = (fun: Schema.Entitlement.TypeEnum) => Option(fun)
		given putSchemaEntitlementEntitlementStateEnum: Conversion[Schema.Entitlement.EntitlementStateEnum, Option[Schema.Entitlement.EntitlementStateEnum]] = (fun: Schema.Entitlement.EntitlementStateEnum) => Option(fun)
		given putSchemaDatabaseResourceHealthSignalDataProviderEnum: Conversion[Schema.DatabaseResourceHealthSignalData.ProviderEnum, Option[Schema.DatabaseResourceHealthSignalData.ProviderEnum]] = (fun: Schema.DatabaseResourceHealthSignalData.ProviderEnum) => Option(fun)
		given putSchemaDatabaseResourceHealthSignalDataStateEnum: Conversion[Schema.DatabaseResourceHealthSignalData.StateEnum, Option[Schema.DatabaseResourceHealthSignalData.StateEnum]] = (fun: Schema.DatabaseResourceHealthSignalData.StateEnum) => Option(fun)
		given putSchemaDatabaseResourceHealthSignalDataSignalClassEnum: Conversion[Schema.DatabaseResourceHealthSignalData.SignalClassEnum, Option[Schema.DatabaseResourceHealthSignalData.SignalClassEnum]] = (fun: Schema.DatabaseResourceHealthSignalData.SignalClassEnum) => Option(fun)
		given putSchemaDatabaseResourceHealthSignalDataSignalSeverityEnum: Conversion[Schema.DatabaseResourceHealthSignalData.SignalSeverityEnum, Option[Schema.DatabaseResourceHealthSignalData.SignalSeverityEnum]] = (fun: Schema.DatabaseResourceHealthSignalData.SignalSeverityEnum) => Option(fun)
		given putListSchemaCompliance: Conversion[List[Schema.Compliance], Option[List[Schema.Compliance]]] = (fun: List[Schema.Compliance]) => Option(fun)
		given putSchemaDatabaseResourceHealthSignalDataSignalTypeEnum: Conversion[Schema.DatabaseResourceHealthSignalData.SignalTypeEnum, Option[Schema.DatabaseResourceHealthSignalData.SignalTypeEnum]] = (fun: Schema.DatabaseResourceHealthSignalData.SignalTypeEnum) => Option(fun)
		given putSchemaDatabaseResourceRecommendationSignalDataSignalTypeEnum: Conversion[Schema.DatabaseResourceRecommendationSignalData.SignalTypeEnum, Option[Schema.DatabaseResourceRecommendationSignalData.SignalTypeEnum]] = (fun: Schema.DatabaseResourceRecommendationSignalData.SignalTypeEnum) => Option(fun)
		given putSchemaDatabaseResourceRecommendationSignalDataRecommendationStateEnum: Conversion[Schema.DatabaseResourceRecommendationSignalData.RecommendationStateEnum, Option[Schema.DatabaseResourceRecommendationSignalData.RecommendationStateEnum]] = (fun: Schema.DatabaseResourceRecommendationSignalData.RecommendationStateEnum) => Option(fun)
		given putSchemaObservabilityMetricDataMetricTypeEnum: Conversion[Schema.ObservabilityMetricData.MetricTypeEnum, Option[Schema.ObservabilityMetricData.MetricTypeEnum]] = (fun: Schema.ObservabilityMetricData.MetricTypeEnum) => Option(fun)
		given putSchemaObservabilityMetricDataAggregationTypeEnum: Conversion[Schema.ObservabilityMetricData.AggregationTypeEnum, Option[Schema.ObservabilityMetricData.AggregationTypeEnum]] = (fun: Schema.ObservabilityMetricData.AggregationTypeEnum) => Option(fun)
		given putSchemaTypedValue: Conversion[Schema.TypedValue, Option[Schema.TypedValue]] = (fun: Schema.TypedValue) => Option(fun)
		given putMapStringSchemaGoogleCloudRedisV1ZoneMetadata: Conversion[Map[String, Schema.GoogleCloudRedisV1ZoneMetadata], Option[Map[String, Schema.GoogleCloudRedisV1ZoneMetadata]]] = (fun: Map[String, Schema.GoogleCloudRedisV1ZoneMetadata]) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
