package com.boresjo.play.api.google.vmmigration

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaOperation: Conversion[List[Schema.Operation], Option[List[Schema.Operation]]] = (fun: List[Schema.Operation]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putListSchemaSource: Conversion[List[Schema.Source], Option[List[Schema.Source]]] = (fun: List[Schema.Source]) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putSchemaVmwareSourceDetails: Conversion[Schema.VmwareSourceDetails, Option[Schema.VmwareSourceDetails]] = (fun: Schema.VmwareSourceDetails) => Option(fun)
		given putSchemaAwsSourceDetails: Conversion[Schema.AwsSourceDetails, Option[Schema.AwsSourceDetails]] = (fun: Schema.AwsSourceDetails) => Option(fun)
		given putSchemaAzureSourceDetails: Conversion[Schema.AzureSourceDetails, Option[Schema.AzureSourceDetails]] = (fun: Schema.AzureSourceDetails) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putSchemaEncryption: Conversion[Schema.Encryption, Option[Schema.Encryption]] = (fun: Schema.Encryption) => Option(fun)
		given putSchemaAccessKeyCredentials: Conversion[Schema.AccessKeyCredentials, Option[Schema.AccessKeyCredentials]] = (fun: Schema.AccessKeyCredentials) => Option(fun)
		given putSchemaAwsSourceDetailsStateEnum: Conversion[Schema.AwsSourceDetails.StateEnum, Option[Schema.AwsSourceDetails.StateEnum]] = (fun: Schema.AwsSourceDetails.StateEnum) => Option(fun)
		given putListSchemaTag: Conversion[List[Schema.Tag], Option[List[Schema.Tag]]] = (fun: List[Schema.Tag]) => Option(fun)
		given putSchemaClientSecretCredentials: Conversion[Schema.ClientSecretCredentials, Option[Schema.ClientSecretCredentials]] = (fun: Schema.ClientSecretCredentials) => Option(fun)
		given putSchemaAzureSourceDetailsStateEnum: Conversion[Schema.AzureSourceDetails.StateEnum, Option[Schema.AzureSourceDetails.StateEnum]] = (fun: Schema.AzureSourceDetails.StateEnum) => Option(fun)
		given putSchemaVmwareVmsDetails: Conversion[Schema.VmwareVmsDetails, Option[Schema.VmwareVmsDetails]] = (fun: Schema.VmwareVmsDetails) => Option(fun)
		given putSchemaAwsVmsDetails: Conversion[Schema.AwsVmsDetails, Option[Schema.AwsVmsDetails]] = (fun: Schema.AwsVmsDetails) => Option(fun)
		given putSchemaAzureVmsDetails: Conversion[Schema.AzureVmsDetails, Option[Schema.AzureVmsDetails]] = (fun: Schema.AzureVmsDetails) => Option(fun)
		given putListSchemaVmwareVmDetails: Conversion[List[Schema.VmwareVmDetails], Option[List[Schema.VmwareVmDetails]]] = (fun: List[Schema.VmwareVmDetails]) => Option(fun)
		given putSchemaVmwareVmDetailsPowerStateEnum: Conversion[Schema.VmwareVmDetails.PowerStateEnum, Option[Schema.VmwareVmDetails.PowerStateEnum]] = (fun: Schema.VmwareVmDetails.PowerStateEnum) => Option(fun)
		given putSchemaVmwareVmDetailsBootOptionEnum: Conversion[Schema.VmwareVmDetails.BootOptionEnum, Option[Schema.VmwareVmDetails.BootOptionEnum]] = (fun: Schema.VmwareVmDetails.BootOptionEnum) => Option(fun)
		given putSchemaVmwareVmDetailsArchitectureEnum: Conversion[Schema.VmwareVmDetails.ArchitectureEnum, Option[Schema.VmwareVmDetails.ArchitectureEnum]] = (fun: Schema.VmwareVmDetails.ArchitectureEnum) => Option(fun)
		given putListSchemaAwsVmDetails: Conversion[List[Schema.AwsVmDetails], Option[List[Schema.AwsVmDetails]]] = (fun: List[Schema.AwsVmDetails]) => Option(fun)
		given putSchemaAwsVmDetailsPowerStateEnum: Conversion[Schema.AwsVmDetails.PowerStateEnum, Option[Schema.AwsVmDetails.PowerStateEnum]] = (fun: Schema.AwsVmDetails.PowerStateEnum) => Option(fun)
		given putSchemaAwsVmDetailsBootOptionEnum: Conversion[Schema.AwsVmDetails.BootOptionEnum, Option[Schema.AwsVmDetails.BootOptionEnum]] = (fun: Schema.AwsVmDetails.BootOptionEnum) => Option(fun)
		given putListSchemaAwsSecurityGroup: Conversion[List[Schema.AwsSecurityGroup], Option[List[Schema.AwsSecurityGroup]]] = (fun: List[Schema.AwsSecurityGroup]) => Option(fun)
		given putSchemaAwsVmDetailsVirtualizationTypeEnum: Conversion[Schema.AwsVmDetails.VirtualizationTypeEnum, Option[Schema.AwsVmDetails.VirtualizationTypeEnum]] = (fun: Schema.AwsVmDetails.VirtualizationTypeEnum) => Option(fun)
		given putSchemaAwsVmDetailsArchitectureEnum: Conversion[Schema.AwsVmDetails.ArchitectureEnum, Option[Schema.AwsVmDetails.ArchitectureEnum]] = (fun: Schema.AwsVmDetails.ArchitectureEnum) => Option(fun)
		given putListSchemaAzureVmDetails: Conversion[List[Schema.AzureVmDetails], Option[List[Schema.AzureVmDetails]]] = (fun: List[Schema.AzureVmDetails]) => Option(fun)
		given putSchemaAzureVmDetailsPowerStateEnum: Conversion[Schema.AzureVmDetails.PowerStateEnum, Option[Schema.AzureVmDetails.PowerStateEnum]] = (fun: Schema.AzureVmDetails.PowerStateEnum) => Option(fun)
		given putSchemaOSDisk: Conversion[Schema.OSDisk, Option[Schema.OSDisk]] = (fun: Schema.OSDisk) => Option(fun)
		given putListSchemaDisk: Conversion[List[Schema.Disk], Option[List[Schema.Disk]]] = (fun: List[Schema.Disk]) => Option(fun)
		given putSchemaOSDescription: Conversion[Schema.OSDescription, Option[Schema.OSDescription]] = (fun: Schema.OSDescription) => Option(fun)
		given putSchemaAzureVmDetailsBootOptionEnum: Conversion[Schema.AzureVmDetails.BootOptionEnum, Option[Schema.AzureVmDetails.BootOptionEnum]] = (fun: Schema.AzureVmDetails.BootOptionEnum) => Option(fun)
		given putSchemaAzureVmDetailsArchitectureEnum: Conversion[Schema.AzureVmDetails.ArchitectureEnum, Option[Schema.AzureVmDetails.ArchitectureEnum]] = (fun: Schema.AzureVmDetails.ArchitectureEnum) => Option(fun)
		given putListSchemaUtilizationReport: Conversion[List[Schema.UtilizationReport], Option[List[Schema.UtilizationReport]]] = (fun: List[Schema.UtilizationReport]) => Option(fun)
		given putSchemaUtilizationReportStateEnum: Conversion[Schema.UtilizationReport.StateEnum, Option[Schema.UtilizationReport.StateEnum]] = (fun: Schema.UtilizationReport.StateEnum) => Option(fun)
		given putSchemaUtilizationReportTimeFrameEnum: Conversion[Schema.UtilizationReport.TimeFrameEnum, Option[Schema.UtilizationReport.TimeFrameEnum]] = (fun: Schema.UtilizationReport.TimeFrameEnum) => Option(fun)
		given putListSchemaVmUtilizationInfo: Conversion[List[Schema.VmUtilizationInfo], Option[List[Schema.VmUtilizationInfo]]] = (fun: List[Schema.VmUtilizationInfo]) => Option(fun)
		given putSchemaVmwareVmDetails: Conversion[Schema.VmwareVmDetails, Option[Schema.VmwareVmDetails]] = (fun: Schema.VmwareVmDetails) => Option(fun)
		given putSchemaVmUtilizationMetrics: Conversion[Schema.VmUtilizationMetrics, Option[Schema.VmUtilizationMetrics]] = (fun: Schema.VmUtilizationMetrics) => Option(fun)
		given putListSchemaDatacenterConnector: Conversion[List[Schema.DatacenterConnector], Option[List[Schema.DatacenterConnector]]] = (fun: List[Schema.DatacenterConnector]) => Option(fun)
		given putSchemaDatacenterConnectorStateEnum: Conversion[Schema.DatacenterConnector.StateEnum, Option[Schema.DatacenterConnector.StateEnum]] = (fun: Schema.DatacenterConnector.StateEnum) => Option(fun)
		given putSchemaAvailableUpdates: Conversion[Schema.AvailableUpdates, Option[Schema.AvailableUpdates]] = (fun: Schema.AvailableUpdates) => Option(fun)
		given putSchemaUpgradeStatus: Conversion[Schema.UpgradeStatus, Option[Schema.UpgradeStatus]] = (fun: Schema.UpgradeStatus) => Option(fun)
		given putSchemaApplianceVersion: Conversion[Schema.ApplianceVersion, Option[Schema.ApplianceVersion]] = (fun: Schema.ApplianceVersion) => Option(fun)
		given putSchemaUpgradeStatusStateEnum: Conversion[Schema.UpgradeStatus.StateEnum, Option[Schema.UpgradeStatus.StateEnum]] = (fun: Schema.UpgradeStatus.StateEnum) => Option(fun)
		given putSchemaComputeEngineTargetDefaults: Conversion[Schema.ComputeEngineTargetDefaults, Option[Schema.ComputeEngineTargetDefaults]] = (fun: Schema.ComputeEngineTargetDefaults) => Option(fun)
		given putSchemaComputeEngineDisksTargetDefaults: Conversion[Schema.ComputeEngineDisksTargetDefaults, Option[Schema.ComputeEngineDisksTargetDefaults]] = (fun: Schema.ComputeEngineDisksTargetDefaults) => Option(fun)
		given putSchemaVmwareSourceVmDetails: Conversion[Schema.VmwareSourceVmDetails, Option[Schema.VmwareSourceVmDetails]] = (fun: Schema.VmwareSourceVmDetails) => Option(fun)
		given putSchemaAwsSourceVmDetails: Conversion[Schema.AwsSourceVmDetails, Option[Schema.AwsSourceVmDetails]] = (fun: Schema.AwsSourceVmDetails) => Option(fun)
		given putSchemaAzureSourceVmDetails: Conversion[Schema.AzureSourceVmDetails, Option[Schema.AzureSourceVmDetails]] = (fun: Schema.AzureSourceVmDetails) => Option(fun)
		given putSchemaSchedulePolicy: Conversion[Schema.SchedulePolicy, Option[Schema.SchedulePolicy]] = (fun: Schema.SchedulePolicy) => Option(fun)
		given putSchemaReplicationSync: Conversion[Schema.ReplicationSync, Option[Schema.ReplicationSync]] = (fun: Schema.ReplicationSync) => Option(fun)
		given putSchemaMigratingVmStateEnum: Conversion[Schema.MigratingVm.StateEnum, Option[Schema.MigratingVm.StateEnum]] = (fun: Schema.MigratingVm.StateEnum) => Option(fun)
		given putSchemaReplicationCycle: Conversion[Schema.ReplicationCycle, Option[Schema.ReplicationCycle]] = (fun: Schema.ReplicationCycle) => Option(fun)
		given putListSchemaCloneJob: Conversion[List[Schema.CloneJob], Option[List[Schema.CloneJob]]] = (fun: List[Schema.CloneJob]) => Option(fun)
		given putListSchemaCutoverJob: Conversion[List[Schema.CutoverJob], Option[List[Schema.CutoverJob]]] = (fun: List[Schema.CutoverJob]) => Option(fun)
		given putSchemaCutoverForecast: Conversion[Schema.CutoverForecast, Option[Schema.CutoverForecast]] = (fun: Schema.CutoverForecast) => Option(fun)
		given putListSchemaNetworkInterface: Conversion[List[Schema.NetworkInterface], Option[List[Schema.NetworkInterface]]] = (fun: List[Schema.NetworkInterface]) => Option(fun)
		given putSchemaComputeEngineTargetDefaultsDiskTypeEnum: Conversion[Schema.ComputeEngineTargetDefaults.DiskTypeEnum, Option[Schema.ComputeEngineTargetDefaults.DiskTypeEnum]] = (fun: Schema.ComputeEngineTargetDefaults.DiskTypeEnum) => Option(fun)
		given putSchemaComputeEngineTargetDefaultsLicenseTypeEnum: Conversion[Schema.ComputeEngineTargetDefaults.LicenseTypeEnum, Option[Schema.ComputeEngineTargetDefaults.LicenseTypeEnum]] = (fun: Schema.ComputeEngineTargetDefaults.LicenseTypeEnum) => Option(fun)
		given putSchemaAppliedLicense: Conversion[Schema.AppliedLicense, Option[Schema.AppliedLicense]] = (fun: Schema.AppliedLicense) => Option(fun)
		given putSchemaComputeScheduling: Conversion[Schema.ComputeScheduling, Option[Schema.ComputeScheduling]] = (fun: Schema.ComputeScheduling) => Option(fun)
		given putSchemaComputeEngineTargetDefaultsBootOptionEnum: Conversion[Schema.ComputeEngineTargetDefaults.BootOptionEnum, Option[Schema.ComputeEngineTargetDefaults.BootOptionEnum]] = (fun: Schema.ComputeEngineTargetDefaults.BootOptionEnum) => Option(fun)
		given putSchemaComputeEngineTargetDefaultsBootConversionEnum: Conversion[Schema.ComputeEngineTargetDefaults.BootConversionEnum, Option[Schema.ComputeEngineTargetDefaults.BootConversionEnum]] = (fun: Schema.ComputeEngineTargetDefaults.BootConversionEnum) => Option(fun)
		given putSchemaNetworkInterfaceNetworkTierEnum: Conversion[Schema.NetworkInterface.NetworkTierEnum, Option[Schema.NetworkInterface.NetworkTierEnum]] = (fun: Schema.NetworkInterface.NetworkTierEnum) => Option(fun)
		given putSchemaAppliedLicenseTypeEnum: Conversion[Schema.AppliedLicense.TypeEnum, Option[Schema.AppliedLicense.TypeEnum]] = (fun: Schema.AppliedLicense.TypeEnum) => Option(fun)
		given putSchemaComputeSchedulingOnHostMaintenanceEnum: Conversion[Schema.ComputeScheduling.OnHostMaintenanceEnum, Option[Schema.ComputeScheduling.OnHostMaintenanceEnum]] = (fun: Schema.ComputeScheduling.OnHostMaintenanceEnum) => Option(fun)
		given putSchemaComputeSchedulingRestartTypeEnum: Conversion[Schema.ComputeScheduling.RestartTypeEnum, Option[Schema.ComputeScheduling.RestartTypeEnum]] = (fun: Schema.ComputeScheduling.RestartTypeEnum) => Option(fun)
		given putListSchemaSchedulingNodeAffinity: Conversion[List[Schema.SchedulingNodeAffinity], Option[List[Schema.SchedulingNodeAffinity]]] = (fun: List[Schema.SchedulingNodeAffinity]) => Option(fun)
		given putSchemaSchedulingNodeAffinityOperatorEnum: Conversion[Schema.SchedulingNodeAffinity.OperatorEnum, Option[Schema.SchedulingNodeAffinity.OperatorEnum]] = (fun: Schema.SchedulingNodeAffinity.OperatorEnum) => Option(fun)
		given putSchemaDisksMigrationDisksTargetDefaults: Conversion[Schema.DisksMigrationDisksTargetDefaults, Option[Schema.DisksMigrationDisksTargetDefaults]] = (fun: Schema.DisksMigrationDisksTargetDefaults) => Option(fun)
		given putSchemaDisksMigrationVmTargetDefaults: Conversion[Schema.DisksMigrationVmTargetDefaults, Option[Schema.DisksMigrationVmTargetDefaults]] = (fun: Schema.DisksMigrationVmTargetDefaults) => Option(fun)
		given putListSchemaPersistentDiskDefaults: Conversion[List[Schema.PersistentDiskDefaults], Option[List[Schema.PersistentDiskDefaults]]] = (fun: List[Schema.PersistentDiskDefaults]) => Option(fun)
		given putSchemaBootDiskDefaults: Conversion[Schema.BootDiskDefaults, Option[Schema.BootDiskDefaults]] = (fun: Schema.BootDiskDefaults) => Option(fun)
		given putSchemaDiskImageDefaults: Conversion[Schema.DiskImageDefaults, Option[Schema.DiskImageDefaults]] = (fun: Schema.DiskImageDefaults) => Option(fun)
		given putSchemaBootDiskDefaultsDiskTypeEnum: Conversion[Schema.BootDiskDefaults.DiskTypeEnum, Option[Schema.BootDiskDefaults.DiskTypeEnum]] = (fun: Schema.BootDiskDefaults.DiskTypeEnum) => Option(fun)
		given putSchemaPersistentDiskDefaultsDiskTypeEnum: Conversion[Schema.PersistentDiskDefaults.DiskTypeEnum, Option[Schema.PersistentDiskDefaults.DiskTypeEnum]] = (fun: Schema.PersistentDiskDefaults.DiskTypeEnum) => Option(fun)
		given putSchemaVmAttachmentDetails: Conversion[Schema.VmAttachmentDetails, Option[Schema.VmAttachmentDetails]] = (fun: Schema.VmAttachmentDetails) => Option(fun)
		given putSchemaVmwareSourceVmDetailsFirmwareEnum: Conversion[Schema.VmwareSourceVmDetails.FirmwareEnum, Option[Schema.VmwareSourceVmDetails.FirmwareEnum]] = (fun: Schema.VmwareSourceVmDetails.FirmwareEnum) => Option(fun)
		given putListSchemaVmwareDiskDetails: Conversion[List[Schema.VmwareDiskDetails], Option[List[Schema.VmwareDiskDetails]]] = (fun: List[Schema.VmwareDiskDetails]) => Option(fun)
		given putSchemaVmCapabilities: Conversion[Schema.VmCapabilities, Option[Schema.VmCapabilities]] = (fun: Schema.VmCapabilities) => Option(fun)
		given putSchemaVmwareSourceVmDetailsArchitectureEnum: Conversion[Schema.VmwareSourceVmDetails.ArchitectureEnum, Option[Schema.VmwareSourceVmDetails.ArchitectureEnum]] = (fun: Schema.VmwareSourceVmDetails.ArchitectureEnum) => Option(fun)
		given putListSchemaVmCapabilitiesOsCapabilitiesEnum: Conversion[List[Schema.VmCapabilities.OsCapabilitiesEnum], Option[List[Schema.VmCapabilities.OsCapabilitiesEnum]]] = (fun: List[Schema.VmCapabilities.OsCapabilitiesEnum]) => Option(fun)
		given putSchemaAwsSourceVmDetailsFirmwareEnum: Conversion[Schema.AwsSourceVmDetails.FirmwareEnum, Option[Schema.AwsSourceVmDetails.FirmwareEnum]] = (fun: Schema.AwsSourceVmDetails.FirmwareEnum) => Option(fun)
		given putListSchemaAwsDiskDetails: Conversion[List[Schema.AwsDiskDetails], Option[List[Schema.AwsDiskDetails]]] = (fun: List[Schema.AwsDiskDetails]) => Option(fun)
		given putSchemaAwsSourceVmDetailsArchitectureEnum: Conversion[Schema.AwsSourceVmDetails.ArchitectureEnum, Option[Schema.AwsSourceVmDetails.ArchitectureEnum]] = (fun: Schema.AwsSourceVmDetails.ArchitectureEnum) => Option(fun)
		given putSchemaAzureSourceVmDetailsFirmwareEnum: Conversion[Schema.AzureSourceVmDetails.FirmwareEnum, Option[Schema.AzureSourceVmDetails.FirmwareEnum]] = (fun: Schema.AzureSourceVmDetails.FirmwareEnum) => Option(fun)
		given putListSchemaAzureDiskDetails: Conversion[List[Schema.AzureDiskDetails], Option[List[Schema.AzureDiskDetails]]] = (fun: List[Schema.AzureDiskDetails]) => Option(fun)
		given putSchemaAzureSourceVmDetailsArchitectureEnum: Conversion[Schema.AzureSourceVmDetails.ArchitectureEnum, Option[Schema.AzureSourceVmDetails.ArchitectureEnum]] = (fun: Schema.AzureSourceVmDetails.ArchitectureEnum) => Option(fun)
		given putListSchemaCycleStep: Conversion[List[Schema.CycleStep], Option[List[Schema.CycleStep]]] = (fun: List[Schema.CycleStep]) => Option(fun)
		given putSchemaReplicationCycleStateEnum: Conversion[Schema.ReplicationCycle.StateEnum, Option[Schema.ReplicationCycle.StateEnum]] = (fun: Schema.ReplicationCycle.StateEnum) => Option(fun)
		given putListSchemaMigrationWarning: Conversion[List[Schema.MigrationWarning], Option[List[Schema.MigrationWarning]]] = (fun: List[Schema.MigrationWarning]) => Option(fun)
		given putSchemaInitializingReplicationStep: Conversion[Schema.InitializingReplicationStep, Option[Schema.InitializingReplicationStep]] = (fun: Schema.InitializingReplicationStep) => Option(fun)
		given putSchemaReplicatingStep: Conversion[Schema.ReplicatingStep, Option[Schema.ReplicatingStep]] = (fun: Schema.ReplicatingStep) => Option(fun)
		given putSchemaPostProcessingStep: Conversion[Schema.PostProcessingStep, Option[Schema.PostProcessingStep]] = (fun: Schema.PostProcessingStep) => Option(fun)
		given putSchemaMigrationWarningCodeEnum: Conversion[Schema.MigrationWarning.CodeEnum, Option[Schema.MigrationWarning.CodeEnum]] = (fun: Schema.MigrationWarning.CodeEnum) => Option(fun)
		given putSchemaLocalizedMessage: Conversion[Schema.LocalizedMessage, Option[Schema.LocalizedMessage]] = (fun: Schema.LocalizedMessage) => Option(fun)
		given putListSchemaLink: Conversion[List[Schema.Link], Option[List[Schema.Link]]] = (fun: List[Schema.Link]) => Option(fun)
		given putSchemaComputeEngineTargetDetails: Conversion[Schema.ComputeEngineTargetDetails, Option[Schema.ComputeEngineTargetDetails]] = (fun: Schema.ComputeEngineTargetDetails) => Option(fun)
		given putSchemaComputeEngineDisksTargetDetails: Conversion[Schema.ComputeEngineDisksTargetDetails, Option[Schema.ComputeEngineDisksTargetDetails]] = (fun: Schema.ComputeEngineDisksTargetDetails) => Option(fun)
		given putSchemaCloneJobStateEnum: Conversion[Schema.CloneJob.StateEnum, Option[Schema.CloneJob.StateEnum]] = (fun: Schema.CloneJob.StateEnum) => Option(fun)
		given putListSchemaCloneStep: Conversion[List[Schema.CloneStep], Option[List[Schema.CloneStep]]] = (fun: List[Schema.CloneStep]) => Option(fun)
		given putSchemaComputeEngineTargetDetailsDiskTypeEnum: Conversion[Schema.ComputeEngineTargetDetails.DiskTypeEnum, Option[Schema.ComputeEngineTargetDetails.DiskTypeEnum]] = (fun: Schema.ComputeEngineTargetDetails.DiskTypeEnum) => Option(fun)
		given putSchemaComputeEngineTargetDetailsLicenseTypeEnum: Conversion[Schema.ComputeEngineTargetDetails.LicenseTypeEnum, Option[Schema.ComputeEngineTargetDetails.LicenseTypeEnum]] = (fun: Schema.ComputeEngineTargetDetails.LicenseTypeEnum) => Option(fun)
		given putSchemaComputeEngineTargetDetailsBootOptionEnum: Conversion[Schema.ComputeEngineTargetDetails.BootOptionEnum, Option[Schema.ComputeEngineTargetDetails.BootOptionEnum]] = (fun: Schema.ComputeEngineTargetDetails.BootOptionEnum) => Option(fun)
		given putSchemaComputeEngineTargetDetailsBootConversionEnum: Conversion[Schema.ComputeEngineTargetDetails.BootConversionEnum, Option[Schema.ComputeEngineTargetDetails.BootConversionEnum]] = (fun: Schema.ComputeEngineTargetDetails.BootConversionEnum) => Option(fun)
		given putSchemaDisksMigrationDisksTargetDetails: Conversion[Schema.DisksMigrationDisksTargetDetails, Option[Schema.DisksMigrationDisksTargetDetails]] = (fun: Schema.DisksMigrationDisksTargetDetails) => Option(fun)
		given putSchemaDisksMigrationVmTargetDetails: Conversion[Schema.DisksMigrationVmTargetDetails, Option[Schema.DisksMigrationVmTargetDetails]] = (fun: Schema.DisksMigrationVmTargetDetails) => Option(fun)
		given putListSchemaPersistentDisk: Conversion[List[Schema.PersistentDisk], Option[List[Schema.PersistentDisk]]] = (fun: List[Schema.PersistentDisk]) => Option(fun)
		given putSchemaAdaptingOSStep: Conversion[Schema.AdaptingOSStep, Option[Schema.AdaptingOSStep]] = (fun: Schema.AdaptingOSStep) => Option(fun)
		given putSchemaPreparingVMDisksStep: Conversion[Schema.PreparingVMDisksStep, Option[Schema.PreparingVMDisksStep]] = (fun: Schema.PreparingVMDisksStep) => Option(fun)
		given putSchemaInstantiatingMigratedVMStep: Conversion[Schema.InstantiatingMigratedVMStep, Option[Schema.InstantiatingMigratedVMStep]] = (fun: Schema.InstantiatingMigratedVMStep) => Option(fun)
		given putSchemaCutoverJobStateEnum: Conversion[Schema.CutoverJob.StateEnum, Option[Schema.CutoverJob.StateEnum]] = (fun: Schema.CutoverJob.StateEnum) => Option(fun)
		given putListSchemaCutoverStep: Conversion[List[Schema.CutoverStep], Option[List[Schema.CutoverStep]]] = (fun: List[Schema.CutoverStep]) => Option(fun)
		given putSchemaShuttingDownSourceVMStep: Conversion[Schema.ShuttingDownSourceVMStep, Option[Schema.ShuttingDownSourceVMStep]] = (fun: Schema.ShuttingDownSourceVMStep) => Option(fun)
		given putListSchemaMigratingVm: Conversion[List[Schema.MigratingVm], Option[List[Schema.MigratingVm]]] = (fun: List[Schema.MigratingVm]) => Option(fun)
		given putListSchemaGroup: Conversion[List[Schema.Group], Option[List[Schema.Group]]] = (fun: List[Schema.Group]) => Option(fun)
		given putSchemaGroupMigrationTargetTypeEnum: Conversion[Schema.Group.MigrationTargetTypeEnum, Option[Schema.Group.MigrationTargetTypeEnum]] = (fun: Schema.Group.MigrationTargetTypeEnum) => Option(fun)
		given putListSchemaTargetProject: Conversion[List[Schema.TargetProject], Option[List[Schema.TargetProject]]] = (fun: List[Schema.TargetProject]) => Option(fun)
		given putListSchemaReplicationCycle: Conversion[List[Schema.ReplicationCycle], Option[List[Schema.ReplicationCycle]]] = (fun: List[Schema.ReplicationCycle]) => Option(fun)
		given putListSchemaImageImport: Conversion[List[Schema.ImageImport], Option[List[Schema.ImageImport]]] = (fun: List[Schema.ImageImport]) => Option(fun)
		given putSchemaDiskImageTargetDetails: Conversion[Schema.DiskImageTargetDetails, Option[Schema.DiskImageTargetDetails]] = (fun: Schema.DiskImageTargetDetails) => Option(fun)
		given putSchemaMachineImageTargetDetails: Conversion[Schema.MachineImageTargetDetails, Option[Schema.MachineImageTargetDetails]] = (fun: Schema.MachineImageTargetDetails) => Option(fun)
		given putListSchemaImageImportJob: Conversion[List[Schema.ImageImportJob], Option[List[Schema.ImageImportJob]]] = (fun: List[Schema.ImageImportJob]) => Option(fun)
		given putSchemaImageImportOsAdaptationParameters: Conversion[Schema.ImageImportOsAdaptationParameters, Option[Schema.ImageImportOsAdaptationParameters]] = (fun: Schema.ImageImportOsAdaptationParameters) => Option(fun)
		given putSchemaDataDiskImageImport: Conversion[Schema.DataDiskImageImport, Option[Schema.DataDiskImageImport]] = (fun: Schema.DataDiskImageImport) => Option(fun)
		given putSchemaImageImportOsAdaptationParametersLicenseTypeEnum: Conversion[Schema.ImageImportOsAdaptationParameters.LicenseTypeEnum, Option[Schema.ImageImportOsAdaptationParameters.LicenseTypeEnum]] = (fun: Schema.ImageImportOsAdaptationParameters.LicenseTypeEnum) => Option(fun)
		given putSchemaSkipOsAdaptation: Conversion[Schema.SkipOsAdaptation, Option[Schema.SkipOsAdaptation]] = (fun: Schema.SkipOsAdaptation) => Option(fun)
		given putSchemaMachineImageParametersOverrides: Conversion[Schema.MachineImageParametersOverrides, Option[Schema.MachineImageParametersOverrides]] = (fun: Schema.MachineImageParametersOverrides) => Option(fun)
		given putSchemaServiceAccount: Conversion[Schema.ServiceAccount, Option[Schema.ServiceAccount]] = (fun: Schema.ServiceAccount) => Option(fun)
		given putSchemaShieldedInstanceConfig: Conversion[Schema.ShieldedInstanceConfig, Option[Schema.ShieldedInstanceConfig]] = (fun: Schema.ShieldedInstanceConfig) => Option(fun)
		given putSchemaShieldedInstanceConfigSecureBootEnum: Conversion[Schema.ShieldedInstanceConfig.SecureBootEnum, Option[Schema.ShieldedInstanceConfig.SecureBootEnum]] = (fun: Schema.ShieldedInstanceConfig.SecureBootEnum) => Option(fun)
		given putSchemaImageImportJobStateEnum: Conversion[Schema.ImageImportJob.StateEnum, Option[Schema.ImageImportJob.StateEnum]] = (fun: Schema.ImageImportJob.StateEnum) => Option(fun)
		given putListSchemaStatus: Conversion[List[Schema.Status], Option[List[Schema.Status]]] = (fun: List[Schema.Status]) => Option(fun)
		given putListSchemaImageImportStep: Conversion[List[Schema.ImageImportStep], Option[List[Schema.ImageImportStep]]] = (fun: List[Schema.ImageImportStep]) => Option(fun)
		given putSchemaInitializingImageImportStep: Conversion[Schema.InitializingImageImportStep, Option[Schema.InitializingImageImportStep]] = (fun: Schema.InitializingImageImportStep) => Option(fun)
		given putSchemaLoadingImageSourceFilesStep: Conversion[Schema.LoadingImageSourceFilesStep, Option[Schema.LoadingImageSourceFilesStep]] = (fun: Schema.LoadingImageSourceFilesStep) => Option(fun)
		given putSchemaCreatingImageStep: Conversion[Schema.CreatingImageStep, Option[Schema.CreatingImageStep]] = (fun: Schema.CreatingImageStep) => Option(fun)
		given putListSchemaLocation: Conversion[List[Schema.Location], Option[List[Schema.Location]]] = (fun: List[Schema.Location]) => Option(fun)
		given putSchemaMigrationErrorCodeEnum: Conversion[Schema.MigrationError.CodeEnum, Option[Schema.MigrationError.CodeEnum]] = (fun: Schema.MigrationError.CodeEnum) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
