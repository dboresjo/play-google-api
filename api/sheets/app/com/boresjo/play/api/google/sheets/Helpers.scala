package com.boresjo.play.api.google.sheets

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putSchemaValueRangeMajorDimensionEnum: Conversion[Schema.ValueRange.MajorDimensionEnum, Option[Schema.ValueRange.MajorDimensionEnum]] = (fun: Schema.ValueRange.MajorDimensionEnum) => Option(fun)
		given putListListJsValue: Conversion[List[List[JsValue]], Option[List[List[JsValue]]]] = (fun: List[List[JsValue]]) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putSchemaValueRange: Conversion[Schema.ValueRange, Option[Schema.ValueRange]] = (fun: Schema.ValueRange) => Option(fun)
		given putSchemaUpdateValuesResponse: Conversion[Schema.UpdateValuesResponse, Option[Schema.UpdateValuesResponse]] = (fun: Schema.UpdateValuesResponse) => Option(fun)
		given putListSchemaValueRange: Conversion[List[Schema.ValueRange], Option[List[Schema.ValueRange]]] = (fun: List[Schema.ValueRange]) => Option(fun)
		given putSchemaBatchUpdateValuesRequestValueInputOptionEnum: Conversion[Schema.BatchUpdateValuesRequest.ValueInputOptionEnum, Option[Schema.BatchUpdateValuesRequest.ValueInputOptionEnum]] = (fun: Schema.BatchUpdateValuesRequest.ValueInputOptionEnum) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaBatchUpdateValuesRequestResponseValueRenderOptionEnum: Conversion[Schema.BatchUpdateValuesRequest.ResponseValueRenderOptionEnum, Option[Schema.BatchUpdateValuesRequest.ResponseValueRenderOptionEnum]] = (fun: Schema.BatchUpdateValuesRequest.ResponseValueRenderOptionEnum) => Option(fun)
		given putSchemaBatchUpdateValuesRequestResponseDateTimeRenderOptionEnum: Conversion[Schema.BatchUpdateValuesRequest.ResponseDateTimeRenderOptionEnum, Option[Schema.BatchUpdateValuesRequest.ResponseDateTimeRenderOptionEnum]] = (fun: Schema.BatchUpdateValuesRequest.ResponseDateTimeRenderOptionEnum) => Option(fun)
		given putListSchemaUpdateValuesResponse: Conversion[List[Schema.UpdateValuesResponse], Option[List[Schema.UpdateValuesResponse]]] = (fun: List[Schema.UpdateValuesResponse]) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putListSchemaDataFilter: Conversion[List[Schema.DataFilter], Option[List[Schema.DataFilter]]] = (fun: List[Schema.DataFilter]) => Option(fun)
		given putSchemaBatchGetValuesByDataFilterRequestMajorDimensionEnum: Conversion[Schema.BatchGetValuesByDataFilterRequest.MajorDimensionEnum, Option[Schema.BatchGetValuesByDataFilterRequest.MajorDimensionEnum]] = (fun: Schema.BatchGetValuesByDataFilterRequest.MajorDimensionEnum) => Option(fun)
		given putSchemaBatchGetValuesByDataFilterRequestValueRenderOptionEnum: Conversion[Schema.BatchGetValuesByDataFilterRequest.ValueRenderOptionEnum, Option[Schema.BatchGetValuesByDataFilterRequest.ValueRenderOptionEnum]] = (fun: Schema.BatchGetValuesByDataFilterRequest.ValueRenderOptionEnum) => Option(fun)
		given putSchemaBatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum: Conversion[Schema.BatchGetValuesByDataFilterRequest.DateTimeRenderOptionEnum, Option[Schema.BatchGetValuesByDataFilterRequest.DateTimeRenderOptionEnum]] = (fun: Schema.BatchGetValuesByDataFilterRequest.DateTimeRenderOptionEnum) => Option(fun)
		given putSchemaDeveloperMetadataLookup: Conversion[Schema.DeveloperMetadataLookup, Option[Schema.DeveloperMetadataLookup]] = (fun: Schema.DeveloperMetadataLookup) => Option(fun)
		given putSchemaGridRange: Conversion[Schema.GridRange, Option[Schema.GridRange]] = (fun: Schema.GridRange) => Option(fun)
		given putSchemaDeveloperMetadataLookupLocationTypeEnum: Conversion[Schema.DeveloperMetadataLookup.LocationTypeEnum, Option[Schema.DeveloperMetadataLookup.LocationTypeEnum]] = (fun: Schema.DeveloperMetadataLookup.LocationTypeEnum) => Option(fun)
		given putSchemaDeveloperMetadataLocation: Conversion[Schema.DeveloperMetadataLocation, Option[Schema.DeveloperMetadataLocation]] = (fun: Schema.DeveloperMetadataLocation) => Option(fun)
		given putSchemaDeveloperMetadataLookupLocationMatchingStrategyEnum: Conversion[Schema.DeveloperMetadataLookup.LocationMatchingStrategyEnum, Option[Schema.DeveloperMetadataLookup.LocationMatchingStrategyEnum]] = (fun: Schema.DeveloperMetadataLookup.LocationMatchingStrategyEnum) => Option(fun)
		given putSchemaDeveloperMetadataLookupVisibilityEnum: Conversion[Schema.DeveloperMetadataLookup.VisibilityEnum, Option[Schema.DeveloperMetadataLookup.VisibilityEnum]] = (fun: Schema.DeveloperMetadataLookup.VisibilityEnum) => Option(fun)
		given putSchemaDeveloperMetadataLocationLocationTypeEnum: Conversion[Schema.DeveloperMetadataLocation.LocationTypeEnum, Option[Schema.DeveloperMetadataLocation.LocationTypeEnum]] = (fun: Schema.DeveloperMetadataLocation.LocationTypeEnum) => Option(fun)
		given putSchemaDimensionRange: Conversion[Schema.DimensionRange, Option[Schema.DimensionRange]] = (fun: Schema.DimensionRange) => Option(fun)
		given putSchemaDimensionRangeDimensionEnum: Conversion[Schema.DimensionRange.DimensionEnum, Option[Schema.DimensionRange.DimensionEnum]] = (fun: Schema.DimensionRange.DimensionEnum) => Option(fun)
		given putListSchemaMatchedValueRange: Conversion[List[Schema.MatchedValueRange], Option[List[Schema.MatchedValueRange]]] = (fun: List[Schema.MatchedValueRange]) => Option(fun)
		given putSchemaBatchUpdateValuesByDataFilterRequestValueInputOptionEnum: Conversion[Schema.BatchUpdateValuesByDataFilterRequest.ValueInputOptionEnum, Option[Schema.BatchUpdateValuesByDataFilterRequest.ValueInputOptionEnum]] = (fun: Schema.BatchUpdateValuesByDataFilterRequest.ValueInputOptionEnum) => Option(fun)
		given putListSchemaDataFilterValueRange: Conversion[List[Schema.DataFilterValueRange], Option[List[Schema.DataFilterValueRange]]] = (fun: List[Schema.DataFilterValueRange]) => Option(fun)
		given putSchemaBatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum: Conversion[Schema.BatchUpdateValuesByDataFilterRequest.ResponseValueRenderOptionEnum, Option[Schema.BatchUpdateValuesByDataFilterRequest.ResponseValueRenderOptionEnum]] = (fun: Schema.BatchUpdateValuesByDataFilterRequest.ResponseValueRenderOptionEnum) => Option(fun)
		given putSchemaBatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnum: Conversion[Schema.BatchUpdateValuesByDataFilterRequest.ResponseDateTimeRenderOptionEnum, Option[Schema.BatchUpdateValuesByDataFilterRequest.ResponseDateTimeRenderOptionEnum]] = (fun: Schema.BatchUpdateValuesByDataFilterRequest.ResponseDateTimeRenderOptionEnum) => Option(fun)
		given putSchemaDataFilter: Conversion[Schema.DataFilter, Option[Schema.DataFilter]] = (fun: Schema.DataFilter) => Option(fun)
		given putSchemaDataFilterValueRangeMajorDimensionEnum: Conversion[Schema.DataFilterValueRange.MajorDimensionEnum, Option[Schema.DataFilterValueRange.MajorDimensionEnum]] = (fun: Schema.DataFilterValueRange.MajorDimensionEnum) => Option(fun)
		given putListSchemaUpdateValuesByDataFilterResponse: Conversion[List[Schema.UpdateValuesByDataFilterResponse], Option[List[Schema.UpdateValuesByDataFilterResponse]]] = (fun: List[Schema.UpdateValuesByDataFilterResponse]) => Option(fun)
		given putSchemaDeveloperMetadataVisibilityEnum: Conversion[Schema.DeveloperMetadata.VisibilityEnum, Option[Schema.DeveloperMetadata.VisibilityEnum]] = (fun: Schema.DeveloperMetadata.VisibilityEnum) => Option(fun)
		given putListSchemaMatchedDeveloperMetadata: Conversion[List[Schema.MatchedDeveloperMetadata], Option[List[Schema.MatchedDeveloperMetadata]]] = (fun: List[Schema.MatchedDeveloperMetadata]) => Option(fun)
		given putSchemaDeveloperMetadata: Conversion[Schema.DeveloperMetadata, Option[Schema.DeveloperMetadata]] = (fun: Schema.DeveloperMetadata) => Option(fun)
		given putSchemaSpreadsheetProperties: Conversion[Schema.SpreadsheetProperties, Option[Schema.SpreadsheetProperties]] = (fun: Schema.SpreadsheetProperties) => Option(fun)
		given putListSchemaSheet: Conversion[List[Schema.Sheet], Option[List[Schema.Sheet]]] = (fun: List[Schema.Sheet]) => Option(fun)
		given putListSchemaNamedRange: Conversion[List[Schema.NamedRange], Option[List[Schema.NamedRange]]] = (fun: List[Schema.NamedRange]) => Option(fun)
		given putListSchemaDeveloperMetadata: Conversion[List[Schema.DeveloperMetadata], Option[List[Schema.DeveloperMetadata]]] = (fun: List[Schema.DeveloperMetadata]) => Option(fun)
		given putListSchemaDataSource: Conversion[List[Schema.DataSource], Option[List[Schema.DataSource]]] = (fun: List[Schema.DataSource]) => Option(fun)
		given putListSchemaDataSourceRefreshSchedule: Conversion[List[Schema.DataSourceRefreshSchedule], Option[List[Schema.DataSourceRefreshSchedule]]] = (fun: List[Schema.DataSourceRefreshSchedule]) => Option(fun)
		given putSchemaSpreadsheetPropertiesAutoRecalcEnum: Conversion[Schema.SpreadsheetProperties.AutoRecalcEnum, Option[Schema.SpreadsheetProperties.AutoRecalcEnum]] = (fun: Schema.SpreadsheetProperties.AutoRecalcEnum) => Option(fun)
		given putSchemaCellFormat: Conversion[Schema.CellFormat, Option[Schema.CellFormat]] = (fun: Schema.CellFormat) => Option(fun)
		given putSchemaIterativeCalculationSettings: Conversion[Schema.IterativeCalculationSettings, Option[Schema.IterativeCalculationSettings]] = (fun: Schema.IterativeCalculationSettings) => Option(fun)
		given putSchemaSpreadsheetTheme: Conversion[Schema.SpreadsheetTheme, Option[Schema.SpreadsheetTheme]] = (fun: Schema.SpreadsheetTheme) => Option(fun)
		given putSchemaNumberFormat: Conversion[Schema.NumberFormat, Option[Schema.NumberFormat]] = (fun: Schema.NumberFormat) => Option(fun)
		given putSchemaColor: Conversion[Schema.Color, Option[Schema.Color]] = (fun: Schema.Color) => Option(fun)
		given putSchemaColorStyle: Conversion[Schema.ColorStyle, Option[Schema.ColorStyle]] = (fun: Schema.ColorStyle) => Option(fun)
		given putSchemaBorders: Conversion[Schema.Borders, Option[Schema.Borders]] = (fun: Schema.Borders) => Option(fun)
		given putSchemaPadding: Conversion[Schema.Padding, Option[Schema.Padding]] = (fun: Schema.Padding) => Option(fun)
		given putSchemaCellFormatHorizontalAlignmentEnum: Conversion[Schema.CellFormat.HorizontalAlignmentEnum, Option[Schema.CellFormat.HorizontalAlignmentEnum]] = (fun: Schema.CellFormat.HorizontalAlignmentEnum) => Option(fun)
		given putSchemaCellFormatVerticalAlignmentEnum: Conversion[Schema.CellFormat.VerticalAlignmentEnum, Option[Schema.CellFormat.VerticalAlignmentEnum]] = (fun: Schema.CellFormat.VerticalAlignmentEnum) => Option(fun)
		given putSchemaCellFormatWrapStrategyEnum: Conversion[Schema.CellFormat.WrapStrategyEnum, Option[Schema.CellFormat.WrapStrategyEnum]] = (fun: Schema.CellFormat.WrapStrategyEnum) => Option(fun)
		given putSchemaCellFormatTextDirectionEnum: Conversion[Schema.CellFormat.TextDirectionEnum, Option[Schema.CellFormat.TextDirectionEnum]] = (fun: Schema.CellFormat.TextDirectionEnum) => Option(fun)
		given putSchemaTextFormat: Conversion[Schema.TextFormat, Option[Schema.TextFormat]] = (fun: Schema.TextFormat) => Option(fun)
		given putSchemaCellFormatHyperlinkDisplayTypeEnum: Conversion[Schema.CellFormat.HyperlinkDisplayTypeEnum, Option[Schema.CellFormat.HyperlinkDisplayTypeEnum]] = (fun: Schema.CellFormat.HyperlinkDisplayTypeEnum) => Option(fun)
		given putSchemaTextRotation: Conversion[Schema.TextRotation, Option[Schema.TextRotation]] = (fun: Schema.TextRotation) => Option(fun)
		given putSchemaNumberFormatTypeEnum: Conversion[Schema.NumberFormat.TypeEnum, Option[Schema.NumberFormat.TypeEnum]] = (fun: Schema.NumberFormat.TypeEnum) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaColorStyleThemeColorEnum: Conversion[Schema.ColorStyle.ThemeColorEnum, Option[Schema.ColorStyle.ThemeColorEnum]] = (fun: Schema.ColorStyle.ThemeColorEnum) => Option(fun)
		given putSchemaBorder: Conversion[Schema.Border, Option[Schema.Border]] = (fun: Schema.Border) => Option(fun)
		given putSchemaBorderStyleEnum: Conversion[Schema.Border.StyleEnum, Option[Schema.Border.StyleEnum]] = (fun: Schema.Border.StyleEnum) => Option(fun)
		given putSchemaLink: Conversion[Schema.Link, Option[Schema.Link]] = (fun: Schema.Link) => Option(fun)
		given putListSchemaThemeColorPair: Conversion[List[Schema.ThemeColorPair], Option[List[Schema.ThemeColorPair]]] = (fun: List[Schema.ThemeColorPair]) => Option(fun)
		given putSchemaThemeColorPairColorTypeEnum: Conversion[Schema.ThemeColorPair.ColorTypeEnum, Option[Schema.ThemeColorPair.ColorTypeEnum]] = (fun: Schema.ThemeColorPair.ColorTypeEnum) => Option(fun)
		given putSchemaSheetProperties: Conversion[Schema.SheetProperties, Option[Schema.SheetProperties]] = (fun: Schema.SheetProperties) => Option(fun)
		given putListSchemaGridData: Conversion[List[Schema.GridData], Option[List[Schema.GridData]]] = (fun: List[Schema.GridData]) => Option(fun)
		given putListSchemaGridRange: Conversion[List[Schema.GridRange], Option[List[Schema.GridRange]]] = (fun: List[Schema.GridRange]) => Option(fun)
		given putListSchemaConditionalFormatRule: Conversion[List[Schema.ConditionalFormatRule], Option[List[Schema.ConditionalFormatRule]]] = (fun: List[Schema.ConditionalFormatRule]) => Option(fun)
		given putListSchemaFilterView: Conversion[List[Schema.FilterView], Option[List[Schema.FilterView]]] = (fun: List[Schema.FilterView]) => Option(fun)
		given putListSchemaProtectedRange: Conversion[List[Schema.ProtectedRange], Option[List[Schema.ProtectedRange]]] = (fun: List[Schema.ProtectedRange]) => Option(fun)
		given putSchemaBasicFilter: Conversion[Schema.BasicFilter, Option[Schema.BasicFilter]] = (fun: Schema.BasicFilter) => Option(fun)
		given putListSchemaEmbeddedChart: Conversion[List[Schema.EmbeddedChart], Option[List[Schema.EmbeddedChart]]] = (fun: List[Schema.EmbeddedChart]) => Option(fun)
		given putListSchemaBandedRange: Conversion[List[Schema.BandedRange], Option[List[Schema.BandedRange]]] = (fun: List[Schema.BandedRange]) => Option(fun)
		given putListSchemaDimensionGroup: Conversion[List[Schema.DimensionGroup], Option[List[Schema.DimensionGroup]]] = (fun: List[Schema.DimensionGroup]) => Option(fun)
		given putListSchemaSlicer: Conversion[List[Schema.Slicer], Option[List[Schema.Slicer]]] = (fun: List[Schema.Slicer]) => Option(fun)
		given putSchemaSheetPropertiesSheetTypeEnum: Conversion[Schema.SheetProperties.SheetTypeEnum, Option[Schema.SheetProperties.SheetTypeEnum]] = (fun: Schema.SheetProperties.SheetTypeEnum) => Option(fun)
		given putSchemaGridProperties: Conversion[Schema.GridProperties, Option[Schema.GridProperties]] = (fun: Schema.GridProperties) => Option(fun)
		given putSchemaDataSourceSheetProperties: Conversion[Schema.DataSourceSheetProperties, Option[Schema.DataSourceSheetProperties]] = (fun: Schema.DataSourceSheetProperties) => Option(fun)
		given putListSchemaDataSourceColumn: Conversion[List[Schema.DataSourceColumn], Option[List[Schema.DataSourceColumn]]] = (fun: List[Schema.DataSourceColumn]) => Option(fun)
		given putSchemaDataExecutionStatus: Conversion[Schema.DataExecutionStatus, Option[Schema.DataExecutionStatus]] = (fun: Schema.DataExecutionStatus) => Option(fun)
		given putSchemaDataSourceColumnReference: Conversion[Schema.DataSourceColumnReference, Option[Schema.DataSourceColumnReference]] = (fun: Schema.DataSourceColumnReference) => Option(fun)
		given putSchemaDataExecutionStatusStateEnum: Conversion[Schema.DataExecutionStatus.StateEnum, Option[Schema.DataExecutionStatus.StateEnum]] = (fun: Schema.DataExecutionStatus.StateEnum) => Option(fun)
		given putSchemaDataExecutionStatusErrorCodeEnum: Conversion[Schema.DataExecutionStatus.ErrorCodeEnum, Option[Schema.DataExecutionStatus.ErrorCodeEnum]] = (fun: Schema.DataExecutionStatus.ErrorCodeEnum) => Option(fun)
		given putListSchemaRowData: Conversion[List[Schema.RowData], Option[List[Schema.RowData]]] = (fun: List[Schema.RowData]) => Option(fun)
		given putListSchemaDimensionProperties: Conversion[List[Schema.DimensionProperties], Option[List[Schema.DimensionProperties]]] = (fun: List[Schema.DimensionProperties]) => Option(fun)
		given putListSchemaCellData: Conversion[List[Schema.CellData], Option[List[Schema.CellData]]] = (fun: List[Schema.CellData]) => Option(fun)
		given putSchemaExtendedValue: Conversion[Schema.ExtendedValue, Option[Schema.ExtendedValue]] = (fun: Schema.ExtendedValue) => Option(fun)
		given putListSchemaTextFormatRun: Conversion[List[Schema.TextFormatRun], Option[List[Schema.TextFormatRun]]] = (fun: List[Schema.TextFormatRun]) => Option(fun)
		given putSchemaDataValidationRule: Conversion[Schema.DataValidationRule, Option[Schema.DataValidationRule]] = (fun: Schema.DataValidationRule) => Option(fun)
		given putSchemaPivotTable: Conversion[Schema.PivotTable, Option[Schema.PivotTable]] = (fun: Schema.PivotTable) => Option(fun)
		given putSchemaDataSourceTable: Conversion[Schema.DataSourceTable, Option[Schema.DataSourceTable]] = (fun: Schema.DataSourceTable) => Option(fun)
		given putSchemaDataSourceFormula: Conversion[Schema.DataSourceFormula, Option[Schema.DataSourceFormula]] = (fun: Schema.DataSourceFormula) => Option(fun)
		given putSchemaErrorValue: Conversion[Schema.ErrorValue, Option[Schema.ErrorValue]] = (fun: Schema.ErrorValue) => Option(fun)
		given putSchemaErrorValueTypeEnum: Conversion[Schema.ErrorValue.TypeEnum, Option[Schema.ErrorValue.TypeEnum]] = (fun: Schema.ErrorValue.TypeEnum) => Option(fun)
		given putSchemaBooleanCondition: Conversion[Schema.BooleanCondition, Option[Schema.BooleanCondition]] = (fun: Schema.BooleanCondition) => Option(fun)
		given putSchemaBooleanConditionTypeEnum: Conversion[Schema.BooleanCondition.TypeEnum, Option[Schema.BooleanCondition.TypeEnum]] = (fun: Schema.BooleanCondition.TypeEnum) => Option(fun)
		given putListSchemaConditionValue: Conversion[List[Schema.ConditionValue], Option[List[Schema.ConditionValue]]] = (fun: List[Schema.ConditionValue]) => Option(fun)
		given putSchemaConditionValueRelativeDateEnum: Conversion[Schema.ConditionValue.RelativeDateEnum, Option[Schema.ConditionValue.RelativeDateEnum]] = (fun: Schema.ConditionValue.RelativeDateEnum) => Option(fun)
		given putListSchemaPivotGroup: Conversion[List[Schema.PivotGroup], Option[List[Schema.PivotGroup]]] = (fun: List[Schema.PivotGroup]) => Option(fun)
		given putMapStringSchemaPivotFilterCriteria: Conversion[Map[String, Schema.PivotFilterCriteria], Option[Map[String, Schema.PivotFilterCriteria]]] = (fun: Map[String, Schema.PivotFilterCriteria]) => Option(fun)
		given putListSchemaPivotFilterSpec: Conversion[List[Schema.PivotFilterSpec], Option[List[Schema.PivotFilterSpec]]] = (fun: List[Schema.PivotFilterSpec]) => Option(fun)
		given putListSchemaPivotValue: Conversion[List[Schema.PivotValue], Option[List[Schema.PivotValue]]] = (fun: List[Schema.PivotValue]) => Option(fun)
		given putSchemaPivotTableValueLayoutEnum: Conversion[Schema.PivotTable.ValueLayoutEnum, Option[Schema.PivotTable.ValueLayoutEnum]] = (fun: Schema.PivotTable.ValueLayoutEnum) => Option(fun)
		given putListSchemaPivotGroupValueMetadata: Conversion[List[Schema.PivotGroupValueMetadata], Option[List[Schema.PivotGroupValueMetadata]]] = (fun: List[Schema.PivotGroupValueMetadata]) => Option(fun)
		given putSchemaPivotGroupSortOrderEnum: Conversion[Schema.PivotGroup.SortOrderEnum, Option[Schema.PivotGroup.SortOrderEnum]] = (fun: Schema.PivotGroup.SortOrderEnum) => Option(fun)
		given putSchemaPivotGroupSortValueBucket: Conversion[Schema.PivotGroupSortValueBucket, Option[Schema.PivotGroupSortValueBucket]] = (fun: Schema.PivotGroupSortValueBucket) => Option(fun)
		given putSchemaPivotGroupRule: Conversion[Schema.PivotGroupRule, Option[Schema.PivotGroupRule]] = (fun: Schema.PivotGroupRule) => Option(fun)
		given putSchemaPivotGroupLimit: Conversion[Schema.PivotGroupLimit, Option[Schema.PivotGroupLimit]] = (fun: Schema.PivotGroupLimit) => Option(fun)
		given putListSchemaExtendedValue: Conversion[List[Schema.ExtendedValue], Option[List[Schema.ExtendedValue]]] = (fun: List[Schema.ExtendedValue]) => Option(fun)
		given putSchemaManualRule: Conversion[Schema.ManualRule, Option[Schema.ManualRule]] = (fun: Schema.ManualRule) => Option(fun)
		given putSchemaHistogramRule: Conversion[Schema.HistogramRule, Option[Schema.HistogramRule]] = (fun: Schema.HistogramRule) => Option(fun)
		given putSchemaDateTimeRule: Conversion[Schema.DateTimeRule, Option[Schema.DateTimeRule]] = (fun: Schema.DateTimeRule) => Option(fun)
		given putListSchemaManualRuleGroup: Conversion[List[Schema.ManualRuleGroup], Option[List[Schema.ManualRuleGroup]]] = (fun: List[Schema.ManualRuleGroup]) => Option(fun)
		given putSchemaDateTimeRuleTypeEnum: Conversion[Schema.DateTimeRule.TypeEnum, Option[Schema.DateTimeRule.TypeEnum]] = (fun: Schema.DateTimeRule.TypeEnum) => Option(fun)
		given putSchemaPivotFilterCriteria: Conversion[Schema.PivotFilterCriteria, Option[Schema.PivotFilterCriteria]] = (fun: Schema.PivotFilterCriteria) => Option(fun)
		given putSchemaPivotValueSummarizeFunctionEnum: Conversion[Schema.PivotValue.SummarizeFunctionEnum, Option[Schema.PivotValue.SummarizeFunctionEnum]] = (fun: Schema.PivotValue.SummarizeFunctionEnum) => Option(fun)
		given putSchemaPivotValueCalculatedDisplayTypeEnum: Conversion[Schema.PivotValue.CalculatedDisplayTypeEnum, Option[Schema.PivotValue.CalculatedDisplayTypeEnum]] = (fun: Schema.PivotValue.CalculatedDisplayTypeEnum) => Option(fun)
		given putSchemaDataSourceTableColumnSelectionTypeEnum: Conversion[Schema.DataSourceTable.ColumnSelectionTypeEnum, Option[Schema.DataSourceTable.ColumnSelectionTypeEnum]] = (fun: Schema.DataSourceTable.ColumnSelectionTypeEnum) => Option(fun)
		given putListSchemaDataSourceColumnReference: Conversion[List[Schema.DataSourceColumnReference], Option[List[Schema.DataSourceColumnReference]]] = (fun: List[Schema.DataSourceColumnReference]) => Option(fun)
		given putListSchemaFilterSpec: Conversion[List[Schema.FilterSpec], Option[List[Schema.FilterSpec]]] = (fun: List[Schema.FilterSpec]) => Option(fun)
		given putListSchemaSortSpec: Conversion[List[Schema.SortSpec], Option[List[Schema.SortSpec]]] = (fun: List[Schema.SortSpec]) => Option(fun)
		given putSchemaFilterCriteria: Conversion[Schema.FilterCriteria, Option[Schema.FilterCriteria]] = (fun: Schema.FilterCriteria) => Option(fun)
		given putSchemaSortSpecSortOrderEnum: Conversion[Schema.SortSpec.SortOrderEnum, Option[Schema.SortSpec.SortOrderEnum]] = (fun: Schema.SortSpec.SortOrderEnum) => Option(fun)
		given putSchemaBooleanRule: Conversion[Schema.BooleanRule, Option[Schema.BooleanRule]] = (fun: Schema.BooleanRule) => Option(fun)
		given putSchemaGradientRule: Conversion[Schema.GradientRule, Option[Schema.GradientRule]] = (fun: Schema.GradientRule) => Option(fun)
		given putSchemaInterpolationPoint: Conversion[Schema.InterpolationPoint, Option[Schema.InterpolationPoint]] = (fun: Schema.InterpolationPoint) => Option(fun)
		given putSchemaInterpolationPointTypeEnum: Conversion[Schema.InterpolationPoint.TypeEnum, Option[Schema.InterpolationPoint.TypeEnum]] = (fun: Schema.InterpolationPoint.TypeEnum) => Option(fun)
		given putMapStringSchemaFilterCriteria: Conversion[Map[String, Schema.FilterCriteria], Option[Map[String, Schema.FilterCriteria]]] = (fun: Map[String, Schema.FilterCriteria]) => Option(fun)
		given putSchemaEditors: Conversion[Schema.Editors, Option[Schema.Editors]] = (fun: Schema.Editors) => Option(fun)
		given putSchemaChartSpec: Conversion[Schema.ChartSpec, Option[Schema.ChartSpec]] = (fun: Schema.ChartSpec) => Option(fun)
		given putSchemaEmbeddedObjectPosition: Conversion[Schema.EmbeddedObjectPosition, Option[Schema.EmbeddedObjectPosition]] = (fun: Schema.EmbeddedObjectPosition) => Option(fun)
		given putSchemaEmbeddedObjectBorder: Conversion[Schema.EmbeddedObjectBorder, Option[Schema.EmbeddedObjectBorder]] = (fun: Schema.EmbeddedObjectBorder) => Option(fun)
		given putSchemaTextPosition: Conversion[Schema.TextPosition, Option[Schema.TextPosition]] = (fun: Schema.TextPosition) => Option(fun)
		given putSchemaDataSourceChartProperties: Conversion[Schema.DataSourceChartProperties, Option[Schema.DataSourceChartProperties]] = (fun: Schema.DataSourceChartProperties) => Option(fun)
		given putSchemaBasicChartSpec: Conversion[Schema.BasicChartSpec, Option[Schema.BasicChartSpec]] = (fun: Schema.BasicChartSpec) => Option(fun)
		given putSchemaPieChartSpec: Conversion[Schema.PieChartSpec, Option[Schema.PieChartSpec]] = (fun: Schema.PieChartSpec) => Option(fun)
		given putSchemaBubbleChartSpec: Conversion[Schema.BubbleChartSpec, Option[Schema.BubbleChartSpec]] = (fun: Schema.BubbleChartSpec) => Option(fun)
		given putSchemaCandlestickChartSpec: Conversion[Schema.CandlestickChartSpec, Option[Schema.CandlestickChartSpec]] = (fun: Schema.CandlestickChartSpec) => Option(fun)
		given putSchemaOrgChartSpec: Conversion[Schema.OrgChartSpec, Option[Schema.OrgChartSpec]] = (fun: Schema.OrgChartSpec) => Option(fun)
		given putSchemaHistogramChartSpec: Conversion[Schema.HistogramChartSpec, Option[Schema.HistogramChartSpec]] = (fun: Schema.HistogramChartSpec) => Option(fun)
		given putSchemaWaterfallChartSpec: Conversion[Schema.WaterfallChartSpec, Option[Schema.WaterfallChartSpec]] = (fun: Schema.WaterfallChartSpec) => Option(fun)
		given putSchemaTreemapChartSpec: Conversion[Schema.TreemapChartSpec, Option[Schema.TreemapChartSpec]] = (fun: Schema.TreemapChartSpec) => Option(fun)
		given putSchemaScorecardChartSpec: Conversion[Schema.ScorecardChartSpec, Option[Schema.ScorecardChartSpec]] = (fun: Schema.ScorecardChartSpec) => Option(fun)
		given putSchemaChartSpecHiddenDimensionStrategyEnum: Conversion[Schema.ChartSpec.HiddenDimensionStrategyEnum, Option[Schema.ChartSpec.HiddenDimensionStrategyEnum]] = (fun: Schema.ChartSpec.HiddenDimensionStrategyEnum) => Option(fun)
		given putSchemaTextPositionHorizontalAlignmentEnum: Conversion[Schema.TextPosition.HorizontalAlignmentEnum, Option[Schema.TextPosition.HorizontalAlignmentEnum]] = (fun: Schema.TextPosition.HorizontalAlignmentEnum) => Option(fun)
		given putSchemaBasicChartSpecChartTypeEnum: Conversion[Schema.BasicChartSpec.ChartTypeEnum, Option[Schema.BasicChartSpec.ChartTypeEnum]] = (fun: Schema.BasicChartSpec.ChartTypeEnum) => Option(fun)
		given putSchemaBasicChartSpecLegendPositionEnum: Conversion[Schema.BasicChartSpec.LegendPositionEnum, Option[Schema.BasicChartSpec.LegendPositionEnum]] = (fun: Schema.BasicChartSpec.LegendPositionEnum) => Option(fun)
		given putListSchemaBasicChartAxis: Conversion[List[Schema.BasicChartAxis], Option[List[Schema.BasicChartAxis]]] = (fun: List[Schema.BasicChartAxis]) => Option(fun)
		given putListSchemaBasicChartDomain: Conversion[List[Schema.BasicChartDomain], Option[List[Schema.BasicChartDomain]]] = (fun: List[Schema.BasicChartDomain]) => Option(fun)
		given putListSchemaBasicChartSeries: Conversion[List[Schema.BasicChartSeries], Option[List[Schema.BasicChartSeries]]] = (fun: List[Schema.BasicChartSeries]) => Option(fun)
		given putSchemaBasicChartSpecStackedTypeEnum: Conversion[Schema.BasicChartSpec.StackedTypeEnum, Option[Schema.BasicChartSpec.StackedTypeEnum]] = (fun: Schema.BasicChartSpec.StackedTypeEnum) => Option(fun)
		given putSchemaBasicChartSpecCompareModeEnum: Conversion[Schema.BasicChartSpec.CompareModeEnum, Option[Schema.BasicChartSpec.CompareModeEnum]] = (fun: Schema.BasicChartSpec.CompareModeEnum) => Option(fun)
		given putSchemaDataLabel: Conversion[Schema.DataLabel, Option[Schema.DataLabel]] = (fun: Schema.DataLabel) => Option(fun)
		given putSchemaBasicChartAxisPositionEnum: Conversion[Schema.BasicChartAxis.PositionEnum, Option[Schema.BasicChartAxis.PositionEnum]] = (fun: Schema.BasicChartAxis.PositionEnum) => Option(fun)
		given putSchemaChartAxisViewWindowOptions: Conversion[Schema.ChartAxisViewWindowOptions, Option[Schema.ChartAxisViewWindowOptions]] = (fun: Schema.ChartAxisViewWindowOptions) => Option(fun)
		given putSchemaChartAxisViewWindowOptionsViewWindowModeEnum: Conversion[Schema.ChartAxisViewWindowOptions.ViewWindowModeEnum, Option[Schema.ChartAxisViewWindowOptions.ViewWindowModeEnum]] = (fun: Schema.ChartAxisViewWindowOptions.ViewWindowModeEnum) => Option(fun)
		given putSchemaChartData: Conversion[Schema.ChartData, Option[Schema.ChartData]] = (fun: Schema.ChartData) => Option(fun)
		given putSchemaChartSourceRange: Conversion[Schema.ChartSourceRange, Option[Schema.ChartSourceRange]] = (fun: Schema.ChartSourceRange) => Option(fun)
		given putSchemaChartGroupRule: Conversion[Schema.ChartGroupRule, Option[Schema.ChartGroupRule]] = (fun: Schema.ChartGroupRule) => Option(fun)
		given putSchemaChartDataAggregateTypeEnum: Conversion[Schema.ChartData.AggregateTypeEnum, Option[Schema.ChartData.AggregateTypeEnum]] = (fun: Schema.ChartData.AggregateTypeEnum) => Option(fun)
		given putSchemaChartDateTimeRule: Conversion[Schema.ChartDateTimeRule, Option[Schema.ChartDateTimeRule]] = (fun: Schema.ChartDateTimeRule) => Option(fun)
		given putSchemaChartHistogramRule: Conversion[Schema.ChartHistogramRule, Option[Schema.ChartHistogramRule]] = (fun: Schema.ChartHistogramRule) => Option(fun)
		given putSchemaChartDateTimeRuleTypeEnum: Conversion[Schema.ChartDateTimeRule.TypeEnum, Option[Schema.ChartDateTimeRule.TypeEnum]] = (fun: Schema.ChartDateTimeRule.TypeEnum) => Option(fun)
		given putSchemaBasicChartSeriesTargetAxisEnum: Conversion[Schema.BasicChartSeries.TargetAxisEnum, Option[Schema.BasicChartSeries.TargetAxisEnum]] = (fun: Schema.BasicChartSeries.TargetAxisEnum) => Option(fun)
		given putSchemaBasicChartSeriesTypeEnum: Conversion[Schema.BasicChartSeries.TypeEnum, Option[Schema.BasicChartSeries.TypeEnum]] = (fun: Schema.BasicChartSeries.TypeEnum) => Option(fun)
		given putSchemaLineStyle: Conversion[Schema.LineStyle, Option[Schema.LineStyle]] = (fun: Schema.LineStyle) => Option(fun)
		given putSchemaPointStyle: Conversion[Schema.PointStyle, Option[Schema.PointStyle]] = (fun: Schema.PointStyle) => Option(fun)
		given putListSchemaBasicSeriesDataPointStyleOverride: Conversion[List[Schema.BasicSeriesDataPointStyleOverride], Option[List[Schema.BasicSeriesDataPointStyleOverride]]] = (fun: List[Schema.BasicSeriesDataPointStyleOverride]) => Option(fun)
		given putSchemaLineStyleTypeEnum: Conversion[Schema.LineStyle.TypeEnum, Option[Schema.LineStyle.TypeEnum]] = (fun: Schema.LineStyle.TypeEnum) => Option(fun)
		given putSchemaDataLabelTypeEnum: Conversion[Schema.DataLabel.TypeEnum, Option[Schema.DataLabel.TypeEnum]] = (fun: Schema.DataLabel.TypeEnum) => Option(fun)
		given putSchemaDataLabelPlacementEnum: Conversion[Schema.DataLabel.PlacementEnum, Option[Schema.DataLabel.PlacementEnum]] = (fun: Schema.DataLabel.PlacementEnum) => Option(fun)
		given putSchemaPointStyleShapeEnum: Conversion[Schema.PointStyle.ShapeEnum, Option[Schema.PointStyle.ShapeEnum]] = (fun: Schema.PointStyle.ShapeEnum) => Option(fun)
		given putSchemaPieChartSpecLegendPositionEnum: Conversion[Schema.PieChartSpec.LegendPositionEnum, Option[Schema.PieChartSpec.LegendPositionEnum]] = (fun: Schema.PieChartSpec.LegendPositionEnum) => Option(fun)
		given putSchemaBubbleChartSpecLegendPositionEnum: Conversion[Schema.BubbleChartSpec.LegendPositionEnum, Option[Schema.BubbleChartSpec.LegendPositionEnum]] = (fun: Schema.BubbleChartSpec.LegendPositionEnum) => Option(fun)
		given putSchemaCandlestickDomain: Conversion[Schema.CandlestickDomain, Option[Schema.CandlestickDomain]] = (fun: Schema.CandlestickDomain) => Option(fun)
		given putListSchemaCandlestickData: Conversion[List[Schema.CandlestickData], Option[List[Schema.CandlestickData]]] = (fun: List[Schema.CandlestickData]) => Option(fun)
		given putSchemaCandlestickSeries: Conversion[Schema.CandlestickSeries, Option[Schema.CandlestickSeries]] = (fun: Schema.CandlestickSeries) => Option(fun)
		given putSchemaOrgChartSpecNodeSizeEnum: Conversion[Schema.OrgChartSpec.NodeSizeEnum, Option[Schema.OrgChartSpec.NodeSizeEnum]] = (fun: Schema.OrgChartSpec.NodeSizeEnum) => Option(fun)
		given putListSchemaHistogramSeries: Conversion[List[Schema.HistogramSeries], Option[List[Schema.HistogramSeries]]] = (fun: List[Schema.HistogramSeries]) => Option(fun)
		given putSchemaHistogramChartSpecLegendPositionEnum: Conversion[Schema.HistogramChartSpec.LegendPositionEnum, Option[Schema.HistogramChartSpec.LegendPositionEnum]] = (fun: Schema.HistogramChartSpec.LegendPositionEnum) => Option(fun)
		given putSchemaWaterfallChartDomain: Conversion[Schema.WaterfallChartDomain, Option[Schema.WaterfallChartDomain]] = (fun: Schema.WaterfallChartDomain) => Option(fun)
		given putListSchemaWaterfallChartSeries: Conversion[List[Schema.WaterfallChartSeries], Option[List[Schema.WaterfallChartSeries]]] = (fun: List[Schema.WaterfallChartSeries]) => Option(fun)
		given putSchemaWaterfallChartSpecStackedTypeEnum: Conversion[Schema.WaterfallChartSpec.StackedTypeEnum, Option[Schema.WaterfallChartSpec.StackedTypeEnum]] = (fun: Schema.WaterfallChartSpec.StackedTypeEnum) => Option(fun)
		given putSchemaWaterfallChartColumnStyle: Conversion[Schema.WaterfallChartColumnStyle, Option[Schema.WaterfallChartColumnStyle]] = (fun: Schema.WaterfallChartColumnStyle) => Option(fun)
		given putListSchemaWaterfallChartCustomSubtotal: Conversion[List[Schema.WaterfallChartCustomSubtotal], Option[List[Schema.WaterfallChartCustomSubtotal]]] = (fun: List[Schema.WaterfallChartCustomSubtotal]) => Option(fun)
		given putSchemaTreemapChartColorScale: Conversion[Schema.TreemapChartColorScale, Option[Schema.TreemapChartColorScale]] = (fun: Schema.TreemapChartColorScale) => Option(fun)
		given putSchemaScorecardChartSpecAggregateTypeEnum: Conversion[Schema.ScorecardChartSpec.AggregateTypeEnum, Option[Schema.ScorecardChartSpec.AggregateTypeEnum]] = (fun: Schema.ScorecardChartSpec.AggregateTypeEnum) => Option(fun)
		given putSchemaKeyValueFormat: Conversion[Schema.KeyValueFormat, Option[Schema.KeyValueFormat]] = (fun: Schema.KeyValueFormat) => Option(fun)
		given putSchemaBaselineValueFormat: Conversion[Schema.BaselineValueFormat, Option[Schema.BaselineValueFormat]] = (fun: Schema.BaselineValueFormat) => Option(fun)
		given putSchemaScorecardChartSpecNumberFormatSourceEnum: Conversion[Schema.ScorecardChartSpec.NumberFormatSourceEnum, Option[Schema.ScorecardChartSpec.NumberFormatSourceEnum]] = (fun: Schema.ScorecardChartSpec.NumberFormatSourceEnum) => Option(fun)
		given putSchemaChartCustomNumberFormatOptions: Conversion[Schema.ChartCustomNumberFormatOptions, Option[Schema.ChartCustomNumberFormatOptions]] = (fun: Schema.ChartCustomNumberFormatOptions) => Option(fun)
		given putSchemaBaselineValueFormatComparisonTypeEnum: Conversion[Schema.BaselineValueFormat.ComparisonTypeEnum, Option[Schema.BaselineValueFormat.ComparisonTypeEnum]] = (fun: Schema.BaselineValueFormat.ComparisonTypeEnum) => Option(fun)
		given putSchemaOverlayPosition: Conversion[Schema.OverlayPosition, Option[Schema.OverlayPosition]] = (fun: Schema.OverlayPosition) => Option(fun)
		given putSchemaGridCoordinate: Conversion[Schema.GridCoordinate, Option[Schema.GridCoordinate]] = (fun: Schema.GridCoordinate) => Option(fun)
		given putSchemaBandingProperties: Conversion[Schema.BandingProperties, Option[Schema.BandingProperties]] = (fun: Schema.BandingProperties) => Option(fun)
		given putSchemaSlicerSpec: Conversion[Schema.SlicerSpec, Option[Schema.SlicerSpec]] = (fun: Schema.SlicerSpec) => Option(fun)
		given putSchemaSlicerSpecHorizontalAlignmentEnum: Conversion[Schema.SlicerSpec.HorizontalAlignmentEnum, Option[Schema.SlicerSpec.HorizontalAlignmentEnum]] = (fun: Schema.SlicerSpec.HorizontalAlignmentEnum) => Option(fun)
		given putSchemaDataSourceSpec: Conversion[Schema.DataSourceSpec, Option[Schema.DataSourceSpec]] = (fun: Schema.DataSourceSpec) => Option(fun)
		given putSchemaBigQueryDataSourceSpec: Conversion[Schema.BigQueryDataSourceSpec, Option[Schema.BigQueryDataSourceSpec]] = (fun: Schema.BigQueryDataSourceSpec) => Option(fun)
		given putSchemaLookerDataSourceSpec: Conversion[Schema.LookerDataSourceSpec, Option[Schema.LookerDataSourceSpec]] = (fun: Schema.LookerDataSourceSpec) => Option(fun)
		given putListSchemaDataSourceParameter: Conversion[List[Schema.DataSourceParameter], Option[List[Schema.DataSourceParameter]]] = (fun: List[Schema.DataSourceParameter]) => Option(fun)
		given putSchemaBigQueryQuerySpec: Conversion[Schema.BigQueryQuerySpec, Option[Schema.BigQueryQuerySpec]] = (fun: Schema.BigQueryQuerySpec) => Option(fun)
		given putSchemaBigQueryTableSpec: Conversion[Schema.BigQueryTableSpec, Option[Schema.BigQueryTableSpec]] = (fun: Schema.BigQueryTableSpec) => Option(fun)
		given putSchemaDataSourceRefreshScheduleRefreshScopeEnum: Conversion[Schema.DataSourceRefreshSchedule.RefreshScopeEnum, Option[Schema.DataSourceRefreshSchedule.RefreshScopeEnum]] = (fun: Schema.DataSourceRefreshSchedule.RefreshScopeEnum) => Option(fun)
		given putSchemaDataSourceRefreshDailySchedule: Conversion[Schema.DataSourceRefreshDailySchedule, Option[Schema.DataSourceRefreshDailySchedule]] = (fun: Schema.DataSourceRefreshDailySchedule) => Option(fun)
		given putSchemaDataSourceRefreshWeeklySchedule: Conversion[Schema.DataSourceRefreshWeeklySchedule, Option[Schema.DataSourceRefreshWeeklySchedule]] = (fun: Schema.DataSourceRefreshWeeklySchedule) => Option(fun)
		given putSchemaDataSourceRefreshMonthlySchedule: Conversion[Schema.DataSourceRefreshMonthlySchedule, Option[Schema.DataSourceRefreshMonthlySchedule]] = (fun: Schema.DataSourceRefreshMonthlySchedule) => Option(fun)
		given putSchemaInterval: Conversion[Schema.Interval, Option[Schema.Interval]] = (fun: Schema.Interval) => Option(fun)
		given putSchemaTimeOfDay: Conversion[Schema.TimeOfDay, Option[Schema.TimeOfDay]] = (fun: Schema.TimeOfDay) => Option(fun)
		given putListSchemaDataSourceRefreshWeeklyScheduleDaysOfWeekEnum: Conversion[List[Schema.DataSourceRefreshWeeklySchedule.DaysOfWeekEnum], Option[List[Schema.DataSourceRefreshWeeklySchedule.DaysOfWeekEnum]]] = (fun: List[Schema.DataSourceRefreshWeeklySchedule.DaysOfWeekEnum]) => Option(fun)
		given putListInt: Conversion[List[Int], Option[List[Int]]] = (fun: List[Int]) => Option(fun)
		given putListSchemaRequest: Conversion[List[Schema.Request], Option[List[Schema.Request]]] = (fun: List[Schema.Request]) => Option(fun)
		given putSchemaUpdateSpreadsheetPropertiesRequest: Conversion[Schema.UpdateSpreadsheetPropertiesRequest, Option[Schema.UpdateSpreadsheetPropertiesRequest]] = (fun: Schema.UpdateSpreadsheetPropertiesRequest) => Option(fun)
		given putSchemaUpdateSheetPropertiesRequest: Conversion[Schema.UpdateSheetPropertiesRequest, Option[Schema.UpdateSheetPropertiesRequest]] = (fun: Schema.UpdateSheetPropertiesRequest) => Option(fun)
		given putSchemaUpdateDimensionPropertiesRequest: Conversion[Schema.UpdateDimensionPropertiesRequest, Option[Schema.UpdateDimensionPropertiesRequest]] = (fun: Schema.UpdateDimensionPropertiesRequest) => Option(fun)
		given putSchemaUpdateNamedRangeRequest: Conversion[Schema.UpdateNamedRangeRequest, Option[Schema.UpdateNamedRangeRequest]] = (fun: Schema.UpdateNamedRangeRequest) => Option(fun)
		given putSchemaRepeatCellRequest: Conversion[Schema.RepeatCellRequest, Option[Schema.RepeatCellRequest]] = (fun: Schema.RepeatCellRequest) => Option(fun)
		given putSchemaAddNamedRangeRequest: Conversion[Schema.AddNamedRangeRequest, Option[Schema.AddNamedRangeRequest]] = (fun: Schema.AddNamedRangeRequest) => Option(fun)
		given putSchemaDeleteNamedRangeRequest: Conversion[Schema.DeleteNamedRangeRequest, Option[Schema.DeleteNamedRangeRequest]] = (fun: Schema.DeleteNamedRangeRequest) => Option(fun)
		given putSchemaAddSheetRequest: Conversion[Schema.AddSheetRequest, Option[Schema.AddSheetRequest]] = (fun: Schema.AddSheetRequest) => Option(fun)
		given putSchemaDeleteSheetRequest: Conversion[Schema.DeleteSheetRequest, Option[Schema.DeleteSheetRequest]] = (fun: Schema.DeleteSheetRequest) => Option(fun)
		given putSchemaAutoFillRequest: Conversion[Schema.AutoFillRequest, Option[Schema.AutoFillRequest]] = (fun: Schema.AutoFillRequest) => Option(fun)
		given putSchemaCutPasteRequest: Conversion[Schema.CutPasteRequest, Option[Schema.CutPasteRequest]] = (fun: Schema.CutPasteRequest) => Option(fun)
		given putSchemaCopyPasteRequest: Conversion[Schema.CopyPasteRequest, Option[Schema.CopyPasteRequest]] = (fun: Schema.CopyPasteRequest) => Option(fun)
		given putSchemaMergeCellsRequest: Conversion[Schema.MergeCellsRequest, Option[Schema.MergeCellsRequest]] = (fun: Schema.MergeCellsRequest) => Option(fun)
		given putSchemaUnmergeCellsRequest: Conversion[Schema.UnmergeCellsRequest, Option[Schema.UnmergeCellsRequest]] = (fun: Schema.UnmergeCellsRequest) => Option(fun)
		given putSchemaUpdateBordersRequest: Conversion[Schema.UpdateBordersRequest, Option[Schema.UpdateBordersRequest]] = (fun: Schema.UpdateBordersRequest) => Option(fun)
		given putSchemaUpdateCellsRequest: Conversion[Schema.UpdateCellsRequest, Option[Schema.UpdateCellsRequest]] = (fun: Schema.UpdateCellsRequest) => Option(fun)
		given putSchemaAddFilterViewRequest: Conversion[Schema.AddFilterViewRequest, Option[Schema.AddFilterViewRequest]] = (fun: Schema.AddFilterViewRequest) => Option(fun)
		given putSchemaAppendCellsRequest: Conversion[Schema.AppendCellsRequest, Option[Schema.AppendCellsRequest]] = (fun: Schema.AppendCellsRequest) => Option(fun)
		given putSchemaClearBasicFilterRequest: Conversion[Schema.ClearBasicFilterRequest, Option[Schema.ClearBasicFilterRequest]] = (fun: Schema.ClearBasicFilterRequest) => Option(fun)
		given putSchemaDeleteDimensionRequest: Conversion[Schema.DeleteDimensionRequest, Option[Schema.DeleteDimensionRequest]] = (fun: Schema.DeleteDimensionRequest) => Option(fun)
		given putSchemaDeleteEmbeddedObjectRequest: Conversion[Schema.DeleteEmbeddedObjectRequest, Option[Schema.DeleteEmbeddedObjectRequest]] = (fun: Schema.DeleteEmbeddedObjectRequest) => Option(fun)
		given putSchemaDeleteFilterViewRequest: Conversion[Schema.DeleteFilterViewRequest, Option[Schema.DeleteFilterViewRequest]] = (fun: Schema.DeleteFilterViewRequest) => Option(fun)
		given putSchemaDuplicateFilterViewRequest: Conversion[Schema.DuplicateFilterViewRequest, Option[Schema.DuplicateFilterViewRequest]] = (fun: Schema.DuplicateFilterViewRequest) => Option(fun)
		given putSchemaDuplicateSheetRequest: Conversion[Schema.DuplicateSheetRequest, Option[Schema.DuplicateSheetRequest]] = (fun: Schema.DuplicateSheetRequest) => Option(fun)
		given putSchemaFindReplaceRequest: Conversion[Schema.FindReplaceRequest, Option[Schema.FindReplaceRequest]] = (fun: Schema.FindReplaceRequest) => Option(fun)
		given putSchemaInsertDimensionRequest: Conversion[Schema.InsertDimensionRequest, Option[Schema.InsertDimensionRequest]] = (fun: Schema.InsertDimensionRequest) => Option(fun)
		given putSchemaInsertRangeRequest: Conversion[Schema.InsertRangeRequest, Option[Schema.InsertRangeRequest]] = (fun: Schema.InsertRangeRequest) => Option(fun)
		given putSchemaMoveDimensionRequest: Conversion[Schema.MoveDimensionRequest, Option[Schema.MoveDimensionRequest]] = (fun: Schema.MoveDimensionRequest) => Option(fun)
		given putSchemaUpdateEmbeddedObjectPositionRequest: Conversion[Schema.UpdateEmbeddedObjectPositionRequest, Option[Schema.UpdateEmbeddedObjectPositionRequest]] = (fun: Schema.UpdateEmbeddedObjectPositionRequest) => Option(fun)
		given putSchemaPasteDataRequest: Conversion[Schema.PasteDataRequest, Option[Schema.PasteDataRequest]] = (fun: Schema.PasteDataRequest) => Option(fun)
		given putSchemaTextToColumnsRequest: Conversion[Schema.TextToColumnsRequest, Option[Schema.TextToColumnsRequest]] = (fun: Schema.TextToColumnsRequest) => Option(fun)
		given putSchemaUpdateFilterViewRequest: Conversion[Schema.UpdateFilterViewRequest, Option[Schema.UpdateFilterViewRequest]] = (fun: Schema.UpdateFilterViewRequest) => Option(fun)
		given putSchemaDeleteRangeRequest: Conversion[Schema.DeleteRangeRequest, Option[Schema.DeleteRangeRequest]] = (fun: Schema.DeleteRangeRequest) => Option(fun)
		given putSchemaAppendDimensionRequest: Conversion[Schema.AppendDimensionRequest, Option[Schema.AppendDimensionRequest]] = (fun: Schema.AppendDimensionRequest) => Option(fun)
		given putSchemaAddConditionalFormatRuleRequest: Conversion[Schema.AddConditionalFormatRuleRequest, Option[Schema.AddConditionalFormatRuleRequest]] = (fun: Schema.AddConditionalFormatRuleRequest) => Option(fun)
		given putSchemaUpdateConditionalFormatRuleRequest: Conversion[Schema.UpdateConditionalFormatRuleRequest, Option[Schema.UpdateConditionalFormatRuleRequest]] = (fun: Schema.UpdateConditionalFormatRuleRequest) => Option(fun)
		given putSchemaDeleteConditionalFormatRuleRequest: Conversion[Schema.DeleteConditionalFormatRuleRequest, Option[Schema.DeleteConditionalFormatRuleRequest]] = (fun: Schema.DeleteConditionalFormatRuleRequest) => Option(fun)
		given putSchemaSortRangeRequest: Conversion[Schema.SortRangeRequest, Option[Schema.SortRangeRequest]] = (fun: Schema.SortRangeRequest) => Option(fun)
		given putSchemaSetDataValidationRequest: Conversion[Schema.SetDataValidationRequest, Option[Schema.SetDataValidationRequest]] = (fun: Schema.SetDataValidationRequest) => Option(fun)
		given putSchemaSetBasicFilterRequest: Conversion[Schema.SetBasicFilterRequest, Option[Schema.SetBasicFilterRequest]] = (fun: Schema.SetBasicFilterRequest) => Option(fun)
		given putSchemaAddProtectedRangeRequest: Conversion[Schema.AddProtectedRangeRequest, Option[Schema.AddProtectedRangeRequest]] = (fun: Schema.AddProtectedRangeRequest) => Option(fun)
		given putSchemaUpdateProtectedRangeRequest: Conversion[Schema.UpdateProtectedRangeRequest, Option[Schema.UpdateProtectedRangeRequest]] = (fun: Schema.UpdateProtectedRangeRequest) => Option(fun)
		given putSchemaDeleteProtectedRangeRequest: Conversion[Schema.DeleteProtectedRangeRequest, Option[Schema.DeleteProtectedRangeRequest]] = (fun: Schema.DeleteProtectedRangeRequest) => Option(fun)
		given putSchemaAutoResizeDimensionsRequest: Conversion[Schema.AutoResizeDimensionsRequest, Option[Schema.AutoResizeDimensionsRequest]] = (fun: Schema.AutoResizeDimensionsRequest) => Option(fun)
		given putSchemaAddChartRequest: Conversion[Schema.AddChartRequest, Option[Schema.AddChartRequest]] = (fun: Schema.AddChartRequest) => Option(fun)
		given putSchemaUpdateChartSpecRequest: Conversion[Schema.UpdateChartSpecRequest, Option[Schema.UpdateChartSpecRequest]] = (fun: Schema.UpdateChartSpecRequest) => Option(fun)
		given putSchemaUpdateBandingRequest: Conversion[Schema.UpdateBandingRequest, Option[Schema.UpdateBandingRequest]] = (fun: Schema.UpdateBandingRequest) => Option(fun)
		given putSchemaAddBandingRequest: Conversion[Schema.AddBandingRequest, Option[Schema.AddBandingRequest]] = (fun: Schema.AddBandingRequest) => Option(fun)
		given putSchemaDeleteBandingRequest: Conversion[Schema.DeleteBandingRequest, Option[Schema.DeleteBandingRequest]] = (fun: Schema.DeleteBandingRequest) => Option(fun)
		given putSchemaCreateDeveloperMetadataRequest: Conversion[Schema.CreateDeveloperMetadataRequest, Option[Schema.CreateDeveloperMetadataRequest]] = (fun: Schema.CreateDeveloperMetadataRequest) => Option(fun)
		given putSchemaUpdateDeveloperMetadataRequest: Conversion[Schema.UpdateDeveloperMetadataRequest, Option[Schema.UpdateDeveloperMetadataRequest]] = (fun: Schema.UpdateDeveloperMetadataRequest) => Option(fun)
		given putSchemaDeleteDeveloperMetadataRequest: Conversion[Schema.DeleteDeveloperMetadataRequest, Option[Schema.DeleteDeveloperMetadataRequest]] = (fun: Schema.DeleteDeveloperMetadataRequest) => Option(fun)
		given putSchemaRandomizeRangeRequest: Conversion[Schema.RandomizeRangeRequest, Option[Schema.RandomizeRangeRequest]] = (fun: Schema.RandomizeRangeRequest) => Option(fun)
		given putSchemaAddDimensionGroupRequest: Conversion[Schema.AddDimensionGroupRequest, Option[Schema.AddDimensionGroupRequest]] = (fun: Schema.AddDimensionGroupRequest) => Option(fun)
		given putSchemaDeleteDimensionGroupRequest: Conversion[Schema.DeleteDimensionGroupRequest, Option[Schema.DeleteDimensionGroupRequest]] = (fun: Schema.DeleteDimensionGroupRequest) => Option(fun)
		given putSchemaUpdateDimensionGroupRequest: Conversion[Schema.UpdateDimensionGroupRequest, Option[Schema.UpdateDimensionGroupRequest]] = (fun: Schema.UpdateDimensionGroupRequest) => Option(fun)
		given putSchemaTrimWhitespaceRequest: Conversion[Schema.TrimWhitespaceRequest, Option[Schema.TrimWhitespaceRequest]] = (fun: Schema.TrimWhitespaceRequest) => Option(fun)
		given putSchemaDeleteDuplicatesRequest: Conversion[Schema.DeleteDuplicatesRequest, Option[Schema.DeleteDuplicatesRequest]] = (fun: Schema.DeleteDuplicatesRequest) => Option(fun)
		given putSchemaUpdateEmbeddedObjectBorderRequest: Conversion[Schema.UpdateEmbeddedObjectBorderRequest, Option[Schema.UpdateEmbeddedObjectBorderRequest]] = (fun: Schema.UpdateEmbeddedObjectBorderRequest) => Option(fun)
		given putSchemaAddSlicerRequest: Conversion[Schema.AddSlicerRequest, Option[Schema.AddSlicerRequest]] = (fun: Schema.AddSlicerRequest) => Option(fun)
		given putSchemaUpdateSlicerSpecRequest: Conversion[Schema.UpdateSlicerSpecRequest, Option[Schema.UpdateSlicerSpecRequest]] = (fun: Schema.UpdateSlicerSpecRequest) => Option(fun)
		given putSchemaAddDataSourceRequest: Conversion[Schema.AddDataSourceRequest, Option[Schema.AddDataSourceRequest]] = (fun: Schema.AddDataSourceRequest) => Option(fun)
		given putSchemaUpdateDataSourceRequest: Conversion[Schema.UpdateDataSourceRequest, Option[Schema.UpdateDataSourceRequest]] = (fun: Schema.UpdateDataSourceRequest) => Option(fun)
		given putSchemaDeleteDataSourceRequest: Conversion[Schema.DeleteDataSourceRequest, Option[Schema.DeleteDataSourceRequest]] = (fun: Schema.DeleteDataSourceRequest) => Option(fun)
		given putSchemaRefreshDataSourceRequest: Conversion[Schema.RefreshDataSourceRequest, Option[Schema.RefreshDataSourceRequest]] = (fun: Schema.RefreshDataSourceRequest) => Option(fun)
		given putSchemaCancelDataSourceRefreshRequest: Conversion[Schema.CancelDataSourceRefreshRequest, Option[Schema.CancelDataSourceRefreshRequest]] = (fun: Schema.CancelDataSourceRefreshRequest) => Option(fun)
		given putSchemaDataSourceSheetDimensionRange: Conversion[Schema.DataSourceSheetDimensionRange, Option[Schema.DataSourceSheetDimensionRange]] = (fun: Schema.DataSourceSheetDimensionRange) => Option(fun)
		given putSchemaDimensionProperties: Conversion[Schema.DimensionProperties, Option[Schema.DimensionProperties]] = (fun: Schema.DimensionProperties) => Option(fun)
		given putSchemaNamedRange: Conversion[Schema.NamedRange, Option[Schema.NamedRange]] = (fun: Schema.NamedRange) => Option(fun)
		given putSchemaCellData: Conversion[Schema.CellData, Option[Schema.CellData]] = (fun: Schema.CellData) => Option(fun)
		given putSchemaSourceAndDestination: Conversion[Schema.SourceAndDestination, Option[Schema.SourceAndDestination]] = (fun: Schema.SourceAndDestination) => Option(fun)
		given putSchemaSourceAndDestinationDimensionEnum: Conversion[Schema.SourceAndDestination.DimensionEnum, Option[Schema.SourceAndDestination.DimensionEnum]] = (fun: Schema.SourceAndDestination.DimensionEnum) => Option(fun)
		given putSchemaCutPasteRequestPasteTypeEnum: Conversion[Schema.CutPasteRequest.PasteTypeEnum, Option[Schema.CutPasteRequest.PasteTypeEnum]] = (fun: Schema.CutPasteRequest.PasteTypeEnum) => Option(fun)
		given putSchemaCopyPasteRequestPasteTypeEnum: Conversion[Schema.CopyPasteRequest.PasteTypeEnum, Option[Schema.CopyPasteRequest.PasteTypeEnum]] = (fun: Schema.CopyPasteRequest.PasteTypeEnum) => Option(fun)
		given putSchemaCopyPasteRequestPasteOrientationEnum: Conversion[Schema.CopyPasteRequest.PasteOrientationEnum, Option[Schema.CopyPasteRequest.PasteOrientationEnum]] = (fun: Schema.CopyPasteRequest.PasteOrientationEnum) => Option(fun)
		given putSchemaMergeCellsRequestMergeTypeEnum: Conversion[Schema.MergeCellsRequest.MergeTypeEnum, Option[Schema.MergeCellsRequest.MergeTypeEnum]] = (fun: Schema.MergeCellsRequest.MergeTypeEnum) => Option(fun)
		given putSchemaFilterView: Conversion[Schema.FilterView, Option[Schema.FilterView]] = (fun: Schema.FilterView) => Option(fun)
		given putSchemaInsertRangeRequestShiftDimensionEnum: Conversion[Schema.InsertRangeRequest.ShiftDimensionEnum, Option[Schema.InsertRangeRequest.ShiftDimensionEnum]] = (fun: Schema.InsertRangeRequest.ShiftDimensionEnum) => Option(fun)
		given putSchemaPasteDataRequestTypeEnum: Conversion[Schema.PasteDataRequest.TypeEnum, Option[Schema.PasteDataRequest.TypeEnum]] = (fun: Schema.PasteDataRequest.TypeEnum) => Option(fun)
		given putSchemaTextToColumnsRequestDelimiterTypeEnum: Conversion[Schema.TextToColumnsRequest.DelimiterTypeEnum, Option[Schema.TextToColumnsRequest.DelimiterTypeEnum]] = (fun: Schema.TextToColumnsRequest.DelimiterTypeEnum) => Option(fun)
		given putSchemaDeleteRangeRequestShiftDimensionEnum: Conversion[Schema.DeleteRangeRequest.ShiftDimensionEnum, Option[Schema.DeleteRangeRequest.ShiftDimensionEnum]] = (fun: Schema.DeleteRangeRequest.ShiftDimensionEnum) => Option(fun)
		given putSchemaAppendDimensionRequestDimensionEnum: Conversion[Schema.AppendDimensionRequest.DimensionEnum, Option[Schema.AppendDimensionRequest.DimensionEnum]] = (fun: Schema.AppendDimensionRequest.DimensionEnum) => Option(fun)
		given putSchemaConditionalFormatRule: Conversion[Schema.ConditionalFormatRule, Option[Schema.ConditionalFormatRule]] = (fun: Schema.ConditionalFormatRule) => Option(fun)
		given putSchemaProtectedRange: Conversion[Schema.ProtectedRange, Option[Schema.ProtectedRange]] = (fun: Schema.ProtectedRange) => Option(fun)
		given putSchemaEmbeddedChart: Conversion[Schema.EmbeddedChart, Option[Schema.EmbeddedChart]] = (fun: Schema.EmbeddedChart) => Option(fun)
		given putSchemaBandedRange: Conversion[Schema.BandedRange, Option[Schema.BandedRange]] = (fun: Schema.BandedRange) => Option(fun)
		given putSchemaDimensionGroup: Conversion[Schema.DimensionGroup, Option[Schema.DimensionGroup]] = (fun: Schema.DimensionGroup) => Option(fun)
		given putListSchemaDimensionRange: Conversion[List[Schema.DimensionRange], Option[List[Schema.DimensionRange]]] = (fun: List[Schema.DimensionRange]) => Option(fun)
		given putSchemaSlicer: Conversion[Schema.Slicer, Option[Schema.Slicer]] = (fun: Schema.Slicer) => Option(fun)
		given putSchemaDataSource: Conversion[Schema.DataSource, Option[Schema.DataSource]] = (fun: Schema.DataSource) => Option(fun)
		given putSchemaDataSourceObjectReferences: Conversion[Schema.DataSourceObjectReferences, Option[Schema.DataSourceObjectReferences]] = (fun: Schema.DataSourceObjectReferences) => Option(fun)
		given putListSchemaDataSourceObjectReference: Conversion[List[Schema.DataSourceObjectReference], Option[List[Schema.DataSourceObjectReference]]] = (fun: List[Schema.DataSourceObjectReference]) => Option(fun)
		given putListSchemaResponse: Conversion[List[Schema.Response], Option[List[Schema.Response]]] = (fun: List[Schema.Response]) => Option(fun)
		given putSchemaSpreadsheet: Conversion[Schema.Spreadsheet, Option[Schema.Spreadsheet]] = (fun: Schema.Spreadsheet) => Option(fun)
		given putSchemaAddNamedRangeResponse: Conversion[Schema.AddNamedRangeResponse, Option[Schema.AddNamedRangeResponse]] = (fun: Schema.AddNamedRangeResponse) => Option(fun)
		given putSchemaAddSheetResponse: Conversion[Schema.AddSheetResponse, Option[Schema.AddSheetResponse]] = (fun: Schema.AddSheetResponse) => Option(fun)
		given putSchemaAddFilterViewResponse: Conversion[Schema.AddFilterViewResponse, Option[Schema.AddFilterViewResponse]] = (fun: Schema.AddFilterViewResponse) => Option(fun)
		given putSchemaDuplicateFilterViewResponse: Conversion[Schema.DuplicateFilterViewResponse, Option[Schema.DuplicateFilterViewResponse]] = (fun: Schema.DuplicateFilterViewResponse) => Option(fun)
		given putSchemaDuplicateSheetResponse: Conversion[Schema.DuplicateSheetResponse, Option[Schema.DuplicateSheetResponse]] = (fun: Schema.DuplicateSheetResponse) => Option(fun)
		given putSchemaFindReplaceResponse: Conversion[Schema.FindReplaceResponse, Option[Schema.FindReplaceResponse]] = (fun: Schema.FindReplaceResponse) => Option(fun)
		given putSchemaUpdateEmbeddedObjectPositionResponse: Conversion[Schema.UpdateEmbeddedObjectPositionResponse, Option[Schema.UpdateEmbeddedObjectPositionResponse]] = (fun: Schema.UpdateEmbeddedObjectPositionResponse) => Option(fun)
		given putSchemaUpdateConditionalFormatRuleResponse: Conversion[Schema.UpdateConditionalFormatRuleResponse, Option[Schema.UpdateConditionalFormatRuleResponse]] = (fun: Schema.UpdateConditionalFormatRuleResponse) => Option(fun)
		given putSchemaDeleteConditionalFormatRuleResponse: Conversion[Schema.DeleteConditionalFormatRuleResponse, Option[Schema.DeleteConditionalFormatRuleResponse]] = (fun: Schema.DeleteConditionalFormatRuleResponse) => Option(fun)
		given putSchemaAddProtectedRangeResponse: Conversion[Schema.AddProtectedRangeResponse, Option[Schema.AddProtectedRangeResponse]] = (fun: Schema.AddProtectedRangeResponse) => Option(fun)
		given putSchemaAddChartResponse: Conversion[Schema.AddChartResponse, Option[Schema.AddChartResponse]] = (fun: Schema.AddChartResponse) => Option(fun)
		given putSchemaAddBandingResponse: Conversion[Schema.AddBandingResponse, Option[Schema.AddBandingResponse]] = (fun: Schema.AddBandingResponse) => Option(fun)
		given putSchemaCreateDeveloperMetadataResponse: Conversion[Schema.CreateDeveloperMetadataResponse, Option[Schema.CreateDeveloperMetadataResponse]] = (fun: Schema.CreateDeveloperMetadataResponse) => Option(fun)
		given putSchemaUpdateDeveloperMetadataResponse: Conversion[Schema.UpdateDeveloperMetadataResponse, Option[Schema.UpdateDeveloperMetadataResponse]] = (fun: Schema.UpdateDeveloperMetadataResponse) => Option(fun)
		given putSchemaDeleteDeveloperMetadataResponse: Conversion[Schema.DeleteDeveloperMetadataResponse, Option[Schema.DeleteDeveloperMetadataResponse]] = (fun: Schema.DeleteDeveloperMetadataResponse) => Option(fun)
		given putSchemaAddDimensionGroupResponse: Conversion[Schema.AddDimensionGroupResponse, Option[Schema.AddDimensionGroupResponse]] = (fun: Schema.AddDimensionGroupResponse) => Option(fun)
		given putSchemaDeleteDimensionGroupResponse: Conversion[Schema.DeleteDimensionGroupResponse, Option[Schema.DeleteDimensionGroupResponse]] = (fun: Schema.DeleteDimensionGroupResponse) => Option(fun)
		given putSchemaTrimWhitespaceResponse: Conversion[Schema.TrimWhitespaceResponse, Option[Schema.TrimWhitespaceResponse]] = (fun: Schema.TrimWhitespaceResponse) => Option(fun)
		given putSchemaDeleteDuplicatesResponse: Conversion[Schema.DeleteDuplicatesResponse, Option[Schema.DeleteDuplicatesResponse]] = (fun: Schema.DeleteDuplicatesResponse) => Option(fun)
		given putSchemaAddSlicerResponse: Conversion[Schema.AddSlicerResponse, Option[Schema.AddSlicerResponse]] = (fun: Schema.AddSlicerResponse) => Option(fun)
		given putSchemaAddDataSourceResponse: Conversion[Schema.AddDataSourceResponse, Option[Schema.AddDataSourceResponse]] = (fun: Schema.AddDataSourceResponse) => Option(fun)
		given putSchemaUpdateDataSourceResponse: Conversion[Schema.UpdateDataSourceResponse, Option[Schema.UpdateDataSourceResponse]] = (fun: Schema.UpdateDataSourceResponse) => Option(fun)
		given putSchemaRefreshDataSourceResponse: Conversion[Schema.RefreshDataSourceResponse, Option[Schema.RefreshDataSourceResponse]] = (fun: Schema.RefreshDataSourceResponse) => Option(fun)
		given putSchemaCancelDataSourceRefreshResponse: Conversion[Schema.CancelDataSourceRefreshResponse, Option[Schema.CancelDataSourceRefreshResponse]] = (fun: Schema.CancelDataSourceRefreshResponse) => Option(fun)
		given putListSchemaRefreshDataSourceObjectExecutionStatus: Conversion[List[Schema.RefreshDataSourceObjectExecutionStatus], Option[List[Schema.RefreshDataSourceObjectExecutionStatus]]] = (fun: List[Schema.RefreshDataSourceObjectExecutionStatus]) => Option(fun)
		given putSchemaDataSourceObjectReference: Conversion[Schema.DataSourceObjectReference, Option[Schema.DataSourceObjectReference]] = (fun: Schema.DataSourceObjectReference) => Option(fun)
		given putListSchemaCancelDataSourceRefreshStatus: Conversion[List[Schema.CancelDataSourceRefreshStatus], Option[List[Schema.CancelDataSourceRefreshStatus]]] = (fun: List[Schema.CancelDataSourceRefreshStatus]) => Option(fun)
		given putSchemaRefreshCancellationStatus: Conversion[Schema.RefreshCancellationStatus, Option[Schema.RefreshCancellationStatus]] = (fun: Schema.RefreshCancellationStatus) => Option(fun)
		given putSchemaRefreshCancellationStatusStateEnum: Conversion[Schema.RefreshCancellationStatus.StateEnum, Option[Schema.RefreshCancellationStatus.StateEnum]] = (fun: Schema.RefreshCancellationStatus.StateEnum) => Option(fun)
		given putSchemaRefreshCancellationStatusErrorCodeEnum: Conversion[Schema.RefreshCancellationStatus.ErrorCodeEnum, Option[Schema.RefreshCancellationStatus.ErrorCodeEnum]] = (fun: Schema.RefreshCancellationStatus.ErrorCodeEnum) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
