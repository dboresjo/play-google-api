package com.boresjo.play.api.google.datastream

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtListOperationsResponse: Format[Schema.ListOperationsResponse] = Json.format[Schema.ListOperationsResponse]
	given fmtOperation: Format[Schema.Operation] = Json.format[Schema.Operation]
	given fmtStatus: Format[Schema.Status] = Json.format[Schema.Status]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtCancelOperationRequest: Format[Schema.CancelOperationRequest] = Json.format[Schema.CancelOperationRequest]
	given fmtListConnectionProfilesResponse: Format[Schema.ListConnectionProfilesResponse] = Json.format[Schema.ListConnectionProfilesResponse]
	given fmtConnectionProfile: Format[Schema.ConnectionProfile] = Json.format[Schema.ConnectionProfile]
	given fmtOracleProfile: Format[Schema.OracleProfile] = Json.format[Schema.OracleProfile]
	given fmtGcsProfile: Format[Schema.GcsProfile] = Json.format[Schema.GcsProfile]
	given fmtMysqlProfile: Format[Schema.MysqlProfile] = Json.format[Schema.MysqlProfile]
	given fmtBigQueryProfile: Format[Schema.BigQueryProfile] = Json.format[Schema.BigQueryProfile]
	given fmtPostgresqlProfile: Format[Schema.PostgresqlProfile] = Json.format[Schema.PostgresqlProfile]
	given fmtSqlServerProfile: Format[Schema.SqlServerProfile] = Json.format[Schema.SqlServerProfile]
	given fmtStaticServiceIpConnectivity: Format[Schema.StaticServiceIpConnectivity] = Json.format[Schema.StaticServiceIpConnectivity]
	given fmtForwardSshTunnelConnectivity: Format[Schema.ForwardSshTunnelConnectivity] = Json.format[Schema.ForwardSshTunnelConnectivity]
	given fmtPrivateConnectivity: Format[Schema.PrivateConnectivity] = Json.format[Schema.PrivateConnectivity]
	given fmtOracleSslConfig: Format[Schema.OracleSslConfig] = Json.format[Schema.OracleSslConfig]
	given fmtOracleAsmConfig: Format[Schema.OracleAsmConfig] = Json.format[Schema.OracleAsmConfig]
	given fmtMysqlSslConfig: Format[Schema.MysqlSslConfig] = Json.format[Schema.MysqlSslConfig]
	given fmtDiscoverConnectionProfileRequest: Format[Schema.DiscoverConnectionProfileRequest] = Json.format[Schema.DiscoverConnectionProfileRequest]
	given fmtOracleRdbms: Format[Schema.OracleRdbms] = Json.format[Schema.OracleRdbms]
	given fmtMysqlRdbms: Format[Schema.MysqlRdbms] = Json.format[Schema.MysqlRdbms]
	given fmtPostgresqlRdbms: Format[Schema.PostgresqlRdbms] = Json.format[Schema.PostgresqlRdbms]
	given fmtSqlServerRdbms: Format[Schema.SqlServerRdbms] = Json.format[Schema.SqlServerRdbms]
	given fmtOracleSchema: Format[Schema.OracleSchema] = Json.format[Schema.OracleSchema]
	given fmtOracleTable: Format[Schema.OracleTable] = Json.format[Schema.OracleTable]
	given fmtOracleColumn: Format[Schema.OracleColumn] = Json.format[Schema.OracleColumn]
	given fmtMysqlDatabase: Format[Schema.MysqlDatabase] = Json.format[Schema.MysqlDatabase]
	given fmtMysqlTable: Format[Schema.MysqlTable] = Json.format[Schema.MysqlTable]
	given fmtMysqlColumn: Format[Schema.MysqlColumn] = Json.format[Schema.MysqlColumn]
	given fmtPostgresqlSchema: Format[Schema.PostgresqlSchema] = Json.format[Schema.PostgresqlSchema]
	given fmtPostgresqlTable: Format[Schema.PostgresqlTable] = Json.format[Schema.PostgresqlTable]
	given fmtPostgresqlColumn: Format[Schema.PostgresqlColumn] = Json.format[Schema.PostgresqlColumn]
	given fmtSqlServerSchema: Format[Schema.SqlServerSchema] = Json.format[Schema.SqlServerSchema]
	given fmtSqlServerTable: Format[Schema.SqlServerTable] = Json.format[Schema.SqlServerTable]
	given fmtSqlServerColumn: Format[Schema.SqlServerColumn] = Json.format[Schema.SqlServerColumn]
	given fmtDiscoverConnectionProfileResponse: Format[Schema.DiscoverConnectionProfileResponse] = Json.format[Schema.DiscoverConnectionProfileResponse]
	given fmtListStreamsResponse: Format[Schema.ListStreamsResponse] = Json.format[Schema.ListStreamsResponse]
	given fmtStream: Format[Schema.Stream] = Json.format[Schema.Stream]
	given fmtSourceConfig: Format[Schema.SourceConfig] = Json.format[Schema.SourceConfig]
	given fmtDestinationConfig: Format[Schema.DestinationConfig] = Json.format[Schema.DestinationConfig]
	given fmtStreamStateEnum: Format[Schema.Stream.StateEnum] = JsonEnumFormat[Schema.Stream.StateEnum]
	given fmtBackfillAllStrategy: Format[Schema.BackfillAllStrategy] = Json.format[Schema.BackfillAllStrategy]
	given fmtBackfillNoneStrategy: Format[Schema.BackfillNoneStrategy] = Json.format[Schema.BackfillNoneStrategy]
	given fmtError: Format[Schema.Error] = Json.format[Schema.Error]
	given fmtOracleSourceConfig: Format[Schema.OracleSourceConfig] = Json.format[Schema.OracleSourceConfig]
	given fmtMysqlSourceConfig: Format[Schema.MysqlSourceConfig] = Json.format[Schema.MysqlSourceConfig]
	given fmtPostgresqlSourceConfig: Format[Schema.PostgresqlSourceConfig] = Json.format[Schema.PostgresqlSourceConfig]
	given fmtSqlServerSourceConfig: Format[Schema.SqlServerSourceConfig] = Json.format[Schema.SqlServerSourceConfig]
	given fmtDropLargeObjects: Format[Schema.DropLargeObjects] = Json.format[Schema.DropLargeObjects]
	given fmtStreamLargeObjects: Format[Schema.StreamLargeObjects] = Json.format[Schema.StreamLargeObjects]
	given fmtLogMiner: Format[Schema.LogMiner] = Json.format[Schema.LogMiner]
	given fmtBinaryLogParser: Format[Schema.BinaryLogParser] = Json.format[Schema.BinaryLogParser]
	given fmtOracleAsmLogFileAccess: Format[Schema.OracleAsmLogFileAccess] = Json.format[Schema.OracleAsmLogFileAccess]
	given fmtLogFileDirectories: Format[Schema.LogFileDirectories] = Json.format[Schema.LogFileDirectories]
	given fmtBinaryLogPosition: Format[Schema.BinaryLogPosition] = Json.format[Schema.BinaryLogPosition]
	given fmtGtid: Format[Schema.Gtid] = Json.format[Schema.Gtid]
	given fmtSqlServerTransactionLogs: Format[Schema.SqlServerTransactionLogs] = Json.format[Schema.SqlServerTransactionLogs]
	given fmtSqlServerChangeTables: Format[Schema.SqlServerChangeTables] = Json.format[Schema.SqlServerChangeTables]
	given fmtGcsDestinationConfig: Format[Schema.GcsDestinationConfig] = Json.format[Schema.GcsDestinationConfig]
	given fmtBigQueryDestinationConfig: Format[Schema.BigQueryDestinationConfig] = Json.format[Schema.BigQueryDestinationConfig]
	given fmtAvroFileFormat: Format[Schema.AvroFileFormat] = Json.format[Schema.AvroFileFormat]
	given fmtJsonFileFormat: Format[Schema.JsonFileFormat] = Json.format[Schema.JsonFileFormat]
	given fmtJsonFileFormatSchemaFileFormatEnum: Format[Schema.JsonFileFormat.SchemaFileFormatEnum] = JsonEnumFormat[Schema.JsonFileFormat.SchemaFileFormatEnum]
	given fmtJsonFileFormatCompressionEnum: Format[Schema.JsonFileFormat.CompressionEnum] = JsonEnumFormat[Schema.JsonFileFormat.CompressionEnum]
	given fmtSingleTargetDataset: Format[Schema.SingleTargetDataset] = Json.format[Schema.SingleTargetDataset]
	given fmtSourceHierarchyDatasets: Format[Schema.SourceHierarchyDatasets] = Json.format[Schema.SourceHierarchyDatasets]
	given fmtMerge: Format[Schema.Merge] = Json.format[Schema.Merge]
	given fmtAppendOnly: Format[Schema.AppendOnly] = Json.format[Schema.AppendOnly]
	given fmtDatasetTemplate: Format[Schema.DatasetTemplate] = Json.format[Schema.DatasetTemplate]
	given fmtRunStreamRequest: Format[Schema.RunStreamRequest] = Json.format[Schema.RunStreamRequest]
	given fmtCdcStrategy: Format[Schema.CdcStrategy] = Json.format[Schema.CdcStrategy]
	given fmtMostRecentStartPosition: Format[Schema.MostRecentStartPosition] = Json.format[Schema.MostRecentStartPosition]
	given fmtNextAvailableStartPosition: Format[Schema.NextAvailableStartPosition] = Json.format[Schema.NextAvailableStartPosition]
	given fmtSpecificStartPosition: Format[Schema.SpecificStartPosition] = Json.format[Schema.SpecificStartPosition]
	given fmtMysqlLogPosition: Format[Schema.MysqlLogPosition] = Json.format[Schema.MysqlLogPosition]
	given fmtOracleScnPosition: Format[Schema.OracleScnPosition] = Json.format[Schema.OracleScnPosition]
	given fmtStreamObject: Format[Schema.StreamObject] = Json.format[Schema.StreamObject]
	given fmtBackfillJob: Format[Schema.BackfillJob] = Json.format[Schema.BackfillJob]
	given fmtSourceObjectIdentifier: Format[Schema.SourceObjectIdentifier] = Json.format[Schema.SourceObjectIdentifier]
	given fmtBackfillJobStateEnum: Format[Schema.BackfillJob.StateEnum] = JsonEnumFormat[Schema.BackfillJob.StateEnum]
	given fmtBackfillJobTriggerEnum: Format[Schema.BackfillJob.TriggerEnum] = JsonEnumFormat[Schema.BackfillJob.TriggerEnum]
	given fmtOracleObjectIdentifier: Format[Schema.OracleObjectIdentifier] = Json.format[Schema.OracleObjectIdentifier]
	given fmtMysqlObjectIdentifier: Format[Schema.MysqlObjectIdentifier] = Json.format[Schema.MysqlObjectIdentifier]
	given fmtPostgresqlObjectIdentifier: Format[Schema.PostgresqlObjectIdentifier] = Json.format[Schema.PostgresqlObjectIdentifier]
	given fmtSqlServerObjectIdentifier: Format[Schema.SqlServerObjectIdentifier] = Json.format[Schema.SqlServerObjectIdentifier]
	given fmtLookupStreamObjectRequest: Format[Schema.LookupStreamObjectRequest] = Json.format[Schema.LookupStreamObjectRequest]
	given fmtListStreamObjectsResponse: Format[Schema.ListStreamObjectsResponse] = Json.format[Schema.ListStreamObjectsResponse]
	given fmtStartBackfillJobRequest: Format[Schema.StartBackfillJobRequest] = Json.format[Schema.StartBackfillJobRequest]
	given fmtStartBackfillJobResponse: Format[Schema.StartBackfillJobResponse] = Json.format[Schema.StartBackfillJobResponse]
	given fmtStopBackfillJobRequest: Format[Schema.StopBackfillJobRequest] = Json.format[Schema.StopBackfillJobRequest]
	given fmtStopBackfillJobResponse: Format[Schema.StopBackfillJobResponse] = Json.format[Schema.StopBackfillJobResponse]
	given fmtFetchStaticIpsResponse: Format[Schema.FetchStaticIpsResponse] = Json.format[Schema.FetchStaticIpsResponse]
	given fmtPrivateConnection: Format[Schema.PrivateConnection] = Json.format[Schema.PrivateConnection]
	given fmtPrivateConnectionStateEnum: Format[Schema.PrivateConnection.StateEnum] = JsonEnumFormat[Schema.PrivateConnection.StateEnum]
	given fmtVpcPeeringConfig: Format[Schema.VpcPeeringConfig] = Json.format[Schema.VpcPeeringConfig]
	given fmtListPrivateConnectionsResponse: Format[Schema.ListPrivateConnectionsResponse] = Json.format[Schema.ListPrivateConnectionsResponse]
	given fmtRoute: Format[Schema.Route] = Json.format[Schema.Route]
	given fmtListRoutesResponse: Format[Schema.ListRoutesResponse] = Json.format[Schema.ListRoutesResponse]
	given fmtListLocationsResponse: Format[Schema.ListLocationsResponse] = Json.format[Schema.ListLocationsResponse]
	given fmtLocation: Format[Schema.Location] = Json.format[Schema.Location]
	given fmtOperationMetadata: Format[Schema.OperationMetadata] = Json.format[Schema.OperationMetadata]
	given fmtValidationResult: Format[Schema.ValidationResult] = Json.format[Schema.ValidationResult]
	given fmtValidation: Format[Schema.Validation] = Json.format[Schema.Validation]
	given fmtValidationStateEnum: Format[Schema.Validation.StateEnum] = JsonEnumFormat[Schema.Validation.StateEnum]
	given fmtValidationMessage: Format[Schema.ValidationMessage] = Json.format[Schema.ValidationMessage]
	given fmtValidationMessageLevelEnum: Format[Schema.ValidationMessage.LevelEnum] = JsonEnumFormat[Schema.ValidationMessage.LevelEnum]
}
