package com.boresjo.play.api.google.metastore

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtListOperationsResponse: Format[Schema.ListOperationsResponse] = Json.format[Schema.ListOperationsResponse]
	given fmtOperation: Format[Schema.Operation] = Json.format[Schema.Operation]
	given fmtStatus: Format[Schema.Status] = Json.format[Schema.Status]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtCancelOperationRequest: Format[Schema.CancelOperationRequest] = Json.format[Schema.CancelOperationRequest]
	given fmtListFederationsResponse: Format[Schema.ListFederationsResponse] = Json.format[Schema.ListFederationsResponse]
	given fmtFederation: Format[Schema.Federation] = Json.format[Schema.Federation]
	given fmtBackendMetastore: Format[Schema.BackendMetastore] = Json.format[Schema.BackendMetastore]
	given fmtFederationStateEnum: Format[Schema.Federation.StateEnum] = JsonEnumFormat[Schema.Federation.StateEnum]
	given fmtBackendMetastoreMetastoreTypeEnum: Format[Schema.BackendMetastore.MetastoreTypeEnum] = JsonEnumFormat[Schema.BackendMetastore.MetastoreTypeEnum]
	given fmtListServicesResponse: Format[Schema.ListServicesResponse] = Json.format[Schema.ListServicesResponse]
	given fmtService: Format[Schema.Service] = Json.format[Schema.Service]
	given fmtHiveMetastoreConfig: Format[Schema.HiveMetastoreConfig] = Json.format[Schema.HiveMetastoreConfig]
	given fmtServiceStateEnum: Format[Schema.Service.StateEnum] = JsonEnumFormat[Schema.Service.StateEnum]
	given fmtServiceTierEnum: Format[Schema.Service.TierEnum] = JsonEnumFormat[Schema.Service.TierEnum]
	given fmtMetadataIntegration: Format[Schema.MetadataIntegration] = Json.format[Schema.MetadataIntegration]
	given fmtMaintenanceWindow: Format[Schema.MaintenanceWindow] = Json.format[Schema.MaintenanceWindow]
	given fmtMetadataManagementActivity: Format[Schema.MetadataManagementActivity] = Json.format[Schema.MetadataManagementActivity]
	given fmtServiceReleaseChannelEnum: Format[Schema.Service.ReleaseChannelEnum] = JsonEnumFormat[Schema.Service.ReleaseChannelEnum]
	given fmtEncryptionConfig: Format[Schema.EncryptionConfig] = Json.format[Schema.EncryptionConfig]
	given fmtNetworkConfig: Format[Schema.NetworkConfig] = Json.format[Schema.NetworkConfig]
	given fmtServiceDatabaseTypeEnum: Format[Schema.Service.DatabaseTypeEnum] = JsonEnumFormat[Schema.Service.DatabaseTypeEnum]
	given fmtTelemetryConfig: Format[Schema.TelemetryConfig] = Json.format[Schema.TelemetryConfig]
	given fmtScalingConfig: Format[Schema.ScalingConfig] = Json.format[Schema.ScalingConfig]
	given fmtScheduledBackup: Format[Schema.ScheduledBackup] = Json.format[Schema.ScheduledBackup]
	given fmtKerberosConfig: Format[Schema.KerberosConfig] = Json.format[Schema.KerberosConfig]
	given fmtHiveMetastoreConfigEndpointProtocolEnum: Format[Schema.HiveMetastoreConfig.EndpointProtocolEnum] = JsonEnumFormat[Schema.HiveMetastoreConfig.EndpointProtocolEnum]
	given fmtAuxiliaryVersionConfig: Format[Schema.AuxiliaryVersionConfig] = Json.format[Schema.AuxiliaryVersionConfig]
	given fmtSecret: Format[Schema.Secret] = Json.format[Schema.Secret]
	given fmtConsumer: Format[Schema.Consumer] = Json.format[Schema.Consumer]
	given fmtDataCatalogConfig: Format[Schema.DataCatalogConfig] = Json.format[Schema.DataCatalogConfig]
	given fmtMaintenanceWindowDayOfWeekEnum: Format[Schema.MaintenanceWindow.DayOfWeekEnum] = JsonEnumFormat[Schema.MaintenanceWindow.DayOfWeekEnum]
	given fmtMetadataExport: Format[Schema.MetadataExport] = Json.format[Schema.MetadataExport]
	given fmtRestore: Format[Schema.Restore] = Json.format[Schema.Restore]
	given fmtMetadataExportStateEnum: Format[Schema.MetadataExport.StateEnum] = JsonEnumFormat[Schema.MetadataExport.StateEnum]
	given fmtMetadataExportDatabaseDumpTypeEnum: Format[Schema.MetadataExport.DatabaseDumpTypeEnum] = JsonEnumFormat[Schema.MetadataExport.DatabaseDumpTypeEnum]
	given fmtRestoreStateEnum: Format[Schema.Restore.StateEnum] = JsonEnumFormat[Schema.Restore.StateEnum]
	given fmtRestoreTypeEnum: Format[Schema.Restore.TypeEnum] = JsonEnumFormat[Schema.Restore.TypeEnum]
	given fmtTelemetryConfigLogFormatEnum: Format[Schema.TelemetryConfig.LogFormatEnum] = JsonEnumFormat[Schema.TelemetryConfig.LogFormatEnum]
	given fmtScalingConfigInstanceSizeEnum: Format[Schema.ScalingConfig.InstanceSizeEnum] = JsonEnumFormat[Schema.ScalingConfig.InstanceSizeEnum]
	given fmtAutoscalingConfig: Format[Schema.AutoscalingConfig] = Json.format[Schema.AutoscalingConfig]
	given fmtLimitConfig: Format[Schema.LimitConfig] = Json.format[Schema.LimitConfig]
	given fmtLatestBackup: Format[Schema.LatestBackup] = Json.format[Schema.LatestBackup]
	given fmtLatestBackupStateEnum: Format[Schema.LatestBackup.StateEnum] = JsonEnumFormat[Schema.LatestBackup.StateEnum]
	given fmtListMetadataImportsResponse: Format[Schema.ListMetadataImportsResponse] = Json.format[Schema.ListMetadataImportsResponse]
	given fmtMetadataImport: Format[Schema.MetadataImport] = Json.format[Schema.MetadataImport]
	given fmtDatabaseDump: Format[Schema.DatabaseDump] = Json.format[Schema.DatabaseDump]
	given fmtMetadataImportStateEnum: Format[Schema.MetadataImport.StateEnum] = JsonEnumFormat[Schema.MetadataImport.StateEnum]
	given fmtDatabaseDumpDatabaseTypeEnum: Format[Schema.DatabaseDump.DatabaseTypeEnum] = JsonEnumFormat[Schema.DatabaseDump.DatabaseTypeEnum]
	given fmtDatabaseDumpTypeEnum: Format[Schema.DatabaseDump.TypeEnum] = JsonEnumFormat[Schema.DatabaseDump.TypeEnum]
	given fmtExportMetadataRequest: Format[Schema.ExportMetadataRequest] = Json.format[Schema.ExportMetadataRequest]
	given fmtExportMetadataRequestDatabaseDumpTypeEnum: Format[Schema.ExportMetadataRequest.DatabaseDumpTypeEnum] = JsonEnumFormat[Schema.ExportMetadataRequest.DatabaseDumpTypeEnum]
	given fmtRestoreServiceRequest: Format[Schema.RestoreServiceRequest] = Json.format[Schema.RestoreServiceRequest]
	given fmtRestoreServiceRequestRestoreTypeEnum: Format[Schema.RestoreServiceRequest.RestoreTypeEnum] = JsonEnumFormat[Schema.RestoreServiceRequest.RestoreTypeEnum]
	given fmtListBackupsResponse: Format[Schema.ListBackupsResponse] = Json.format[Schema.ListBackupsResponse]
	given fmtBackup: Format[Schema.Backup] = Json.format[Schema.Backup]
	given fmtBackupStateEnum: Format[Schema.Backup.StateEnum] = JsonEnumFormat[Schema.Backup.StateEnum]
	given fmtQueryMetadataRequest: Format[Schema.QueryMetadataRequest] = Json.format[Schema.QueryMetadataRequest]
	given fmtMoveTableToDatabaseRequest: Format[Schema.MoveTableToDatabaseRequest] = Json.format[Schema.MoveTableToDatabaseRequest]
	given fmtAlterMetadataResourceLocationRequest: Format[Schema.AlterMetadataResourceLocationRequest] = Json.format[Schema.AlterMetadataResourceLocationRequest]
	given fmtAlterTablePropertiesRequest: Format[Schema.AlterTablePropertiesRequest] = Json.format[Schema.AlterTablePropertiesRequest]
	given fmtStartMigrationRequest: Format[Schema.StartMigrationRequest] = Json.format[Schema.StartMigrationRequest]
	given fmtMigrationExecution: Format[Schema.MigrationExecution] = Json.format[Schema.MigrationExecution]
	given fmtCloudSQLMigrationConfig: Format[Schema.CloudSQLMigrationConfig] = Json.format[Schema.CloudSQLMigrationConfig]
	given fmtMigrationExecutionStateEnum: Format[Schema.MigrationExecution.StateEnum] = JsonEnumFormat[Schema.MigrationExecution.StateEnum]
	given fmtMigrationExecutionPhaseEnum: Format[Schema.MigrationExecution.PhaseEnum] = JsonEnumFormat[Schema.MigrationExecution.PhaseEnum]
	given fmtCdcConfig: Format[Schema.CdcConfig] = Json.format[Schema.CdcConfig]
	given fmtCloudSQLConnectionConfig: Format[Schema.CloudSQLConnectionConfig] = Json.format[Schema.CloudSQLConnectionConfig]
	given fmtCompleteMigrationRequest: Format[Schema.CompleteMigrationRequest] = Json.format[Schema.CompleteMigrationRequest]
	given fmtCancelMigrationRequest: Format[Schema.CancelMigrationRequest] = Json.format[Schema.CancelMigrationRequest]
	given fmtListMigrationExecutionsResponse: Format[Schema.ListMigrationExecutionsResponse] = Json.format[Schema.ListMigrationExecutionsResponse]
	given fmtListLocationsResponse: Format[Schema.ListLocationsResponse] = Json.format[Schema.ListLocationsResponse]
	given fmtLocation: Format[Schema.Location] = Json.format[Schema.Location]
	given fmtSetIamPolicyRequest: Format[Schema.SetIamPolicyRequest] = Json.format[Schema.SetIamPolicyRequest]
	given fmtPolicy: Format[Schema.Policy] = Json.format[Schema.Policy]
	given fmtBinding: Format[Schema.Binding] = Json.format[Schema.Binding]
	given fmtAuditConfig: Format[Schema.AuditConfig] = Json.format[Schema.AuditConfig]
	given fmtExpr: Format[Schema.Expr] = Json.format[Schema.Expr]
	given fmtAuditLogConfig: Format[Schema.AuditLogConfig] = Json.format[Schema.AuditLogConfig]
	given fmtAuditLogConfigLogTypeEnum: Format[Schema.AuditLogConfig.LogTypeEnum] = JsonEnumFormat[Schema.AuditLogConfig.LogTypeEnum]
	given fmtTestIamPermissionsRequest: Format[Schema.TestIamPermissionsRequest] = Json.format[Schema.TestIamPermissionsRequest]
	given fmtTestIamPermissionsResponse: Format[Schema.TestIamPermissionsResponse] = Json.format[Schema.TestIamPermissionsResponse]
	given fmtLocationMetadata: Format[Schema.LocationMetadata] = Json.format[Schema.LocationMetadata]
	given fmtHiveMetastoreVersion: Format[Schema.HiveMetastoreVersion] = Json.format[Schema.HiveMetastoreVersion]
	given fmtMultiRegionMetadata: Format[Schema.MultiRegionMetadata] = Json.format[Schema.MultiRegionMetadata]
	given fmtCustomRegionMetadata: Format[Schema.CustomRegionMetadata] = Json.format[Schema.CustomRegionMetadata]
	given fmtOperationMetadata: Format[Schema.OperationMetadata] = Json.format[Schema.OperationMetadata]
	given fmtQueryMetadataResponse: Format[Schema.QueryMetadataResponse] = Json.format[Schema.QueryMetadataResponse]
	given fmtMoveTableToDatabaseResponse: Format[Schema.MoveTableToDatabaseResponse] = Json.format[Schema.MoveTableToDatabaseResponse]
	given fmtAlterMetadataResourceLocationResponse: Format[Schema.AlterMetadataResourceLocationResponse] = Json.format[Schema.AlterMetadataResourceLocationResponse]
	given fmtErrorDetails: Format[Schema.ErrorDetails] = Json.format[Schema.ErrorDetails]
}
