package com.boresjo.play.api.google.tpu

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtListLocationsResponse: Format[Schema.ListLocationsResponse] = Json.format[Schema.ListLocationsResponse]
	given fmtLocation: Format[Schema.Location] = Json.format[Schema.Location]
	given fmtListOperationsResponse: Format[Schema.ListOperationsResponse] = Json.format[Schema.ListOperationsResponse]
	given fmtOperation: Format[Schema.Operation] = Json.format[Schema.Operation]
	given fmtStatus: Format[Schema.Status] = Json.format[Schema.Status]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtListNodesResponse: Format[Schema.ListNodesResponse] = Json.format[Schema.ListNodesResponse]
	given fmtNode: Format[Schema.Node] = Json.format[Schema.Node]
	given fmtNodeStateEnum: Format[Schema.Node.StateEnum] = JsonEnumFormat[Schema.Node.StateEnum]
	given fmtNetworkConfig: Format[Schema.NetworkConfig] = Json.format[Schema.NetworkConfig]
	given fmtServiceAccount: Format[Schema.ServiceAccount] = Json.format[Schema.ServiceAccount]
	given fmtSchedulingConfig: Format[Schema.SchedulingConfig] = Json.format[Schema.SchedulingConfig]
	given fmtNetworkEndpoint: Format[Schema.NetworkEndpoint] = Json.format[Schema.NetworkEndpoint]
	given fmtNodeHealthEnum: Format[Schema.Node.HealthEnum] = JsonEnumFormat[Schema.Node.HealthEnum]
	given fmtAttachedDisk: Format[Schema.AttachedDisk] = Json.format[Schema.AttachedDisk]
	given fmtNodeApiVersionEnum: Format[Schema.Node.ApiVersionEnum] = JsonEnumFormat[Schema.Node.ApiVersionEnum]
	given fmtSymptom: Format[Schema.Symptom] = Json.format[Schema.Symptom]
	given fmtShieldedInstanceConfig: Format[Schema.ShieldedInstanceConfig] = Json.format[Schema.ShieldedInstanceConfig]
	given fmtAcceleratorConfig: Format[Schema.AcceleratorConfig] = Json.format[Schema.AcceleratorConfig]
	given fmtAccessConfig: Format[Schema.AccessConfig] = Json.format[Schema.AccessConfig]
	given fmtAttachedDiskModeEnum: Format[Schema.AttachedDisk.ModeEnum] = JsonEnumFormat[Schema.AttachedDisk.ModeEnum]
	given fmtSymptomSymptomTypeEnum: Format[Schema.Symptom.SymptomTypeEnum] = JsonEnumFormat[Schema.Symptom.SymptomTypeEnum]
	given fmtAcceleratorConfigTypeEnum: Format[Schema.AcceleratorConfig.TypeEnum] = JsonEnumFormat[Schema.AcceleratorConfig.TypeEnum]
	given fmtStopNodeRequest: Format[Schema.StopNodeRequest] = Json.format[Schema.StopNodeRequest]
	given fmtStartNodeRequest: Format[Schema.StartNodeRequest] = Json.format[Schema.StartNodeRequest]
	given fmtListQueuedResourcesResponse: Format[Schema.ListQueuedResourcesResponse] = Json.format[Schema.ListQueuedResourcesResponse]
	given fmtQueuedResource: Format[Schema.QueuedResource] = Json.format[Schema.QueuedResource]
	given fmtTpu: Format[Schema.Tpu] = Json.format[Schema.Tpu]
	given fmtSpot: Format[Schema.Spot] = Json.format[Schema.Spot]
	given fmtGuaranteed: Format[Schema.Guaranteed] = Json.format[Schema.Guaranteed]
	given fmtQueueingPolicy: Format[Schema.QueueingPolicy] = Json.format[Schema.QueueingPolicy]
	given fmtQueuedResourceState: Format[Schema.QueuedResourceState] = Json.format[Schema.QueuedResourceState]
	given fmtNodeSpec: Format[Schema.NodeSpec] = Json.format[Schema.NodeSpec]
	given fmtMultisliceParams: Format[Schema.MultisliceParams] = Json.format[Schema.MultisliceParams]
	given fmtInterval: Format[Schema.Interval] = Json.format[Schema.Interval]
	given fmtQueuedResourceStateStateEnum: Format[Schema.QueuedResourceState.StateEnum] = JsonEnumFormat[Schema.QueuedResourceState.StateEnum]
	given fmtCreatingData: Format[Schema.CreatingData] = Json.format[Schema.CreatingData]
	given fmtAcceptedData: Format[Schema.AcceptedData] = Json.format[Schema.AcceptedData]
	given fmtProvisioningData: Format[Schema.ProvisioningData] = Json.format[Schema.ProvisioningData]
	given fmtFailedData: Format[Schema.FailedData] = Json.format[Schema.FailedData]
	given fmtDeletingData: Format[Schema.DeletingData] = Json.format[Schema.DeletingData]
	given fmtActiveData: Format[Schema.ActiveData] = Json.format[Schema.ActiveData]
	given fmtSuspendingData: Format[Schema.SuspendingData] = Json.format[Schema.SuspendingData]
	given fmtSuspendedData: Format[Schema.SuspendedData] = Json.format[Schema.SuspendedData]
	given fmtQueuedResourceStateStateInitiatorEnum: Format[Schema.QueuedResourceState.StateInitiatorEnum] = JsonEnumFormat[Schema.QueuedResourceState.StateInitiatorEnum]
	given fmtResetQueuedResourceRequest: Format[Schema.ResetQueuedResourceRequest] = Json.format[Schema.ResetQueuedResourceRequest]
	given fmtGenerateServiceIdentityRequest: Format[Schema.GenerateServiceIdentityRequest] = Json.format[Schema.GenerateServiceIdentityRequest]
	given fmtGenerateServiceIdentityResponse: Format[Schema.GenerateServiceIdentityResponse] = Json.format[Schema.GenerateServiceIdentityResponse]
	given fmtServiceIdentity: Format[Schema.ServiceIdentity] = Json.format[Schema.ServiceIdentity]
	given fmtListAcceleratorTypesResponse: Format[Schema.ListAcceleratorTypesResponse] = Json.format[Schema.ListAcceleratorTypesResponse]
	given fmtAcceleratorType: Format[Schema.AcceleratorType] = Json.format[Schema.AcceleratorType]
	given fmtListRuntimeVersionsResponse: Format[Schema.ListRuntimeVersionsResponse] = Json.format[Schema.ListRuntimeVersionsResponse]
	given fmtRuntimeVersion: Format[Schema.RuntimeVersion] = Json.format[Schema.RuntimeVersion]
	given fmtGetGuestAttributesRequest: Format[Schema.GetGuestAttributesRequest] = Json.format[Schema.GetGuestAttributesRequest]
	given fmtGetGuestAttributesResponse: Format[Schema.GetGuestAttributesResponse] = Json.format[Schema.GetGuestAttributesResponse]
	given fmtGuestAttributes: Format[Schema.GuestAttributes] = Json.format[Schema.GuestAttributes]
	given fmtGuestAttributesValue: Format[Schema.GuestAttributesValue] = Json.format[Schema.GuestAttributesValue]
	given fmtGuestAttributesEntry: Format[Schema.GuestAttributesEntry] = Json.format[Schema.GuestAttributesEntry]
	given fmtOperationMetadata: Format[Schema.OperationMetadata] = Json.format[Schema.OperationMetadata]
}
