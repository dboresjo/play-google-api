package com.boresjo.play.api.google.container

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaCluster: Conversion[List[Schema.Cluster], Option[List[Schema.Cluster]]] = (fun: List[Schema.Cluster]) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putSchemaNodeConfig: Conversion[Schema.NodeConfig, Option[Schema.NodeConfig]] = (fun: Schema.NodeConfig) => Option(fun)
		given putSchemaMasterAuth: Conversion[Schema.MasterAuth, Option[Schema.MasterAuth]] = (fun: Schema.MasterAuth) => Option(fun)
		given putSchemaAddonsConfig: Conversion[Schema.AddonsConfig, Option[Schema.AddonsConfig]] = (fun: Schema.AddonsConfig) => Option(fun)
		given putListSchemaNodePool: Conversion[List[Schema.NodePool], Option[List[Schema.NodePool]]] = (fun: List[Schema.NodePool]) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putSchemaLegacyAbac: Conversion[Schema.LegacyAbac, Option[Schema.LegacyAbac]] = (fun: Schema.LegacyAbac) => Option(fun)
		given putSchemaNetworkPolicy: Conversion[Schema.NetworkPolicy, Option[Schema.NetworkPolicy]] = (fun: Schema.NetworkPolicy) => Option(fun)
		given putSchemaIPAllocationPolicy: Conversion[Schema.IPAllocationPolicy, Option[Schema.IPAllocationPolicy]] = (fun: Schema.IPAllocationPolicy) => Option(fun)
		given putSchemaMasterAuthorizedNetworksConfig: Conversion[Schema.MasterAuthorizedNetworksConfig, Option[Schema.MasterAuthorizedNetworksConfig]] = (fun: Schema.MasterAuthorizedNetworksConfig) => Option(fun)
		given putSchemaMaintenancePolicy: Conversion[Schema.MaintenancePolicy, Option[Schema.MaintenancePolicy]] = (fun: Schema.MaintenancePolicy) => Option(fun)
		given putSchemaBinaryAuthorization: Conversion[Schema.BinaryAuthorization, Option[Schema.BinaryAuthorization]] = (fun: Schema.BinaryAuthorization) => Option(fun)
		given putSchemaClusterAutoscaling: Conversion[Schema.ClusterAutoscaling, Option[Schema.ClusterAutoscaling]] = (fun: Schema.ClusterAutoscaling) => Option(fun)
		given putSchemaNetworkConfig: Conversion[Schema.NetworkConfig, Option[Schema.NetworkConfig]] = (fun: Schema.NetworkConfig) => Option(fun)
		given putSchemaMaxPodsConstraint: Conversion[Schema.MaxPodsConstraint, Option[Schema.MaxPodsConstraint]] = (fun: Schema.MaxPodsConstraint) => Option(fun)
		given putSchemaResourceUsageExportConfig: Conversion[Schema.ResourceUsageExportConfig, Option[Schema.ResourceUsageExportConfig]] = (fun: Schema.ResourceUsageExportConfig) => Option(fun)
		given putSchemaAuthenticatorGroupsConfig: Conversion[Schema.AuthenticatorGroupsConfig, Option[Schema.AuthenticatorGroupsConfig]] = (fun: Schema.AuthenticatorGroupsConfig) => Option(fun)
		given putSchemaPrivateClusterConfig: Conversion[Schema.PrivateClusterConfig, Option[Schema.PrivateClusterConfig]] = (fun: Schema.PrivateClusterConfig) => Option(fun)
		given putSchemaDatabaseEncryption: Conversion[Schema.DatabaseEncryption, Option[Schema.DatabaseEncryption]] = (fun: Schema.DatabaseEncryption) => Option(fun)
		given putSchemaVerticalPodAutoscaling: Conversion[Schema.VerticalPodAutoscaling, Option[Schema.VerticalPodAutoscaling]] = (fun: Schema.VerticalPodAutoscaling) => Option(fun)
		given putSchemaShieldedNodes: Conversion[Schema.ShieldedNodes, Option[Schema.ShieldedNodes]] = (fun: Schema.ShieldedNodes) => Option(fun)
		given putSchemaReleaseChannel: Conversion[Schema.ReleaseChannel, Option[Schema.ReleaseChannel]] = (fun: Schema.ReleaseChannel) => Option(fun)
		given putSchemaWorkloadIdentityConfig: Conversion[Schema.WorkloadIdentityConfig, Option[Schema.WorkloadIdentityConfig]] = (fun: Schema.WorkloadIdentityConfig) => Option(fun)
		given putSchemaMeshCertificates: Conversion[Schema.MeshCertificates, Option[Schema.MeshCertificates]] = (fun: Schema.MeshCertificates) => Option(fun)
		given putSchemaCostManagementConfig: Conversion[Schema.CostManagementConfig, Option[Schema.CostManagementConfig]] = (fun: Schema.CostManagementConfig) => Option(fun)
		given putSchemaNotificationConfig: Conversion[Schema.NotificationConfig, Option[Schema.NotificationConfig]] = (fun: Schema.NotificationConfig) => Option(fun)
		given putSchemaConfidentialNodes: Conversion[Schema.ConfidentialNodes, Option[Schema.ConfidentialNodes]] = (fun: Schema.ConfidentialNodes) => Option(fun)
		given putSchemaIdentityServiceConfig: Conversion[Schema.IdentityServiceConfig, Option[Schema.IdentityServiceConfig]] = (fun: Schema.IdentityServiceConfig) => Option(fun)
		given putSchemaClusterStatusEnum: Conversion[Schema.Cluster.StatusEnum, Option[Schema.Cluster.StatusEnum]] = (fun: Schema.Cluster.StatusEnum) => Option(fun)
		given putListSchemaStatusCondition: Conversion[List[Schema.StatusCondition], Option[List[Schema.StatusCondition]]] = (fun: List[Schema.StatusCondition]) => Option(fun)
		given putSchemaAutopilot: Conversion[Schema.Autopilot, Option[Schema.Autopilot]] = (fun: Schema.Autopilot) => Option(fun)
		given putSchemaParentProductConfig: Conversion[Schema.ParentProductConfig, Option[Schema.ParentProductConfig]] = (fun: Schema.ParentProductConfig) => Option(fun)
		given putSchemaNodePoolDefaults: Conversion[Schema.NodePoolDefaults, Option[Schema.NodePoolDefaults]] = (fun: Schema.NodePoolDefaults) => Option(fun)
		given putSchemaLoggingConfig: Conversion[Schema.LoggingConfig, Option[Schema.LoggingConfig]] = (fun: Schema.LoggingConfig) => Option(fun)
		given putSchemaMonitoringConfig: Conversion[Schema.MonitoringConfig, Option[Schema.MonitoringConfig]] = (fun: Schema.MonitoringConfig) => Option(fun)
		given putSchemaNodePoolAutoConfig: Conversion[Schema.NodePoolAutoConfig, Option[Schema.NodePoolAutoConfig]] = (fun: Schema.NodePoolAutoConfig) => Option(fun)
		given putSchemaFleet: Conversion[Schema.Fleet, Option[Schema.Fleet]] = (fun: Schema.Fleet) => Option(fun)
		given putSchemaSecurityPostureConfig: Conversion[Schema.SecurityPostureConfig, Option[Schema.SecurityPostureConfig]] = (fun: Schema.SecurityPostureConfig) => Option(fun)
		given putSchemaControlPlaneEndpointsConfig: Conversion[Schema.ControlPlaneEndpointsConfig, Option[Schema.ControlPlaneEndpointsConfig]] = (fun: Schema.ControlPlaneEndpointsConfig) => Option(fun)
		given putSchemaK8sBetaAPIConfig: Conversion[Schema.K8sBetaAPIConfig, Option[Schema.K8sBetaAPIConfig]] = (fun: Schema.K8sBetaAPIConfig) => Option(fun)
		given putSchemaEnterpriseConfig: Conversion[Schema.EnterpriseConfig, Option[Schema.EnterpriseConfig]] = (fun: Schema.EnterpriseConfig) => Option(fun)
		given putSchemaSecretManagerConfig: Conversion[Schema.SecretManagerConfig, Option[Schema.SecretManagerConfig]] = (fun: Schema.SecretManagerConfig) => Option(fun)
		given putSchemaCompliancePostureConfig: Conversion[Schema.CompliancePostureConfig, Option[Schema.CompliancePostureConfig]] = (fun: Schema.CompliancePostureConfig) => Option(fun)
		given putSchemaUserManagedKeysConfig: Conversion[Schema.UserManagedKeysConfig, Option[Schema.UserManagedKeysConfig]] = (fun: Schema.UserManagedKeysConfig) => Option(fun)
		given putSchemaRBACBindingConfig: Conversion[Schema.RBACBindingConfig, Option[Schema.RBACBindingConfig]] = (fun: Schema.RBACBindingConfig) => Option(fun)
		given putListSchemaAcceleratorConfig: Conversion[List[Schema.AcceleratorConfig], Option[List[Schema.AcceleratorConfig]]] = (fun: List[Schema.AcceleratorConfig]) => Option(fun)
		given putSchemaWorkloadMetadataConfig: Conversion[Schema.WorkloadMetadataConfig, Option[Schema.WorkloadMetadataConfig]] = (fun: Schema.WorkloadMetadataConfig) => Option(fun)
		given putListSchemaNodeTaint: Conversion[List[Schema.NodeTaint], Option[List[Schema.NodeTaint]]] = (fun: List[Schema.NodeTaint]) => Option(fun)
		given putSchemaSandboxConfig: Conversion[Schema.SandboxConfig, Option[Schema.SandboxConfig]] = (fun: Schema.SandboxConfig) => Option(fun)
		given putSchemaReservationAffinity: Conversion[Schema.ReservationAffinity, Option[Schema.ReservationAffinity]] = (fun: Schema.ReservationAffinity) => Option(fun)
		given putSchemaShieldedInstanceConfig: Conversion[Schema.ShieldedInstanceConfig, Option[Schema.ShieldedInstanceConfig]] = (fun: Schema.ShieldedInstanceConfig) => Option(fun)
		given putSchemaLinuxNodeConfig: Conversion[Schema.LinuxNodeConfig, Option[Schema.LinuxNodeConfig]] = (fun: Schema.LinuxNodeConfig) => Option(fun)
		given putSchemaNodeKubeletConfig: Conversion[Schema.NodeKubeletConfig, Option[Schema.NodeKubeletConfig]] = (fun: Schema.NodeKubeletConfig) => Option(fun)
		given putSchemaGcfsConfig: Conversion[Schema.GcfsConfig, Option[Schema.GcfsConfig]] = (fun: Schema.GcfsConfig) => Option(fun)
		given putSchemaAdvancedMachineFeatures: Conversion[Schema.AdvancedMachineFeatures, Option[Schema.AdvancedMachineFeatures]] = (fun: Schema.AdvancedMachineFeatures) => Option(fun)
		given putSchemaVirtualNIC: Conversion[Schema.VirtualNIC, Option[Schema.VirtualNIC]] = (fun: Schema.VirtualNIC) => Option(fun)
		given putSchemaFastSocket: Conversion[Schema.FastSocket, Option[Schema.FastSocket]] = (fun: Schema.FastSocket) => Option(fun)
		given putSchemaNodePoolLoggingConfig: Conversion[Schema.NodePoolLoggingConfig, Option[Schema.NodePoolLoggingConfig]] = (fun: Schema.NodePoolLoggingConfig) => Option(fun)
		given putSchemaWindowsNodeConfig: Conversion[Schema.WindowsNodeConfig, Option[Schema.WindowsNodeConfig]] = (fun: Schema.WindowsNodeConfig) => Option(fun)
		given putSchemaLocalNvmeSsdBlockConfig: Conversion[Schema.LocalNvmeSsdBlockConfig, Option[Schema.LocalNvmeSsdBlockConfig]] = (fun: Schema.LocalNvmeSsdBlockConfig) => Option(fun)
		given putSchemaEphemeralStorageLocalSsdConfig: Conversion[Schema.EphemeralStorageLocalSsdConfig, Option[Schema.EphemeralStorageLocalSsdConfig]] = (fun: Schema.EphemeralStorageLocalSsdConfig) => Option(fun)
		given putSchemaSoleTenantConfig: Conversion[Schema.SoleTenantConfig, Option[Schema.SoleTenantConfig]] = (fun: Schema.SoleTenantConfig) => Option(fun)
		given putSchemaContainerdConfig: Conversion[Schema.ContainerdConfig, Option[Schema.ContainerdConfig]] = (fun: Schema.ContainerdConfig) => Option(fun)
		given putSchemaResourceManagerTags: Conversion[Schema.ResourceManagerTags, Option[Schema.ResourceManagerTags]] = (fun: Schema.ResourceManagerTags) => Option(fun)
		given putListSchemaSecondaryBootDisk: Conversion[List[Schema.SecondaryBootDisk], Option[List[Schema.SecondaryBootDisk]]] = (fun: List[Schema.SecondaryBootDisk]) => Option(fun)
		given putSchemaSecondaryBootDiskUpdateStrategy: Conversion[Schema.SecondaryBootDiskUpdateStrategy, Option[Schema.SecondaryBootDiskUpdateStrategy]] = (fun: Schema.SecondaryBootDiskUpdateStrategy) => Option(fun)
		given putSchemaNodeConfigLocalSsdEncryptionModeEnum: Conversion[Schema.NodeConfig.LocalSsdEncryptionModeEnum, Option[Schema.NodeConfig.LocalSsdEncryptionModeEnum]] = (fun: Schema.NodeConfig.LocalSsdEncryptionModeEnum) => Option(fun)
		given putSchemaNodeConfigEffectiveCgroupModeEnum: Conversion[Schema.NodeConfig.EffectiveCgroupModeEnum, Option[Schema.NodeConfig.EffectiveCgroupModeEnum]] = (fun: Schema.NodeConfig.EffectiveCgroupModeEnum) => Option(fun)
		given putSchemaGPUSharingConfig: Conversion[Schema.GPUSharingConfig, Option[Schema.GPUSharingConfig]] = (fun: Schema.GPUSharingConfig) => Option(fun)
		given putSchemaGPUDriverInstallationConfig: Conversion[Schema.GPUDriverInstallationConfig, Option[Schema.GPUDriverInstallationConfig]] = (fun: Schema.GPUDriverInstallationConfig) => Option(fun)
		given putSchemaGPUSharingConfigGpuSharingStrategyEnum: Conversion[Schema.GPUSharingConfig.GpuSharingStrategyEnum, Option[Schema.GPUSharingConfig.GpuSharingStrategyEnum]] = (fun: Schema.GPUSharingConfig.GpuSharingStrategyEnum) => Option(fun)
		given putSchemaGPUDriverInstallationConfigGpuDriverVersionEnum: Conversion[Schema.GPUDriverInstallationConfig.GpuDriverVersionEnum, Option[Schema.GPUDriverInstallationConfig.GpuDriverVersionEnum]] = (fun: Schema.GPUDriverInstallationConfig.GpuDriverVersionEnum) => Option(fun)
		given putSchemaWorkloadMetadataConfigModeEnum: Conversion[Schema.WorkloadMetadataConfig.ModeEnum, Option[Schema.WorkloadMetadataConfig.ModeEnum]] = (fun: Schema.WorkloadMetadataConfig.ModeEnum) => Option(fun)
		given putSchemaNodeTaintEffectEnum: Conversion[Schema.NodeTaint.EffectEnum, Option[Schema.NodeTaint.EffectEnum]] = (fun: Schema.NodeTaint.EffectEnum) => Option(fun)
		given putSchemaSandboxConfigTypeEnum: Conversion[Schema.SandboxConfig.TypeEnum, Option[Schema.SandboxConfig.TypeEnum]] = (fun: Schema.SandboxConfig.TypeEnum) => Option(fun)
		given putSchemaReservationAffinityConsumeReservationTypeEnum: Conversion[Schema.ReservationAffinity.ConsumeReservationTypeEnum, Option[Schema.ReservationAffinity.ConsumeReservationTypeEnum]] = (fun: Schema.ReservationAffinity.ConsumeReservationTypeEnum) => Option(fun)
		given putSchemaLinuxNodeConfigCgroupModeEnum: Conversion[Schema.LinuxNodeConfig.CgroupModeEnum, Option[Schema.LinuxNodeConfig.CgroupModeEnum]] = (fun: Schema.LinuxNodeConfig.CgroupModeEnum) => Option(fun)
		given putSchemaHugepagesConfig: Conversion[Schema.HugepagesConfig, Option[Schema.HugepagesConfig]] = (fun: Schema.HugepagesConfig) => Option(fun)
		given putSchemaLoggingVariantConfig: Conversion[Schema.LoggingVariantConfig, Option[Schema.LoggingVariantConfig]] = (fun: Schema.LoggingVariantConfig) => Option(fun)
		given putSchemaLoggingVariantConfigVariantEnum: Conversion[Schema.LoggingVariantConfig.VariantEnum, Option[Schema.LoggingVariantConfig.VariantEnum]] = (fun: Schema.LoggingVariantConfig.VariantEnum) => Option(fun)
		given putSchemaWindowsNodeConfigOsVersionEnum: Conversion[Schema.WindowsNodeConfig.OsVersionEnum, Option[Schema.WindowsNodeConfig.OsVersionEnum]] = (fun: Schema.WindowsNodeConfig.OsVersionEnum) => Option(fun)
		given putListSchemaNodeAffinity: Conversion[List[Schema.NodeAffinity], Option[List[Schema.NodeAffinity]]] = (fun: List[Schema.NodeAffinity]) => Option(fun)
		given putSchemaNodeAffinityOperatorEnum: Conversion[Schema.NodeAffinity.OperatorEnum, Option[Schema.NodeAffinity.OperatorEnum]] = (fun: Schema.NodeAffinity.OperatorEnum) => Option(fun)
		given putSchemaPrivateRegistryAccessConfig: Conversion[Schema.PrivateRegistryAccessConfig, Option[Schema.PrivateRegistryAccessConfig]] = (fun: Schema.PrivateRegistryAccessConfig) => Option(fun)
		given putListSchemaCertificateAuthorityDomainConfig: Conversion[List[Schema.CertificateAuthorityDomainConfig], Option[List[Schema.CertificateAuthorityDomainConfig]]] = (fun: List[Schema.CertificateAuthorityDomainConfig]) => Option(fun)
		given putSchemaGCPSecretManagerCertificateConfig: Conversion[Schema.GCPSecretManagerCertificateConfig, Option[Schema.GCPSecretManagerCertificateConfig]] = (fun: Schema.GCPSecretManagerCertificateConfig) => Option(fun)
		given putSchemaSecondaryBootDiskModeEnum: Conversion[Schema.SecondaryBootDisk.ModeEnum, Option[Schema.SecondaryBootDisk.ModeEnum]] = (fun: Schema.SecondaryBootDisk.ModeEnum) => Option(fun)
		given putSchemaClientCertificateConfig: Conversion[Schema.ClientCertificateConfig, Option[Schema.ClientCertificateConfig]] = (fun: Schema.ClientCertificateConfig) => Option(fun)
		given putSchemaHttpLoadBalancing: Conversion[Schema.HttpLoadBalancing, Option[Schema.HttpLoadBalancing]] = (fun: Schema.HttpLoadBalancing) => Option(fun)
		given putSchemaHorizontalPodAutoscaling: Conversion[Schema.HorizontalPodAutoscaling, Option[Schema.HorizontalPodAutoscaling]] = (fun: Schema.HorizontalPodAutoscaling) => Option(fun)
		given putSchemaKubernetesDashboard: Conversion[Schema.KubernetesDashboard, Option[Schema.KubernetesDashboard]] = (fun: Schema.KubernetesDashboard) => Option(fun)
		given putSchemaNetworkPolicyConfig: Conversion[Schema.NetworkPolicyConfig, Option[Schema.NetworkPolicyConfig]] = (fun: Schema.NetworkPolicyConfig) => Option(fun)
		given putSchemaCloudRunConfig: Conversion[Schema.CloudRunConfig, Option[Schema.CloudRunConfig]] = (fun: Schema.CloudRunConfig) => Option(fun)
		given putSchemaDnsCacheConfig: Conversion[Schema.DnsCacheConfig, Option[Schema.DnsCacheConfig]] = (fun: Schema.DnsCacheConfig) => Option(fun)
		given putSchemaConfigConnectorConfig: Conversion[Schema.ConfigConnectorConfig, Option[Schema.ConfigConnectorConfig]] = (fun: Schema.ConfigConnectorConfig) => Option(fun)
		given putSchemaGcePersistentDiskCsiDriverConfig: Conversion[Schema.GcePersistentDiskCsiDriverConfig, Option[Schema.GcePersistentDiskCsiDriverConfig]] = (fun: Schema.GcePersistentDiskCsiDriverConfig) => Option(fun)
		given putSchemaGcpFilestoreCsiDriverConfig: Conversion[Schema.GcpFilestoreCsiDriverConfig, Option[Schema.GcpFilestoreCsiDriverConfig]] = (fun: Schema.GcpFilestoreCsiDriverConfig) => Option(fun)
		given putSchemaGkeBackupAgentConfig: Conversion[Schema.GkeBackupAgentConfig, Option[Schema.GkeBackupAgentConfig]] = (fun: Schema.GkeBackupAgentConfig) => Option(fun)
		given putSchemaGcsFuseCsiDriverConfig: Conversion[Schema.GcsFuseCsiDriverConfig, Option[Schema.GcsFuseCsiDriverConfig]] = (fun: Schema.GcsFuseCsiDriverConfig) => Option(fun)
		given putSchemaStatefulHAConfig: Conversion[Schema.StatefulHAConfig, Option[Schema.StatefulHAConfig]] = (fun: Schema.StatefulHAConfig) => Option(fun)
		given putSchemaParallelstoreCsiDriverConfig: Conversion[Schema.ParallelstoreCsiDriverConfig, Option[Schema.ParallelstoreCsiDriverConfig]] = (fun: Schema.ParallelstoreCsiDriverConfig) => Option(fun)
		given putSchemaRayOperatorConfig: Conversion[Schema.RayOperatorConfig, Option[Schema.RayOperatorConfig]] = (fun: Schema.RayOperatorConfig) => Option(fun)
		given putSchemaCloudRunConfigLoadBalancerTypeEnum: Conversion[Schema.CloudRunConfig.LoadBalancerTypeEnum, Option[Schema.CloudRunConfig.LoadBalancerTypeEnum]] = (fun: Schema.CloudRunConfig.LoadBalancerTypeEnum) => Option(fun)
		given putSchemaRayClusterLoggingConfig: Conversion[Schema.RayClusterLoggingConfig, Option[Schema.RayClusterLoggingConfig]] = (fun: Schema.RayClusterLoggingConfig) => Option(fun)
		given putSchemaRayClusterMonitoringConfig: Conversion[Schema.RayClusterMonitoringConfig, Option[Schema.RayClusterMonitoringConfig]] = (fun: Schema.RayClusterMonitoringConfig) => Option(fun)
		given putSchemaNodeNetworkConfig: Conversion[Schema.NodeNetworkConfig, Option[Schema.NodeNetworkConfig]] = (fun: Schema.NodeNetworkConfig) => Option(fun)
		given putSchemaNodePoolStatusEnum: Conversion[Schema.NodePool.StatusEnum, Option[Schema.NodePool.StatusEnum]] = (fun: Schema.NodePool.StatusEnum) => Option(fun)
		given putSchemaNodePoolAutoscaling: Conversion[Schema.NodePoolAutoscaling, Option[Schema.NodePoolAutoscaling]] = (fun: Schema.NodePoolAutoscaling) => Option(fun)
		given putSchemaNodeManagement: Conversion[Schema.NodeManagement, Option[Schema.NodeManagement]] = (fun: Schema.NodeManagement) => Option(fun)
		given putSchemaUpgradeSettings: Conversion[Schema.UpgradeSettings, Option[Schema.UpgradeSettings]] = (fun: Schema.UpgradeSettings) => Option(fun)
		given putSchemaPlacementPolicy: Conversion[Schema.PlacementPolicy, Option[Schema.PlacementPolicy]] = (fun: Schema.PlacementPolicy) => Option(fun)
		given putSchemaUpdateInfo: Conversion[Schema.UpdateInfo, Option[Schema.UpdateInfo]] = (fun: Schema.UpdateInfo) => Option(fun)
		given putSchemaQueuedProvisioning: Conversion[Schema.QueuedProvisioning, Option[Schema.QueuedProvisioning]] = (fun: Schema.QueuedProvisioning) => Option(fun)
		given putSchemaBestEffortProvisioning: Conversion[Schema.BestEffortProvisioning, Option[Schema.BestEffortProvisioning]] = (fun: Schema.BestEffortProvisioning) => Option(fun)
		given putSchemaNetworkPerformanceConfig: Conversion[Schema.NetworkPerformanceConfig, Option[Schema.NetworkPerformanceConfig]] = (fun: Schema.NetworkPerformanceConfig) => Option(fun)
		given putSchemaPodCIDROverprovisionConfig: Conversion[Schema.PodCIDROverprovisionConfig, Option[Schema.PodCIDROverprovisionConfig]] = (fun: Schema.PodCIDROverprovisionConfig) => Option(fun)
		given putListSchemaAdditionalNodeNetworkConfig: Conversion[List[Schema.AdditionalNodeNetworkConfig], Option[List[Schema.AdditionalNodeNetworkConfig]]] = (fun: List[Schema.AdditionalNodeNetworkConfig]) => Option(fun)
		given putListSchemaAdditionalPodNetworkConfig: Conversion[List[Schema.AdditionalPodNetworkConfig], Option[List[Schema.AdditionalPodNetworkConfig]]] = (fun: List[Schema.AdditionalPodNetworkConfig]) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaNetworkPerformanceConfigTotalEgressBandwidthTierEnum: Conversion[Schema.NetworkPerformanceConfig.TotalEgressBandwidthTierEnum, Option[Schema.NetworkPerformanceConfig.TotalEgressBandwidthTierEnum]] = (fun: Schema.NetworkPerformanceConfig.TotalEgressBandwidthTierEnum) => Option(fun)
		given putSchemaNodePoolAutoscalingLocationPolicyEnum: Conversion[Schema.NodePoolAutoscaling.LocationPolicyEnum, Option[Schema.NodePoolAutoscaling.LocationPolicyEnum]] = (fun: Schema.NodePoolAutoscaling.LocationPolicyEnum) => Option(fun)
		given putSchemaAutoUpgradeOptions: Conversion[Schema.AutoUpgradeOptions, Option[Schema.AutoUpgradeOptions]] = (fun: Schema.AutoUpgradeOptions) => Option(fun)
		given putSchemaStatusConditionCodeEnum: Conversion[Schema.StatusCondition.CodeEnum, Option[Schema.StatusCondition.CodeEnum]] = (fun: Schema.StatusCondition.CodeEnum) => Option(fun)
		given putSchemaStatusConditionCanonicalCodeEnum: Conversion[Schema.StatusCondition.CanonicalCodeEnum, Option[Schema.StatusCondition.CanonicalCodeEnum]] = (fun: Schema.StatusCondition.CanonicalCodeEnum) => Option(fun)
		given putSchemaUpgradeSettingsStrategyEnum: Conversion[Schema.UpgradeSettings.StrategyEnum, Option[Schema.UpgradeSettings.StrategyEnum]] = (fun: Schema.UpgradeSettings.StrategyEnum) => Option(fun)
		given putSchemaBlueGreenSettings: Conversion[Schema.BlueGreenSettings, Option[Schema.BlueGreenSettings]] = (fun: Schema.BlueGreenSettings) => Option(fun)
		given putSchemaStandardRolloutPolicy: Conversion[Schema.StandardRolloutPolicy, Option[Schema.StandardRolloutPolicy]] = (fun: Schema.StandardRolloutPolicy) => Option(fun)
		given putSchemaPlacementPolicyTypeEnum: Conversion[Schema.PlacementPolicy.TypeEnum, Option[Schema.PlacementPolicy.TypeEnum]] = (fun: Schema.PlacementPolicy.TypeEnum) => Option(fun)
		given putSchemaBlueGreenInfo: Conversion[Schema.BlueGreenInfo, Option[Schema.BlueGreenInfo]] = (fun: Schema.BlueGreenInfo) => Option(fun)
		given putSchemaBlueGreenInfoPhaseEnum: Conversion[Schema.BlueGreenInfo.PhaseEnum, Option[Schema.BlueGreenInfo.PhaseEnum]] = (fun: Schema.BlueGreenInfo.PhaseEnum) => Option(fun)
		given putSchemaNetworkPolicyProviderEnum: Conversion[Schema.NetworkPolicy.ProviderEnum, Option[Schema.NetworkPolicy.ProviderEnum]] = (fun: Schema.NetworkPolicy.ProviderEnum) => Option(fun)
		given putSchemaIPAllocationPolicyStackTypeEnum: Conversion[Schema.IPAllocationPolicy.StackTypeEnum, Option[Schema.IPAllocationPolicy.StackTypeEnum]] = (fun: Schema.IPAllocationPolicy.StackTypeEnum) => Option(fun)
		given putSchemaIPAllocationPolicyIpv6AccessTypeEnum: Conversion[Schema.IPAllocationPolicy.Ipv6AccessTypeEnum, Option[Schema.IPAllocationPolicy.Ipv6AccessTypeEnum]] = (fun: Schema.IPAllocationPolicy.Ipv6AccessTypeEnum) => Option(fun)
		given putSchemaAdditionalPodRangesConfig: Conversion[Schema.AdditionalPodRangesConfig, Option[Schema.AdditionalPodRangesConfig]] = (fun: Schema.AdditionalPodRangesConfig) => Option(fun)
		given putListSchemaRangeInfo: Conversion[List[Schema.RangeInfo], Option[List[Schema.RangeInfo]]] = (fun: List[Schema.RangeInfo]) => Option(fun)
		given putListSchemaCidrBlock: Conversion[List[Schema.CidrBlock], Option[List[Schema.CidrBlock]]] = (fun: List[Schema.CidrBlock]) => Option(fun)
		given putSchemaMaintenanceWindow: Conversion[Schema.MaintenanceWindow, Option[Schema.MaintenanceWindow]] = (fun: Schema.MaintenanceWindow) => Option(fun)
		given putSchemaDailyMaintenanceWindow: Conversion[Schema.DailyMaintenanceWindow, Option[Schema.DailyMaintenanceWindow]] = (fun: Schema.DailyMaintenanceWindow) => Option(fun)
		given putSchemaRecurringTimeWindow: Conversion[Schema.RecurringTimeWindow, Option[Schema.RecurringTimeWindow]] = (fun: Schema.RecurringTimeWindow) => Option(fun)
		given putMapStringSchemaTimeWindow: Conversion[Map[String, Schema.TimeWindow], Option[Map[String, Schema.TimeWindow]]] = (fun: Map[String, Schema.TimeWindow]) => Option(fun)
		given putSchemaTimeWindow: Conversion[Schema.TimeWindow, Option[Schema.TimeWindow]] = (fun: Schema.TimeWindow) => Option(fun)
		given putSchemaMaintenanceExclusionOptions: Conversion[Schema.MaintenanceExclusionOptions, Option[Schema.MaintenanceExclusionOptions]] = (fun: Schema.MaintenanceExclusionOptions) => Option(fun)
		given putSchemaMaintenanceExclusionOptionsScopeEnum: Conversion[Schema.MaintenanceExclusionOptions.ScopeEnum, Option[Schema.MaintenanceExclusionOptions.ScopeEnum]] = (fun: Schema.MaintenanceExclusionOptions.ScopeEnum) => Option(fun)
		given putSchemaBinaryAuthorizationEvaluationModeEnum: Conversion[Schema.BinaryAuthorization.EvaluationModeEnum, Option[Schema.BinaryAuthorization.EvaluationModeEnum]] = (fun: Schema.BinaryAuthorization.EvaluationModeEnum) => Option(fun)
		given putListSchemaResourceLimit: Conversion[List[Schema.ResourceLimit], Option[List[Schema.ResourceLimit]]] = (fun: List[Schema.ResourceLimit]) => Option(fun)
		given putSchemaClusterAutoscalingAutoscalingProfileEnum: Conversion[Schema.ClusterAutoscaling.AutoscalingProfileEnum, Option[Schema.ClusterAutoscaling.AutoscalingProfileEnum]] = (fun: Schema.ClusterAutoscaling.AutoscalingProfileEnum) => Option(fun)
		given putSchemaAutoprovisioningNodePoolDefaults: Conversion[Schema.AutoprovisioningNodePoolDefaults, Option[Schema.AutoprovisioningNodePoolDefaults]] = (fun: Schema.AutoprovisioningNodePoolDefaults) => Option(fun)
		given putSchemaDefaultSnatStatus: Conversion[Schema.DefaultSnatStatus, Option[Schema.DefaultSnatStatus]] = (fun: Schema.DefaultSnatStatus) => Option(fun)
		given putSchemaNetworkConfigDatapathProviderEnum: Conversion[Schema.NetworkConfig.DatapathProviderEnum, Option[Schema.NetworkConfig.DatapathProviderEnum]] = (fun: Schema.NetworkConfig.DatapathProviderEnum) => Option(fun)
		given putSchemaNetworkConfigPrivateIpv6GoogleAccessEnum: Conversion[Schema.NetworkConfig.PrivateIpv6GoogleAccessEnum, Option[Schema.NetworkConfig.PrivateIpv6GoogleAccessEnum]] = (fun: Schema.NetworkConfig.PrivateIpv6GoogleAccessEnum) => Option(fun)
		given putSchemaDNSConfig: Conversion[Schema.DNSConfig, Option[Schema.DNSConfig]] = (fun: Schema.DNSConfig) => Option(fun)
		given putSchemaServiceExternalIPsConfig: Conversion[Schema.ServiceExternalIPsConfig, Option[Schema.ServiceExternalIPsConfig]] = (fun: Schema.ServiceExternalIPsConfig) => Option(fun)
		given putSchemaGatewayAPIConfig: Conversion[Schema.GatewayAPIConfig, Option[Schema.GatewayAPIConfig]] = (fun: Schema.GatewayAPIConfig) => Option(fun)
		given putSchemaClusterNetworkPerformanceConfig: Conversion[Schema.ClusterNetworkPerformanceConfig, Option[Schema.ClusterNetworkPerformanceConfig]] = (fun: Schema.ClusterNetworkPerformanceConfig) => Option(fun)
		given putSchemaNetworkConfigInTransitEncryptionConfigEnum: Conversion[Schema.NetworkConfig.InTransitEncryptionConfigEnum, Option[Schema.NetworkConfig.InTransitEncryptionConfigEnum]] = (fun: Schema.NetworkConfig.InTransitEncryptionConfigEnum) => Option(fun)
		given putSchemaDNSConfigClusterDnsEnum: Conversion[Schema.DNSConfig.ClusterDnsEnum, Option[Schema.DNSConfig.ClusterDnsEnum]] = (fun: Schema.DNSConfig.ClusterDnsEnum) => Option(fun)
		given putSchemaDNSConfigClusterDnsScopeEnum: Conversion[Schema.DNSConfig.ClusterDnsScopeEnum, Option[Schema.DNSConfig.ClusterDnsScopeEnum]] = (fun: Schema.DNSConfig.ClusterDnsScopeEnum) => Option(fun)
		given putSchemaGatewayAPIConfigChannelEnum: Conversion[Schema.GatewayAPIConfig.ChannelEnum, Option[Schema.GatewayAPIConfig.ChannelEnum]] = (fun: Schema.GatewayAPIConfig.ChannelEnum) => Option(fun)
		given putSchemaClusterNetworkPerformanceConfigTotalEgressBandwidthTierEnum: Conversion[Schema.ClusterNetworkPerformanceConfig.TotalEgressBandwidthTierEnum, Option[Schema.ClusterNetworkPerformanceConfig.TotalEgressBandwidthTierEnum]] = (fun: Schema.ClusterNetworkPerformanceConfig.TotalEgressBandwidthTierEnum) => Option(fun)
		given putSchemaBigQueryDestination: Conversion[Schema.BigQueryDestination, Option[Schema.BigQueryDestination]] = (fun: Schema.BigQueryDestination) => Option(fun)
		given putSchemaConsumptionMeteringConfig: Conversion[Schema.ConsumptionMeteringConfig, Option[Schema.ConsumptionMeteringConfig]] = (fun: Schema.ConsumptionMeteringConfig) => Option(fun)
		given putSchemaPrivateClusterMasterGlobalAccessConfig: Conversion[Schema.PrivateClusterMasterGlobalAccessConfig, Option[Schema.PrivateClusterMasterGlobalAccessConfig]] = (fun: Schema.PrivateClusterMasterGlobalAccessConfig) => Option(fun)
		given putSchemaDatabaseEncryptionStateEnum: Conversion[Schema.DatabaseEncryption.StateEnum, Option[Schema.DatabaseEncryption.StateEnum]] = (fun: Schema.DatabaseEncryption.StateEnum) => Option(fun)
		given putSchemaDatabaseEncryptionCurrentStateEnum: Conversion[Schema.DatabaseEncryption.CurrentStateEnum, Option[Schema.DatabaseEncryption.CurrentStateEnum]] = (fun: Schema.DatabaseEncryption.CurrentStateEnum) => Option(fun)
		given putListSchemaOperationError: Conversion[List[Schema.OperationError], Option[List[Schema.OperationError]]] = (fun: List[Schema.OperationError]) => Option(fun)
		given putSchemaReleaseChannelChannelEnum: Conversion[Schema.ReleaseChannel.ChannelEnum, Option[Schema.ReleaseChannel.ChannelEnum]] = (fun: Schema.ReleaseChannel.ChannelEnum) => Option(fun)
		given putSchemaPubSub: Conversion[Schema.PubSub, Option[Schema.PubSub]] = (fun: Schema.PubSub) => Option(fun)
		given putSchemaFilter: Conversion[Schema.Filter, Option[Schema.Filter]] = (fun: Schema.Filter) => Option(fun)
		given putListSchemaFilterEventTypeEnum: Conversion[List[Schema.Filter.EventTypeEnum], Option[List[Schema.Filter.EventTypeEnum]]] = (fun: List[Schema.Filter.EventTypeEnum]) => Option(fun)
		given putSchemaWorkloadPolicyConfig: Conversion[Schema.WorkloadPolicyConfig, Option[Schema.WorkloadPolicyConfig]] = (fun: Schema.WorkloadPolicyConfig) => Option(fun)
		given putSchemaNodeConfigDefaults: Conversion[Schema.NodeConfigDefaults, Option[Schema.NodeConfigDefaults]] = (fun: Schema.NodeConfigDefaults) => Option(fun)
		given putSchemaLoggingComponentConfig: Conversion[Schema.LoggingComponentConfig, Option[Schema.LoggingComponentConfig]] = (fun: Schema.LoggingComponentConfig) => Option(fun)
		given putListSchemaLoggingComponentConfigEnableComponentsEnum: Conversion[List[Schema.LoggingComponentConfig.EnableComponentsEnum], Option[List[Schema.LoggingComponentConfig.EnableComponentsEnum]]] = (fun: List[Schema.LoggingComponentConfig.EnableComponentsEnum]) => Option(fun)
		given putSchemaMonitoringComponentConfig: Conversion[Schema.MonitoringComponentConfig, Option[Schema.MonitoringComponentConfig]] = (fun: Schema.MonitoringComponentConfig) => Option(fun)
		given putSchemaManagedPrometheusConfig: Conversion[Schema.ManagedPrometheusConfig, Option[Schema.ManagedPrometheusConfig]] = (fun: Schema.ManagedPrometheusConfig) => Option(fun)
		given putSchemaAdvancedDatapathObservabilityConfig: Conversion[Schema.AdvancedDatapathObservabilityConfig, Option[Schema.AdvancedDatapathObservabilityConfig]] = (fun: Schema.AdvancedDatapathObservabilityConfig) => Option(fun)
		given putListSchemaMonitoringComponentConfigEnableComponentsEnum: Conversion[List[Schema.MonitoringComponentConfig.EnableComponentsEnum], Option[List[Schema.MonitoringComponentConfig.EnableComponentsEnum]]] = (fun: List[Schema.MonitoringComponentConfig.EnableComponentsEnum]) => Option(fun)
		given putSchemaAdvancedDatapathObservabilityConfigRelayModeEnum: Conversion[Schema.AdvancedDatapathObservabilityConfig.RelayModeEnum, Option[Schema.AdvancedDatapathObservabilityConfig.RelayModeEnum]] = (fun: Schema.AdvancedDatapathObservabilityConfig.RelayModeEnum) => Option(fun)
		given putSchemaNetworkTags: Conversion[Schema.NetworkTags, Option[Schema.NetworkTags]] = (fun: Schema.NetworkTags) => Option(fun)
		given putSchemaSecurityPostureConfigModeEnum: Conversion[Schema.SecurityPostureConfig.ModeEnum, Option[Schema.SecurityPostureConfig.ModeEnum]] = (fun: Schema.SecurityPostureConfig.ModeEnum) => Option(fun)
		given putSchemaSecurityPostureConfigVulnerabilityModeEnum: Conversion[Schema.SecurityPostureConfig.VulnerabilityModeEnum, Option[Schema.SecurityPostureConfig.VulnerabilityModeEnum]] = (fun: Schema.SecurityPostureConfig.VulnerabilityModeEnum) => Option(fun)
		given putSchemaDNSEndpointConfig: Conversion[Schema.DNSEndpointConfig, Option[Schema.DNSEndpointConfig]] = (fun: Schema.DNSEndpointConfig) => Option(fun)
		given putSchemaIPEndpointsConfig: Conversion[Schema.IPEndpointsConfig, Option[Schema.IPEndpointsConfig]] = (fun: Schema.IPEndpointsConfig) => Option(fun)
		given putSchemaEnterpriseConfigClusterTierEnum: Conversion[Schema.EnterpriseConfig.ClusterTierEnum, Option[Schema.EnterpriseConfig.ClusterTierEnum]] = (fun: Schema.EnterpriseConfig.ClusterTierEnum) => Option(fun)
		given putSchemaEnterpriseConfigDesiredTierEnum: Conversion[Schema.EnterpriseConfig.DesiredTierEnum, Option[Schema.EnterpriseConfig.DesiredTierEnum]] = (fun: Schema.EnterpriseConfig.DesiredTierEnum) => Option(fun)
		given putSchemaCompliancePostureConfigModeEnum: Conversion[Schema.CompliancePostureConfig.ModeEnum, Option[Schema.CompliancePostureConfig.ModeEnum]] = (fun: Schema.CompliancePostureConfig.ModeEnum) => Option(fun)
		given putListSchemaComplianceStandard: Conversion[List[Schema.ComplianceStandard], Option[List[Schema.ComplianceStandard]]] = (fun: List[Schema.ComplianceStandard]) => Option(fun)
		given putSchemaCluster: Conversion[Schema.Cluster, Option[Schema.Cluster]] = (fun: Schema.Cluster) => Option(fun)
		given putSchemaOperationOperationTypeEnum: Conversion[Schema.Operation.OperationTypeEnum, Option[Schema.Operation.OperationTypeEnum]] = (fun: Schema.Operation.OperationTypeEnum) => Option(fun)
		given putSchemaOperationStatusEnum: Conversion[Schema.Operation.StatusEnum, Option[Schema.Operation.StatusEnum]] = (fun: Schema.Operation.StatusEnum) => Option(fun)
		given putSchemaOperationProgress: Conversion[Schema.OperationProgress, Option[Schema.OperationProgress]] = (fun: Schema.OperationProgress) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putSchemaOperationProgressStatusEnum: Conversion[Schema.OperationProgress.StatusEnum, Option[Schema.OperationProgress.StatusEnum]] = (fun: Schema.OperationProgress.StatusEnum) => Option(fun)
		given putListSchemaMetric: Conversion[List[Schema.Metric], Option[List[Schema.Metric]]] = (fun: List[Schema.Metric]) => Option(fun)
		given putListSchemaOperationProgress: Conversion[List[Schema.OperationProgress], Option[List[Schema.OperationProgress]]] = (fun: List[Schema.OperationProgress]) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putSchemaClusterUpdate: Conversion[Schema.ClusterUpdate, Option[Schema.ClusterUpdate]] = (fun: Schema.ClusterUpdate) => Option(fun)
		given putSchemaIntraNodeVisibilityConfig: Conversion[Schema.IntraNodeVisibilityConfig, Option[Schema.IntraNodeVisibilityConfig]] = (fun: Schema.IntraNodeVisibilityConfig) => Option(fun)
		given putSchemaILBSubsettingConfig: Conversion[Schema.ILBSubsettingConfig, Option[Schema.ILBSubsettingConfig]] = (fun: Schema.ILBSubsettingConfig) => Option(fun)
		given putSchemaClusterUpdateDesiredDatapathProviderEnum: Conversion[Schema.ClusterUpdate.DesiredDatapathProviderEnum, Option[Schema.ClusterUpdate.DesiredDatapathProviderEnum]] = (fun: Schema.ClusterUpdate.DesiredDatapathProviderEnum) => Option(fun)
		given putSchemaClusterUpdateDesiredPrivateIpv6GoogleAccessEnum: Conversion[Schema.ClusterUpdate.DesiredPrivateIpv6GoogleAccessEnum, Option[Schema.ClusterUpdate.DesiredPrivateIpv6GoogleAccessEnum]] = (fun: Schema.ClusterUpdate.DesiredPrivateIpv6GoogleAccessEnum) => Option(fun)
		given putSchemaClusterUpdateDesiredStackTypeEnum: Conversion[Schema.ClusterUpdate.DesiredStackTypeEnum, Option[Schema.ClusterUpdate.DesiredStackTypeEnum]] = (fun: Schema.ClusterUpdate.DesiredStackTypeEnum) => Option(fun)
		given putSchemaClusterUpdateDesiredInTransitEncryptionConfigEnum: Conversion[Schema.ClusterUpdate.DesiredInTransitEncryptionConfigEnum, Option[Schema.ClusterUpdate.DesiredInTransitEncryptionConfigEnum]] = (fun: Schema.ClusterUpdate.DesiredInTransitEncryptionConfigEnum) => Option(fun)
		given putSchemaDesiredEnterpriseConfig: Conversion[Schema.DesiredEnterpriseConfig, Option[Schema.DesiredEnterpriseConfig]] = (fun: Schema.DesiredEnterpriseConfig) => Option(fun)
		given putSchemaDesiredEnterpriseConfigDesiredTierEnum: Conversion[Schema.DesiredEnterpriseConfig.DesiredTierEnum, Option[Schema.DesiredEnterpriseConfig.DesiredTierEnum]] = (fun: Schema.DesiredEnterpriseConfig.DesiredTierEnum) => Option(fun)
		given putSchemaNodeTaints: Conversion[Schema.NodeTaints, Option[Schema.NodeTaints]] = (fun: Schema.NodeTaints) => Option(fun)
		given putSchemaNodeLabels: Conversion[Schema.NodeLabels, Option[Schema.NodeLabels]] = (fun: Schema.NodeLabels) => Option(fun)
		given putSchemaResourceLabels: Conversion[Schema.ResourceLabels, Option[Schema.ResourceLabels]] = (fun: Schema.ResourceLabels) => Option(fun)
		given putSchemaSetMasterAuthRequestActionEnum: Conversion[Schema.SetMasterAuthRequest.ActionEnum, Option[Schema.SetMasterAuthRequest.ActionEnum]] = (fun: Schema.SetMasterAuthRequest.ActionEnum) => Option(fun)
		given putListSchemaOperation: Conversion[List[Schema.Operation], Option[List[Schema.Operation]]] = (fun: List[Schema.Operation]) => Option(fun)
		given putListSchemaReleaseChannelConfig: Conversion[List[Schema.ReleaseChannelConfig], Option[List[Schema.ReleaseChannelConfig]]] = (fun: List[Schema.ReleaseChannelConfig]) => Option(fun)
		given putSchemaReleaseChannelConfigChannelEnum: Conversion[Schema.ReleaseChannelConfig.ChannelEnum, Option[Schema.ReleaseChannelConfig.ChannelEnum]] = (fun: Schema.ReleaseChannelConfig.ChannelEnum) => Option(fun)
		given putSchemaHttpCacheControlResponseHeader: Conversion[Schema.HttpCacheControlResponseHeader, Option[Schema.HttpCacheControlResponseHeader]] = (fun: Schema.HttpCacheControlResponseHeader) => Option(fun)
		given putListSchemaJwk: Conversion[List[Schema.Jwk], Option[List[Schema.Jwk]]] = (fun: List[Schema.Jwk]) => Option(fun)
		given putSchemaNodePool: Conversion[Schema.NodePool, Option[Schema.NodePool]] = (fun: Schema.NodePool) => Option(fun)
		given putListSchemaUsableSubnetwork: Conversion[List[Schema.UsableSubnetwork], Option[List[Schema.UsableSubnetwork]]] = (fun: List[Schema.UsableSubnetwork]) => Option(fun)
		given putListSchemaUsableSubnetworkSecondaryRange: Conversion[List[Schema.UsableSubnetworkSecondaryRange], Option[List[Schema.UsableSubnetworkSecondaryRange]]] = (fun: List[Schema.UsableSubnetworkSecondaryRange]) => Option(fun)
		given putSchemaUsableSubnetworkSecondaryRangeStatusEnum: Conversion[Schema.UsableSubnetworkSecondaryRange.StatusEnum, Option[Schema.UsableSubnetworkSecondaryRange.StatusEnum]] = (fun: Schema.UsableSubnetworkSecondaryRange.StatusEnum) => Option(fun)
		given putListSchemaAutopilotCompatibilityIssue: Conversion[List[Schema.AutopilotCompatibilityIssue], Option[List[Schema.AutopilotCompatibilityIssue]]] = (fun: List[Schema.AutopilotCompatibilityIssue]) => Option(fun)
		given putSchemaAutopilotCompatibilityIssueIncompatibilityTypeEnum: Conversion[Schema.AutopilotCompatibilityIssue.IncompatibilityTypeEnum, Option[Schema.AutopilotCompatibilityIssue.IncompatibilityTypeEnum]] = (fun: Schema.AutopilotCompatibilityIssue.IncompatibilityTypeEnum) => Option(fun)
		given putSchemaUpgradeEventResourceTypeEnum: Conversion[Schema.UpgradeEvent.ResourceTypeEnum, Option[Schema.UpgradeEvent.ResourceTypeEnum]] = (fun: Schema.UpgradeEvent.ResourceTypeEnum) => Option(fun)
		given putSchemaUpgradeInfoEventResourceTypeEnum: Conversion[Schema.UpgradeInfoEvent.ResourceTypeEnum, Option[Schema.UpgradeInfoEvent.ResourceTypeEnum]] = (fun: Schema.UpgradeInfoEvent.ResourceTypeEnum) => Option(fun)
		given putSchemaUpgradeInfoEventStateEnum: Conversion[Schema.UpgradeInfoEvent.StateEnum, Option[Schema.UpgradeInfoEvent.StateEnum]] = (fun: Schema.UpgradeInfoEvent.StateEnum) => Option(fun)
		given putSchemaUpgradeAvailableEventResourceTypeEnum: Conversion[Schema.UpgradeAvailableEvent.ResourceTypeEnum, Option[Schema.UpgradeAvailableEvent.ResourceTypeEnum]] = (fun: Schema.UpgradeAvailableEvent.ResourceTypeEnum) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
