package com.boresjo.play.api.google.datastore

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaGoogleLongrunningOperation: Conversion[List[Schema.GoogleLongrunningOperation], Option[List[Schema.GoogleLongrunningOperation]]] = (fun: List[Schema.GoogleLongrunningOperation]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putMapStringString: Conversion[Map[String, String], Option[Map[String, String]]] = (fun: Map[String, String]) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1EntityFilter: Conversion[Schema.GoogleDatastoreAdminV1EntityFilter, Option[Schema.GoogleDatastoreAdminV1EntityFilter]] = (fun: Schema.GoogleDatastoreAdminV1EntityFilter) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1IndexAncestorEnum: Conversion[Schema.GoogleDatastoreAdminV1Index.AncestorEnum, Option[Schema.GoogleDatastoreAdminV1Index.AncestorEnum]] = (fun: Schema.GoogleDatastoreAdminV1Index.AncestorEnum) => Option(fun)
		given putListSchemaGoogleDatastoreAdminV1IndexedProperty: Conversion[List[Schema.GoogleDatastoreAdminV1IndexedProperty], Option[List[Schema.GoogleDatastoreAdminV1IndexedProperty]]] = (fun: List[Schema.GoogleDatastoreAdminV1IndexedProperty]) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1IndexStateEnum: Conversion[Schema.GoogleDatastoreAdminV1Index.StateEnum, Option[Schema.GoogleDatastoreAdminV1Index.StateEnum]] = (fun: Schema.GoogleDatastoreAdminV1Index.StateEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1IndexedPropertyDirectionEnum: Conversion[Schema.GoogleDatastoreAdminV1IndexedProperty.DirectionEnum, Option[Schema.GoogleDatastoreAdminV1IndexedProperty.DirectionEnum]] = (fun: Schema.GoogleDatastoreAdminV1IndexedProperty.DirectionEnum) => Option(fun)
		given putListSchemaGoogleDatastoreAdminV1Index: Conversion[List[Schema.GoogleDatastoreAdminV1Index], Option[List[Schema.GoogleDatastoreAdminV1Index]]] = (fun: List[Schema.GoogleDatastoreAdminV1Index]) => Option(fun)
		given putSchemaReadOptions: Conversion[Schema.ReadOptions, Option[Schema.ReadOptions]] = (fun: Schema.ReadOptions) => Option(fun)
		given putListSchemaKey: Conversion[List[Schema.Key], Option[List[Schema.Key]]] = (fun: List[Schema.Key]) => Option(fun)
		given putSchemaPropertyMask: Conversion[Schema.PropertyMask, Option[Schema.PropertyMask]] = (fun: Schema.PropertyMask) => Option(fun)
		given putSchemaReadOptionsReadConsistencyEnum: Conversion[Schema.ReadOptions.ReadConsistencyEnum, Option[Schema.ReadOptions.ReadConsistencyEnum]] = (fun: Schema.ReadOptions.ReadConsistencyEnum) => Option(fun)
		given putSchemaTransactionOptions: Conversion[Schema.TransactionOptions, Option[Schema.TransactionOptions]] = (fun: Schema.TransactionOptions) => Option(fun)
		given putSchemaReadWrite: Conversion[Schema.ReadWrite, Option[Schema.ReadWrite]] = (fun: Schema.ReadWrite) => Option(fun)
		given putSchemaReadOnly: Conversion[Schema.ReadOnly, Option[Schema.ReadOnly]] = (fun: Schema.ReadOnly) => Option(fun)
		given putSchemaPartitionId: Conversion[Schema.PartitionId, Option[Schema.PartitionId]] = (fun: Schema.PartitionId) => Option(fun)
		given putListSchemaPathElement: Conversion[List[Schema.PathElement], Option[List[Schema.PathElement]]] = (fun: List[Schema.PathElement]) => Option(fun)
		given putListSchemaEntityResult: Conversion[List[Schema.EntityResult], Option[List[Schema.EntityResult]]] = (fun: List[Schema.EntityResult]) => Option(fun)
		given putSchemaEntity: Conversion[Schema.Entity, Option[Schema.Entity]] = (fun: Schema.Entity) => Option(fun)
		given putSchemaKey: Conversion[Schema.Key, Option[Schema.Key]] = (fun: Schema.Key) => Option(fun)
		given putMapStringSchemaValue: Conversion[Map[String, Schema.Value], Option[Map[String, Schema.Value]]] = (fun: Map[String, Schema.Value]) => Option(fun)
		given putSchemaValueNullValueEnum: Conversion[Schema.Value.NullValueEnum, Option[Schema.Value.NullValueEnum]] = (fun: Schema.Value.NullValueEnum) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaLatLng: Conversion[Schema.LatLng, Option[Schema.LatLng]] = (fun: Schema.LatLng) => Option(fun)
		given putSchemaArrayValue: Conversion[Schema.ArrayValue, Option[Schema.ArrayValue]] = (fun: Schema.ArrayValue) => Option(fun)
		given putListSchemaValue: Conversion[List[Schema.Value], Option[List[Schema.Value]]] = (fun: List[Schema.Value]) => Option(fun)
		given putSchemaQuery: Conversion[Schema.Query, Option[Schema.Query]] = (fun: Schema.Query) => Option(fun)
		given putSchemaGqlQuery: Conversion[Schema.GqlQuery, Option[Schema.GqlQuery]] = (fun: Schema.GqlQuery) => Option(fun)
		given putSchemaExplainOptions: Conversion[Schema.ExplainOptions, Option[Schema.ExplainOptions]] = (fun: Schema.ExplainOptions) => Option(fun)
		given putListSchemaProjection: Conversion[List[Schema.Projection], Option[List[Schema.Projection]]] = (fun: List[Schema.Projection]) => Option(fun)
		given putListSchemaKindExpression: Conversion[List[Schema.KindExpression], Option[List[Schema.KindExpression]]] = (fun: List[Schema.KindExpression]) => Option(fun)
		given putSchemaFilter: Conversion[Schema.Filter, Option[Schema.Filter]] = (fun: Schema.Filter) => Option(fun)
		given putListSchemaPropertyOrder: Conversion[List[Schema.PropertyOrder], Option[List[Schema.PropertyOrder]]] = (fun: List[Schema.PropertyOrder]) => Option(fun)
		given putListSchemaPropertyReference: Conversion[List[Schema.PropertyReference], Option[List[Schema.PropertyReference]]] = (fun: List[Schema.PropertyReference]) => Option(fun)
		given putSchemaFindNearest: Conversion[Schema.FindNearest, Option[Schema.FindNearest]] = (fun: Schema.FindNearest) => Option(fun)
		given putSchemaPropertyReference: Conversion[Schema.PropertyReference, Option[Schema.PropertyReference]] = (fun: Schema.PropertyReference) => Option(fun)
		given putSchemaCompositeFilter: Conversion[Schema.CompositeFilter, Option[Schema.CompositeFilter]] = (fun: Schema.CompositeFilter) => Option(fun)
		given putSchemaPropertyFilter: Conversion[Schema.PropertyFilter, Option[Schema.PropertyFilter]] = (fun: Schema.PropertyFilter) => Option(fun)
		given putSchemaCompositeFilterOpEnum: Conversion[Schema.CompositeFilter.OpEnum, Option[Schema.CompositeFilter.OpEnum]] = (fun: Schema.CompositeFilter.OpEnum) => Option(fun)
		given putListSchemaFilter: Conversion[List[Schema.Filter], Option[List[Schema.Filter]]] = (fun: List[Schema.Filter]) => Option(fun)
		given putSchemaPropertyFilterOpEnum: Conversion[Schema.PropertyFilter.OpEnum, Option[Schema.PropertyFilter.OpEnum]] = (fun: Schema.PropertyFilter.OpEnum) => Option(fun)
		given putSchemaValue: Conversion[Schema.Value, Option[Schema.Value]] = (fun: Schema.Value) => Option(fun)
		given putSchemaPropertyOrderDirectionEnum: Conversion[Schema.PropertyOrder.DirectionEnum, Option[Schema.PropertyOrder.DirectionEnum]] = (fun: Schema.PropertyOrder.DirectionEnum) => Option(fun)
		given putSchemaFindNearestDistanceMeasureEnum: Conversion[Schema.FindNearest.DistanceMeasureEnum, Option[Schema.FindNearest.DistanceMeasureEnum]] = (fun: Schema.FindNearest.DistanceMeasureEnum) => Option(fun)
		given putMapStringSchemaGqlQueryParameter: Conversion[Map[String, Schema.GqlQueryParameter], Option[Map[String, Schema.GqlQueryParameter]]] = (fun: Map[String, Schema.GqlQueryParameter]) => Option(fun)
		given putListSchemaGqlQueryParameter: Conversion[List[Schema.GqlQueryParameter], Option[List[Schema.GqlQueryParameter]]] = (fun: List[Schema.GqlQueryParameter]) => Option(fun)
		given putSchemaQueryResultBatch: Conversion[Schema.QueryResultBatch, Option[Schema.QueryResultBatch]] = (fun: Schema.QueryResultBatch) => Option(fun)
		given putSchemaExplainMetrics: Conversion[Schema.ExplainMetrics, Option[Schema.ExplainMetrics]] = (fun: Schema.ExplainMetrics) => Option(fun)
		given putSchemaQueryResultBatchEntityResultTypeEnum: Conversion[Schema.QueryResultBatch.EntityResultTypeEnum, Option[Schema.QueryResultBatch.EntityResultTypeEnum]] = (fun: Schema.QueryResultBatch.EntityResultTypeEnum) => Option(fun)
		given putSchemaQueryResultBatchMoreResultsEnum: Conversion[Schema.QueryResultBatch.MoreResultsEnum, Option[Schema.QueryResultBatch.MoreResultsEnum]] = (fun: Schema.QueryResultBatch.MoreResultsEnum) => Option(fun)
		given putSchemaPlanSummary: Conversion[Schema.PlanSummary, Option[Schema.PlanSummary]] = (fun: Schema.PlanSummary) => Option(fun)
		given putSchemaExecutionStats: Conversion[Schema.ExecutionStats, Option[Schema.ExecutionStats]] = (fun: Schema.ExecutionStats) => Option(fun)
		given putSchemaAggregationQuery: Conversion[Schema.AggregationQuery, Option[Schema.AggregationQuery]] = (fun: Schema.AggregationQuery) => Option(fun)
		given putListSchemaAggregation: Conversion[List[Schema.Aggregation], Option[List[Schema.Aggregation]]] = (fun: List[Schema.Aggregation]) => Option(fun)
		given putSchemaCount: Conversion[Schema.Count, Option[Schema.Count]] = (fun: Schema.Count) => Option(fun)
		given putSchemaSum: Conversion[Schema.Sum, Option[Schema.Sum]] = (fun: Schema.Sum) => Option(fun)
		given putSchemaAvg: Conversion[Schema.Avg, Option[Schema.Avg]] = (fun: Schema.Avg) => Option(fun)
		given putSchemaAggregationResultBatch: Conversion[Schema.AggregationResultBatch, Option[Schema.AggregationResultBatch]] = (fun: Schema.AggregationResultBatch) => Option(fun)
		given putListSchemaAggregationResult: Conversion[List[Schema.AggregationResult], Option[List[Schema.AggregationResult]]] = (fun: List[Schema.AggregationResult]) => Option(fun)
		given putSchemaAggregationResultBatchMoreResultsEnum: Conversion[Schema.AggregationResultBatch.MoreResultsEnum, Option[Schema.AggregationResultBatch.MoreResultsEnum]] = (fun: Schema.AggregationResultBatch.MoreResultsEnum) => Option(fun)
		given putSchemaCommitRequestModeEnum: Conversion[Schema.CommitRequest.ModeEnum, Option[Schema.CommitRequest.ModeEnum]] = (fun: Schema.CommitRequest.ModeEnum) => Option(fun)
		given putListSchemaMutation: Conversion[List[Schema.Mutation], Option[List[Schema.Mutation]]] = (fun: List[Schema.Mutation]) => Option(fun)
		given putSchemaMutationConflictResolutionStrategyEnum: Conversion[Schema.Mutation.ConflictResolutionStrategyEnum, Option[Schema.Mutation.ConflictResolutionStrategyEnum]] = (fun: Schema.Mutation.ConflictResolutionStrategyEnum) => Option(fun)
		given putListSchemaPropertyTransform: Conversion[List[Schema.PropertyTransform], Option[List[Schema.PropertyTransform]]] = (fun: List[Schema.PropertyTransform]) => Option(fun)
		given putSchemaPropertyTransformSetToServerValueEnum: Conversion[Schema.PropertyTransform.SetToServerValueEnum, Option[Schema.PropertyTransform.SetToServerValueEnum]] = (fun: Schema.PropertyTransform.SetToServerValueEnum) => Option(fun)
		given putListSchemaMutationResult: Conversion[List[Schema.MutationResult], Option[List[Schema.MutationResult]]] = (fun: List[Schema.MutationResult]) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1beta1CommonMetadata: Conversion[Schema.GoogleDatastoreAdminV1beta1CommonMetadata, Option[Schema.GoogleDatastoreAdminV1beta1CommonMetadata]] = (fun: Schema.GoogleDatastoreAdminV1beta1CommonMetadata) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1beta1Progress: Conversion[Schema.GoogleDatastoreAdminV1beta1Progress, Option[Schema.GoogleDatastoreAdminV1beta1Progress]] = (fun: Schema.GoogleDatastoreAdminV1beta1Progress) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1beta1EntityFilter: Conversion[Schema.GoogleDatastoreAdminV1beta1EntityFilter, Option[Schema.GoogleDatastoreAdminV1beta1EntityFilter]] = (fun: Schema.GoogleDatastoreAdminV1beta1EntityFilter) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1beta1CommonMetadataOperationTypeEnum: Conversion[Schema.GoogleDatastoreAdminV1beta1CommonMetadata.OperationTypeEnum, Option[Schema.GoogleDatastoreAdminV1beta1CommonMetadata.OperationTypeEnum]] = (fun: Schema.GoogleDatastoreAdminV1beta1CommonMetadata.OperationTypeEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1beta1CommonMetadataStateEnum: Conversion[Schema.GoogleDatastoreAdminV1beta1CommonMetadata.StateEnum, Option[Schema.GoogleDatastoreAdminV1beta1CommonMetadata.StateEnum]] = (fun: Schema.GoogleDatastoreAdminV1beta1CommonMetadata.StateEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1CommonMetadata: Conversion[Schema.GoogleDatastoreAdminV1CommonMetadata, Option[Schema.GoogleDatastoreAdminV1CommonMetadata]] = (fun: Schema.GoogleDatastoreAdminV1CommonMetadata) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1Progress: Conversion[Schema.GoogleDatastoreAdminV1Progress, Option[Schema.GoogleDatastoreAdminV1Progress]] = (fun: Schema.GoogleDatastoreAdminV1Progress) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1CommonMetadataOperationTypeEnum: Conversion[Schema.GoogleDatastoreAdminV1CommonMetadata.OperationTypeEnum, Option[Schema.GoogleDatastoreAdminV1CommonMetadata.OperationTypeEnum]] = (fun: Schema.GoogleDatastoreAdminV1CommonMetadata.OperationTypeEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1CommonMetadataStateEnum: Conversion[Schema.GoogleDatastoreAdminV1CommonMetadata.StateEnum, Option[Schema.GoogleDatastoreAdminV1CommonMetadata.StateEnum]] = (fun: Schema.GoogleDatastoreAdminV1CommonMetadata.StateEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadataMigrationStateEnum: Conversion[Schema.GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata.MigrationStateEnum, Option[Schema.GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata.MigrationStateEnum]] = (fun: Schema.GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata.MigrationStateEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadataMigrationStepEnum: Conversion[Schema.GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata.MigrationStepEnum, Option[Schema.GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata.MigrationStepEnum]] = (fun: Schema.GoogleDatastoreAdminV1DatastoreFirestoreMigrationMetadata.MigrationStepEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1MigrationProgressEventStepEnum: Conversion[Schema.GoogleDatastoreAdminV1MigrationProgressEvent.StepEnum, Option[Schema.GoogleDatastoreAdminV1MigrationProgressEvent.StepEnum]] = (fun: Schema.GoogleDatastoreAdminV1MigrationProgressEvent.StepEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1PrepareStepDetails: Conversion[Schema.GoogleDatastoreAdminV1PrepareStepDetails, Option[Schema.GoogleDatastoreAdminV1PrepareStepDetails]] = (fun: Schema.GoogleDatastoreAdminV1PrepareStepDetails) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1RedirectWritesStepDetails: Conversion[Schema.GoogleDatastoreAdminV1RedirectWritesStepDetails, Option[Schema.GoogleDatastoreAdminV1RedirectWritesStepDetails]] = (fun: Schema.GoogleDatastoreAdminV1RedirectWritesStepDetails) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1PrepareStepDetailsConcurrencyModeEnum: Conversion[Schema.GoogleDatastoreAdminV1PrepareStepDetails.ConcurrencyModeEnum, Option[Schema.GoogleDatastoreAdminV1PrepareStepDetails.ConcurrencyModeEnum]] = (fun: Schema.GoogleDatastoreAdminV1PrepareStepDetails.ConcurrencyModeEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1RedirectWritesStepDetailsConcurrencyModeEnum: Conversion[Schema.GoogleDatastoreAdminV1RedirectWritesStepDetails.ConcurrencyModeEnum, Option[Schema.GoogleDatastoreAdminV1RedirectWritesStepDetails.ConcurrencyModeEnum]] = (fun: Schema.GoogleDatastoreAdminV1RedirectWritesStepDetails.ConcurrencyModeEnum) => Option(fun)
		given putSchemaGoogleDatastoreAdminV1MigrationStateEventStateEnum: Conversion[Schema.GoogleDatastoreAdminV1MigrationStateEvent.StateEnum, Option[Schema.GoogleDatastoreAdminV1MigrationStateEvent.StateEnum]] = (fun: Schema.GoogleDatastoreAdminV1MigrationStateEvent.StateEnum) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
