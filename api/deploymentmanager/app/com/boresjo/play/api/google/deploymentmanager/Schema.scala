package com.boresjo.play.api.google.deploymentmanager

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Schema {
	case class Deployment(
		id: Option[String] = None,
	  /** Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]&#42;[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. */
		name: Option[String] = None,
	  /** An optional user-provided description of the deployment. */
		description: Option[String] = None,
	  /** Output only. The Operation that most recently ran, or is currently running, on this deployment. */
		operation: Option[Schema.Operation] = None,
	  /** Provides a fingerprint to use in requests to modify a deployment, such as `update()`, `stop()`, and `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided with `update()`, `stop()`, and `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a `get()` request to a deployment. */
		fingerprint: Option[String] = None,
	  /** Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent. */
		manifest: Option[String] = None,
	  /** Output only. If Deployment Manager is currently updating or previewing an update to this deployment, the updated configuration appears here. */
		update: Option[Schema.DeploymentUpdate] = None,
	  /** Output only. Creation timestamp in RFC3339 text format. */
		insertTime: Option[String] = None,
	  /** Output only. Update timestamp in RFC3339 text format. */
		updateTime: Option[String] = None,
	  /** [Input Only] The parameters that define your deployment, including the deployment configuration and relevant templates. */
		target: Option[Schema.TargetConfiguration] = None,
	  /** Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]&#42;[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]&#42;[a-z0-9])?)?`. */
		labels: Option[List[Schema.DeploymentLabelEntry]] = None,
	  /** Output only. Server defined URL for the resource. */
		selfLink: Option[String] = None
	)
	
	object Operation {
		enum StatusEnum extends Enum[StatusEnum] { case PENDING, RUNNING, DONE }
		object ErrorItem {
			object ErrorsItem {
				case class ErrorDetailsItem(
					errorInfo: Option[Schema.ErrorInfo] = None,
					quotaInfo: Option[Schema.QuotaExceededInfo] = None,
					help: Option[Schema.Help] = None,
					localizedMessage: Option[Schema.LocalizedMessage] = None
				)
			}
			case class ErrorsItem(
			  /** [Output Only] The error type identifier for this error. */
				code: Option[String] = None,
			  /** [Output Only] Indicates the field in the request that caused the error. This property is optional. */
				location: Option[String] = None,
			  /** [Output Only] An optional, human-readable error message. */
				message: Option[String] = None,
			  /** [Output Only] Optional error details WARNING: DO NOT MAKE VISIBLE This is for internal use-only (like componentization) (thus the visibility "none") and in case of public exposure it is strongly recommended to follow pattern of: https://aip.dev/193 and expose as details field. */
				arguments: Option[List[String]] = None,
				debugInfo: Option[Schema.DebugInfo] = None,
			  /** [Output Only] An optional list of messages that contain the error details. There is a set of defined message types to use for providing details.The syntax depends on the error code. For example, QuotaExceededInfo will have details when the error code is QUOTA_EXCEEDED. */
				errorDetails: Option[List[Schema.Operation.ErrorItem.ErrorsItem.ErrorDetailsItem]] = None
			)
		}
		case class ErrorItem(
		  /** [Output Only] The array of errors encountered while processing this operation. */
			errors: Option[List[Schema.Operation.ErrorItem.ErrorsItem]] = None
		)
		
		object WarningsItem {
			enum CodeEnum extends Enum[CodeEnum] { case DEPRECATED_RESOURCE_USED, NO_RESULTS_ON_PAGE, UNREACHABLE, NEXT_HOP_ADDRESS_NOT_ASSIGNED, NEXT_HOP_INSTANCE_NOT_FOUND, NEXT_HOP_INSTANCE_NOT_ON_NETWORK, NEXT_HOP_CANNOT_IP_FORWARD, NEXT_HOP_NOT_RUNNING, INJECTED_KERNELS_DEPRECATED, REQUIRED_TOS_AGREEMENT, DISK_SIZE_LARGER_THAN_IMAGE_SIZE, RESOURCE_NOT_DELETED, SINGLE_INSTANCE_PROPERTY_TEMPLATE, NOT_CRITICAL_ERROR, CLEANUP_FAILED, FIELD_VALUE_OVERRIDEN, RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING, NETWORK_ENDPOINT_NOT_DETACHED, PAGE_MISSING_RESULTS, SSL_POLICY_ENABLED_FEATURES_NOT_FETCHED, RESOURCE_NOT_FOUND_WARNING, MISSING_TYPE_DEPENDENCY, EXTERNAL_API_WARNING, SCHEMA_VALIDATION_IGNORED, UNDECLARED_PROPERTIES, EXPERIMENTAL_TYPE_USED, DEPRECATED_TYPE_USED, PARTIAL_SUCCESS, LARGE_DEPLOYMENT_WARNING, NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE, INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB, LIST_OVERHEAD_QUOTA_EXCEED, QUOTA_INFO_UNAVAILABLE, RESOURCE_USES_GLOBAL_DNS, RESERVED_ENTRY_134, RESERVED_ENTRY_135, RESERVED_ENTRY_136, RESERVED_ENTRY_139, RESERVED_ENTRY_141 }
			case class DataItem(
			  /** [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding). */
				key: Option[String] = None,
			  /** [Output Only] A warning data value corresponding to the key. */
				value: Option[String] = None
			)
		}
		case class WarningsItem(
		  /** [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response. */
			code: Option[Schema.Operation.WarningsItem.CodeEnum] = None,
		  /** [Output Only] A human-readable description of the warning code. */
			message: Option[String] = None,
		  /** [Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }  */
			data: Option[List[Schema.Operation.WarningsItem.DataItem]] = None
		)
	}
	case class Operation(
	  /** [Output Only] Type of the resource. Always `compute#operation` for Operation resources. */
		kind: Option[String] = Some("""compute#operation"""),
	  /** [Output Only] The unique identifier for the operation. This identifier is defined by the server. */
		id: Option[String] = None,
	  /** [Deprecated] This field is deprecated. */
		creationTimestamp: Option[String] = None,
	  /** [Output Only] Name of the operation. */
		name: Option[String] = None,
	  /** [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations. */
		zone: Option[String] = None,
	  /** [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise. */
		clientOperationId: Option[String] = None,
	  /** [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on. */
		operationType: Option[String] = None,
	  /** [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the disk that the snapshot was created from. */
		targetLink: Option[String] = None,
	  /** [Output Only] The unique target ID, which identifies a specific incarnation of the target resource. */
		targetId: Option[String] = None,
	  /** [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`. */
		status: Option[Schema.Operation.StatusEnum] = None,
	  /** [Output Only] An optional textual description of the current status of the operation. */
		statusMessage: Option[String] = None,
	  /** [Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`. */
		user: Option[String] = None,
	  /** [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses. */
		progress: Option[Int] = None,
	  /** [Output Only] The time that this operation was requested. This value is in RFC3339 text format. */
		insertTime: Option[String] = None,
	  /** [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format. */
		startTime: Option[String] = None,
	  /** [Output Only] The time that this operation was completed. This value is in RFC3339 text format. */
		endTime: Option[String] = None,
	  /** [Output Only] If errors are generated during processing of the operation, this field will be populated. */
		error: Option[Schema.Operation.ErrorItem] = None,
	  /** [Output Only] If warning messages are generated during processing of the operation, this field will be populated. */
		warnings: Option[List[Schema.Operation.WarningsItem]] = None,
	  /** [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found. */
		httpErrorStatusCode: Option[Int] = None,
	  /** [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`. */
		httpErrorMessage: Option[String] = None,
	  /** [Output Only] Server-defined URL for the resource. */
		selfLink: Option[String] = None,
	  /** [Output Only] Server-defined URL for this resource with the resource id. */
		selfLinkWithId: Option[String] = None,
	  /** [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations. */
		region: Option[String] = None,
	  /** [Output Only] A textual description of the operation, which is set when the operation is created. */
		description: Option[String] = None,
	  /** [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request. */
		operationGroupId: Option[String] = None,
	  /** [Output Only] If the operation is for projects.setCommonInstanceMetadata, this field will contain information on all underlying zonal actions and their state. */
		setCommonInstanceMetadataOperationMetadata: Option[Schema.SetCommonInstanceMetadataOperationMetadata] = None,
		instancesBulkInsertOperationMetadata: Option[Schema.InstancesBulkInsertOperationMetadata] = None
	)
	
	case class DebugInfo(
	  /** The stack trace entries indicating where the error occurred. */
		stackEntries: Option[List[String]] = None,
	  /** Additional debugging information provided by the server. */
		detail: Option[String] = None
	)
	
	case class ErrorInfo(
	  /** The reason of the error. This is a constant value that identifies the proximate cause of the error. Error reasons are unique within a particular domain of errors. This should be at most 63 characters and match a regular expression of `A-Z+[A-Z0-9]`, which represents UPPER_SNAKE_CASE. */
		reason: Option[String] = None,
	  /** The logical grouping to which the "reason" belongs. The error domain is typically the registered service name of the tool or product that generates the error. Example: "pubsub.googleapis.com". If the error is generated by some common infrastructure, the error domain must be a globally unique value that identifies the infrastructure. For Google API infrastructure, the error domain is "googleapis.com". */
		domain: Option[String] = None,
	  /** Additional structured details about this error. Keys must match /a-z+/ but should ideally be lowerCamelCase. Also they must be limited to 64 characters in length. When identifying the current value of an exceeded limit, the units should be contained in the key, not the value. For example, rather than {"instanceLimit": "100/request"}, should be returned as, {"instanceLimitPerRequest": "100"}, if the client exceeds the number of instances that can be created in a single (batch) request. */
		metadatas: Option[Map[String, String]] = None
	)
	
	object QuotaExceededInfo {
		enum RolloutStatusEnum extends Enum[RolloutStatusEnum] { case ROLLOUT_STATUS_UNSPECIFIED, IN_PROGRESS }
	}
	case class QuotaExceededInfo(
	  /** The Compute Engine quota metric name. */
		metricName: Option[String] = None,
	  /** The name of the quota limit. */
		limitName: Option[String] = None,
	  /** The map holding related quota dimensions. */
		dimensions: Option[Map[String, String]] = None,
	  /** Current effective quota limit. The limit's unit depends on the quota type or metric. */
		limit: Option[BigDecimal] = None,
	  /** Future quota limit being rolled out. The limit's unit depends on the quota type or metric. */
		futureLimit: Option[BigDecimal] = None,
	  /** Rollout status of the future quota limit. */
		rolloutStatus: Option[Schema.QuotaExceededInfo.RolloutStatusEnum] = None
	)
	
	case class Help(
	  /** URL(s) pointing to additional information on handling the current error. */
		links: Option[List[Schema.HelpLink]] = None
	)
	
	case class HelpLink(
	  /** Describes what the link offers. */
		description: Option[String] = None,
	  /** The URL of the link. */
		url: Option[String] = None
	)
	
	case class LocalizedMessage(
	  /** The locale used following the specification defined at https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: "en-US", "fr-CH", "es-MX" */
		locale: Option[String] = None,
	  /** The localized error message in the above locale. */
		message: Option[String] = None
	)
	
	case class SetCommonInstanceMetadataOperationMetadata(
	  /** [Output Only] The client operation id. */
		clientOperationId: Option[String] = None,
	  /** [Output Only] Status information per location (location name is key). Example key: zones/us-central1-a */
		perLocationOperations: Option[Map[String, Schema.SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo]] = None
	)
	
	object SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo {
		enum StateEnum extends Enum[StateEnum] { case UNSPECIFIED, PROPAGATING, PROPAGATED, ABANDONED, FAILED, DONE }
	}
	case class SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo(
	  /** [Output Only] Status of the action, which can be one of the following: `PROPAGATING`, `PROPAGATED`, `ABANDONED`, `FAILED`, or `DONE`. */
		state: Option[Schema.SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo.StateEnum] = None,
	  /** [Output Only] If state is `ABANDONED` or `FAILED`, this field is populated. */
		error: Option[Schema.Status] = None
	)
	
	case class Status(
	  /** The status code, which should be an enum value of google.rpc.Code. */
		code: Option[Int] = None,
	  /** A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client. */
		message: Option[String] = None,
	  /** A list of messages that carry the error details. There is a common set of message types for APIs to use. */
		details: Option[List[Map[String, JsValue]]] = None
	)
	
	case class InstancesBulkInsertOperationMetadata(
	  /** Status information per location (location name is key). Example key: zones/us-central1-a */
		perLocationStatus: Option[Map[String, Schema.BulkInsertOperationStatus]] = None
	)
	
	object BulkInsertOperationStatus {
		enum StatusEnum extends Enum[StatusEnum] { case STATUS_UNSPECIFIED, CREATING, ROLLING_BACK, DONE }
	}
	case class BulkInsertOperationStatus(
	  /** [Output Only] Creation status of BulkInsert operation - information if the flow is rolling forward or rolling back. */
		status: Option[Schema.BulkInsertOperationStatus.StatusEnum] = None,
	  /** [Output Only] Count of VMs originally planned to be created. */
		targetVmCount: Option[Int] = None,
	  /** [Output Only] Count of VMs successfully created so far. */
		createdVmCount: Option[Int] = None,
	  /** [Output Only] Count of VMs that started creating but encountered an error. */
		failedToCreateVmCount: Option[Int] = None,
	  /** [Output Only] Count of VMs that got deleted during rollback. */
		deletedVmCount: Option[Int] = None
	)
	
	case class DeploymentUpdate(
	  /** Output only. URL of the manifest representing the update configuration of this deployment. */
		manifest: Option[String] = None,
	  /** Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]&#42;[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]&#42;[a-z0-9])?)?`. */
		labels: Option[List[Schema.DeploymentUpdateLabelEntry]] = None,
	  /** Output only. An optional user-provided description of the deployment after the current update has been applied. */
		description: Option[String] = None
	)
	
	case class DeploymentUpdateLabelEntry(
	  /** Key of the label */
		key: Option[String] = None,
	  /** Value of the label */
		value: Option[String] = None
	)
	
	case class TargetConfiguration(
	  /** The configuration to use for this deployment. */
		config: Option[Schema.ConfigFile] = None,
	  /** Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template. */
		imports: Option[List[Schema.ImportFile]] = None
	)
	
	case class ConfigFile(
	  /** The contents of the file. */
		content: Option[String] = None
	)
	
	case class ImportFile(
	  /** The name of the file. */
		name: Option[String] = None,
	  /** The contents of the file. */
		content: Option[String] = None
	)
	
	case class DeploymentLabelEntry(
	  /** Key of the label */
		key: Option[String] = None,
	  /** Value of the label */
		value: Option[String] = None
	)
	
	case class DeploymentsListResponse(
	  /** Output only. The deployments contained in this response. */
		deployments: Option[List[Schema.Deployment]] = None,
	  /** Output only. A token used to continue a truncated list request. */
		nextPageToken: Option[String] = None
	)
	
	case class DeploymentsCancelPreviewRequest(
	  /** Specifies a fingerprint for `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided in `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to cancel a preview, this would prevent one of the requests). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a `get()` request on the deployment. */
		fingerprint: Option[String] = None
	)
	
	case class DeploymentsStopRequest(
	  /** Specifies a fingerprint for `stop()` requests. A fingerprint is a randomly generated value that must be provided in `stop()` requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to stop an ongoing update request, this would prevent a collision). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a `get()` request on the deployment. */
		fingerprint: Option[String] = None
	)
	
	case class Policy(
	  /** Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: &#42; Getting a policy that includes a conditional role binding &#42; Adding a conditional role binding to a policy &#42; Changing a conditional role binding in a policy &#42; Removing any role binding, with or without a condition, from a policy that includes conditions &#42;&#42;Important:&#42;&#42; If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). */
		version: Option[Int] = None,
	  /** Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`. */
		bindings: Option[List[Schema.Binding]] = None,
	  /** Specifies cloud audit logging configuration for this policy. */
		auditConfigs: Option[List[Schema.AuditConfig]] = None,
	  /** `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. &#42;&#42;Important:&#42;&#42; If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. */
		etag: Option[String] = None
	)
	
	case class Binding(
	  /** Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles). */
		role: Option[String] = None,
	  /** Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: &#42; `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. &#42; `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. &#42; `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . &#42; `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. &#42; `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. &#42; `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. &#42; `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. &#42; `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. &#42; `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. &#42; `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. &#42; `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/&#42;`: All identities in a workforce identity pool. &#42; `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. &#42; `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. &#42; `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. &#42; `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/&#42;`: All identities in a workload identity pool. &#42; `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. &#42; `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. &#42; `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. &#42; `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`. */
		members: Option[List[String]] = None,
	  /** The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). */
		condition: Option[Schema.Expr] = None
	)
	
	case class Expr(
	  /** Textual representation of an expression in Common Expression Language syntax. */
		expression: Option[String] = None,
	  /** Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression. */
		title: Option[String] = None,
	  /** Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI. */
		description: Option[String] = None,
	  /** Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file. */
		location: Option[String] = None
	)
	
	case class AuditConfig(
	  /** Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services. */
		service: Option[String] = None,
	  /** The configuration for logging of each type of permission. */
		auditLogConfigs: Option[List[Schema.AuditLogConfig]] = None
	)
	
	object AuditLogConfig {
		enum LogTypeEnum extends Enum[LogTypeEnum] { case LOG_TYPE_UNSPECIFIED, ADMIN_READ, DATA_WRITE, DATA_READ }
	}
	case class AuditLogConfig(
	  /** The log type that this config enables. */
		logType: Option[Schema.AuditLogConfig.LogTypeEnum] = None,
	  /** Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members. */
		exemptedMembers: Option[List[String]] = None
	)
	
	case class GlobalSetPolicyRequest(
	  /** REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them. */
		policy: Option[Schema.Policy] = None,
		updateMask: Option[String] = None,
	  /** Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify bindings. */
		bindings: Option[List[Schema.Binding]] = None,
	  /** Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag. */
		etag: Option[String] = None
	)
	
	case class TestPermissionsRequest(
	  /** The set of permissions to check for the 'resource'. Permissions with wildcards (such as '&#42;' or 'storage.&#42;') are not allowed. */
		permissions: Option[List[String]] = None
	)
	
	case class TestPermissionsResponse(
	  /** A subset of `TestPermissionsRequest.permissions` that the caller is allowed. */
		permissions: Option[List[String]] = None
	)
	
	case class Manifest(
	  /** Output only. Self link for the manifest. */
		selfLink: Option[String] = None,
		id: Option[String] = None,
	  /** Output only. The name of the manifest. */
		name: Option[String] = None,
	  /** Output only. The YAML configuration for this manifest. */
		config: Option[Schema.ConfigFile] = None,
	  /** Output only. The imported files for this manifest. */
		imports: Option[List[Schema.ImportFile]] = None,
	  /** Output only. The fully-expanded configuration file, including any templates and references. */
		expandedConfig: Option[String] = None,
	  /** Output only. Creation timestamp in RFC3339 text format. */
		insertTime: Option[String] = None,
	  /** Output only. The YAML layout for this manifest. */
		layout: Option[String] = None,
	  /** Output only. The computed size of the fully expanded manifest. */
		manifestSizeBytes: Option[String] = None,
	  /** Output only. The size limit for expanded manifests in the project. */
		manifestSizeLimitBytes: Option[String] = None
	)
	
	case class ManifestsListResponse(
	  /** Output only. Manifests contained in this list response. */
		manifests: Option[List[Schema.Manifest]] = None,
	  /** Output only. A token used to continue a truncated list request. */
		nextPageToken: Option[String] = None
	)
	
	case class OperationsListResponse(
	  /** Output only. Operations contained in this list response. */
		operations: Option[List[Schema.Operation]] = None,
	  /** Output only. A token used to continue a truncated list request. */
		nextPageToken: Option[String] = None
	)
	
	object Resource {
		object WarningsItem {
			enum CodeEnum extends Enum[CodeEnum] { case DEPRECATED_RESOURCE_USED, NO_RESULTS_ON_PAGE, UNREACHABLE, NEXT_HOP_ADDRESS_NOT_ASSIGNED, NEXT_HOP_INSTANCE_NOT_FOUND, NEXT_HOP_INSTANCE_NOT_ON_NETWORK, NEXT_HOP_CANNOT_IP_FORWARD, NEXT_HOP_NOT_RUNNING, INJECTED_KERNELS_DEPRECATED, REQUIRED_TOS_AGREEMENT, DISK_SIZE_LARGER_THAN_IMAGE_SIZE, RESOURCE_NOT_DELETED, SINGLE_INSTANCE_PROPERTY_TEMPLATE, NOT_CRITICAL_ERROR, CLEANUP_FAILED, FIELD_VALUE_OVERRIDEN, RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING, NETWORK_ENDPOINT_NOT_DETACHED, PAGE_MISSING_RESULTS, SSL_POLICY_ENABLED_FEATURES_NOT_FETCHED, RESOURCE_NOT_FOUND_WARNING, MISSING_TYPE_DEPENDENCY, EXTERNAL_API_WARNING, SCHEMA_VALIDATION_IGNORED, UNDECLARED_PROPERTIES, EXPERIMENTAL_TYPE_USED, DEPRECATED_TYPE_USED, PARTIAL_SUCCESS, LARGE_DEPLOYMENT_WARNING, NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE, INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB, LIST_OVERHEAD_QUOTA_EXCEED, QUOTA_INFO_UNAVAILABLE, RESOURCE_USES_GLOBAL_DNS, RESERVED_ENTRY_134, RESERVED_ENTRY_135, RESERVED_ENTRY_136, RESERVED_ENTRY_139, RESERVED_ENTRY_141 }
			case class DataItem(
			  /** [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding). */
				key: Option[String] = None,
			  /** [Output Only] A warning data value corresponding to the key. */
				value: Option[String] = None
			)
		}
		case class WarningsItem(
		  /** [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response. */
			code: Option[Schema.Resource.WarningsItem.CodeEnum] = None,
		  /** [Output Only] A human-readable description of the warning code. */
			message: Option[String] = None,
		  /** [Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }  */
			data: Option[List[Schema.Resource.WarningsItem.DataItem]] = None
		)
	}
	case class Resource(
		id: Option[String] = None,
	  /** Output only. The name of the resource as it appears in the YAML config. */
		name: Option[String] = None,
	  /** Output only. The type of the resource, for example `compute.v1.instance`, or `cloudfunctions.v1beta1.function`. */
		`type`: Option[String] = None,
	  /** Output only. URL of the manifest representing the current configuration of this resource. */
		manifest: Option[String] = None,
	  /** Output only. The URL of the actual resource. */
		url: Option[String] = None,
	  /** Output only. The current properties of the resource before any references have been filled in. Returned as serialized YAML. */
		properties: Option[String] = None,
	  /** Output only. The evaluated properties of the resource with references expanded. Returned as serialized YAML. */
		finalProperties: Option[String] = None,
	  /** The Access Control Policy set on this resource. */
		accessControl: Option[Schema.ResourceAccessControl] = None,
	  /** Output only. If Deployment Manager is currently updating or previewing an update to this resource, the updated configuration appears here. */
		update: Option[Schema.ResourceUpdate] = None,
	  /** Output only. Creation timestamp in RFC3339 text format. */
		insertTime: Option[String] = None,
	  /** Output only. Update timestamp in RFC3339 text format. */
		updateTime: Option[String] = None,
	  /** Output only. If warning messages are generated during processing of this resource, this field will be populated. */
		warnings: Option[List[Schema.Resource.WarningsItem]] = None
	)
	
	case class ResourceAccessControl(
	  /** The GCP IAM Policy to set on the resource. */
		gcpIamPolicy: Option[String] = None
	)
	
	object ResourceUpdate {
		object ErrorItem {
			object ErrorsItem {
				case class ErrorDetailsItem(
					errorInfo: Option[Schema.ErrorInfo] = None,
					quotaInfo: Option[Schema.QuotaExceededInfo] = None,
					help: Option[Schema.Help] = None,
					localizedMessage: Option[Schema.LocalizedMessage] = None
				)
			}
			case class ErrorsItem(
			  /** [Output Only] The error type identifier for this error. */
				code: Option[String] = None,
			  /** [Output Only] Indicates the field in the request that caused the error. This property is optional. */
				location: Option[String] = None,
			  /** [Output Only] An optional, human-readable error message. */
				message: Option[String] = None,
			  /** [Output Only] Optional error details WARNING: DO NOT MAKE VISIBLE This is for internal use-only (like componentization) (thus the visibility "none") and in case of public exposure it is strongly recommended to follow pattern of: https://aip.dev/193 and expose as details field. */
				arguments: Option[List[String]] = None,
				debugInfo: Option[Schema.DebugInfo] = None,
			  /** [Output Only] An optional list of messages that contain the error details. There is a set of defined message types to use for providing details.The syntax depends on the error code. For example, QuotaExceededInfo will have details when the error code is QUOTA_EXCEEDED. */
				errorDetails: Option[List[Schema.ResourceUpdate.ErrorItem.ErrorsItem.ErrorDetailsItem]] = None
			)
		}
		case class ErrorItem(
		  /** [Output Only] The array of errors encountered while processing this operation. */
			errors: Option[List[Schema.ResourceUpdate.ErrorItem.ErrorsItem]] = None
		)
		
		object WarningsItem {
			enum CodeEnum extends Enum[CodeEnum] { case DEPRECATED_RESOURCE_USED, NO_RESULTS_ON_PAGE, UNREACHABLE, NEXT_HOP_ADDRESS_NOT_ASSIGNED, NEXT_HOP_INSTANCE_NOT_FOUND, NEXT_HOP_INSTANCE_NOT_ON_NETWORK, NEXT_HOP_CANNOT_IP_FORWARD, NEXT_HOP_NOT_RUNNING, INJECTED_KERNELS_DEPRECATED, REQUIRED_TOS_AGREEMENT, DISK_SIZE_LARGER_THAN_IMAGE_SIZE, RESOURCE_NOT_DELETED, SINGLE_INSTANCE_PROPERTY_TEMPLATE, NOT_CRITICAL_ERROR, CLEANUP_FAILED, FIELD_VALUE_OVERRIDEN, RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING, NETWORK_ENDPOINT_NOT_DETACHED, PAGE_MISSING_RESULTS, SSL_POLICY_ENABLED_FEATURES_NOT_FETCHED, RESOURCE_NOT_FOUND_WARNING, MISSING_TYPE_DEPENDENCY, EXTERNAL_API_WARNING, SCHEMA_VALIDATION_IGNORED, UNDECLARED_PROPERTIES, EXPERIMENTAL_TYPE_USED, DEPRECATED_TYPE_USED, PARTIAL_SUCCESS, LARGE_DEPLOYMENT_WARNING, NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE, INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB, LIST_OVERHEAD_QUOTA_EXCEED, QUOTA_INFO_UNAVAILABLE, RESOURCE_USES_GLOBAL_DNS, RESERVED_ENTRY_134, RESERVED_ENTRY_135, RESERVED_ENTRY_136, RESERVED_ENTRY_139, RESERVED_ENTRY_141 }
			case class DataItem(
			  /** [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding). */
				key: Option[String] = None,
			  /** [Output Only] A warning data value corresponding to the key. */
				value: Option[String] = None
			)
		}
		case class WarningsItem(
		  /** [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response. */
			code: Option[Schema.ResourceUpdate.WarningsItem.CodeEnum] = None,
		  /** [Output Only] A human-readable description of the warning code. */
			message: Option[String] = None,
		  /** [Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }  */
			data: Option[List[Schema.ResourceUpdate.WarningsItem.DataItem]] = None
		)
		
		enum StateEnum extends Enum[StateEnum] { case PENDING, IN_PROGRESS, IN_PREVIEW, FAILED, ABORTED }
		enum IntentEnum extends Enum[IntentEnum] { case CREATE_OR_ACQUIRE, DELETE, ACQUIRE, UPDATE, ABANDON, CREATE }
	}
	case class ResourceUpdate(
	  /** Output only. URL of the manifest representing the update configuration of this resource. */
		manifest: Option[String] = None,
	  /** Output only. If errors are generated during update of the resource, this field will be populated. */
		error: Option[Schema.ResourceUpdate.ErrorItem] = None,
	  /** Output only. If warning messages are generated during processing of this resource, this field will be populated. */
		warnings: Option[List[Schema.ResourceUpdate.WarningsItem]] = None,
	  /** Output only. The state of the resource. */
		state: Option[Schema.ResourceUpdate.StateEnum] = None,
	  /** Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`. */
		intent: Option[Schema.ResourceUpdate.IntentEnum] = None,
	  /** Output only. The set of updated properties for this resource, before references are expanded. Returned as serialized YAML. */
		properties: Option[String] = None,
	  /** Output only. The expanded properties of the resource with reference values expanded. Returned as serialized YAML. */
		finalProperties: Option[String] = None,
	  /** The Access Control Policy to set on this resource after updating the resource itself. */
		accessControl: Option[Schema.ResourceAccessControl] = None
	)
	
	case class ResourcesListResponse(
	  /** Resources contained in this list response. */
		resources: Option[List[Schema.Resource]] = None,
	  /** A token used to continue a truncated list request. */
		nextPageToken: Option[String] = None
	)
	
	case class TypesListResponse(
	  /** Output only. A list of resource types supported by Deployment Manager. */
		types: Option[List[Schema.Type]] = None,
	  /** A token used to continue a truncated list request. */
		nextPageToken: Option[String] = None
	)
	
	case class Type(
	  /** Name of the type. */
		name: Option[String] = None,
		id: Option[String] = None,
	  /** Output only. Creation timestamp in RFC3339 text format. */
		insertTime: Option[String] = None,
	  /** Output only. Server defined URL for the resource. */
		selfLink: Option[String] = None,
	  /** Output only. The Operation that most recently ran, or is currently running, on this type. */
		operation: Option[Schema.Operation] = None
	)
}
