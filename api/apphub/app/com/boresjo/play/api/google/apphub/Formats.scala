package com.boresjo.play.api.google.apphub

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtListOperationsResponse: Format[Schema.ListOperationsResponse] = Json.format[Schema.ListOperationsResponse]
	given fmtOperation: Format[Schema.Operation] = Json.format[Schema.Operation]
	given fmtStatus: Format[Schema.Status] = Json.format[Schema.Status]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtCancelOperationRequest: Format[Schema.CancelOperationRequest] = Json.format[Schema.CancelOperationRequest]
	given fmtLookupServiceProjectAttachmentResponse: Format[Schema.LookupServiceProjectAttachmentResponse] = Json.format[Schema.LookupServiceProjectAttachmentResponse]
	given fmtServiceProjectAttachment: Format[Schema.ServiceProjectAttachment] = Json.format[Schema.ServiceProjectAttachment]
	given fmtServiceProjectAttachmentStateEnum: Format[Schema.ServiceProjectAttachment.StateEnum] = JsonEnumFormat[Schema.ServiceProjectAttachment.StateEnum]
	given fmtListServiceProjectAttachmentsResponse: Format[Schema.ListServiceProjectAttachmentsResponse] = Json.format[Schema.ListServiceProjectAttachmentsResponse]
	given fmtDetachServiceProjectAttachmentRequest: Format[Schema.DetachServiceProjectAttachmentRequest] = Json.format[Schema.DetachServiceProjectAttachmentRequest]
	given fmtDetachServiceProjectAttachmentResponse: Format[Schema.DetachServiceProjectAttachmentResponse] = Json.format[Schema.DetachServiceProjectAttachmentResponse]
	given fmtListDiscoveredServicesResponse: Format[Schema.ListDiscoveredServicesResponse] = Json.format[Schema.ListDiscoveredServicesResponse]
	given fmtDiscoveredService: Format[Schema.DiscoveredService] = Json.format[Schema.DiscoveredService]
	given fmtServiceReference: Format[Schema.ServiceReference] = Json.format[Schema.ServiceReference]
	given fmtServiceProperties: Format[Schema.ServiceProperties] = Json.format[Schema.ServiceProperties]
	given fmtLookupDiscoveredServiceResponse: Format[Schema.LookupDiscoveredServiceResponse] = Json.format[Schema.LookupDiscoveredServiceResponse]
	given fmtListServicesResponse: Format[Schema.ListServicesResponse] = Json.format[Schema.ListServicesResponse]
	given fmtService: Format[Schema.Service] = Json.format[Schema.Service]
	given fmtAttributes: Format[Schema.Attributes] = Json.format[Schema.Attributes]
	given fmtServiceStateEnum: Format[Schema.Service.StateEnum] = JsonEnumFormat[Schema.Service.StateEnum]
	given fmtCriticality: Format[Schema.Criticality] = Json.format[Schema.Criticality]
	given fmtEnvironment: Format[Schema.Environment] = Json.format[Schema.Environment]
	given fmtContactInfo: Format[Schema.ContactInfo] = Json.format[Schema.ContactInfo]
	given fmtCriticalityTypeEnum: Format[Schema.Criticality.TypeEnum] = JsonEnumFormat[Schema.Criticality.TypeEnum]
	given fmtEnvironmentTypeEnum: Format[Schema.Environment.TypeEnum] = JsonEnumFormat[Schema.Environment.TypeEnum]
	given fmtListDiscoveredWorkloadsResponse: Format[Schema.ListDiscoveredWorkloadsResponse] = Json.format[Schema.ListDiscoveredWorkloadsResponse]
	given fmtDiscoveredWorkload: Format[Schema.DiscoveredWorkload] = Json.format[Schema.DiscoveredWorkload]
	given fmtWorkloadReference: Format[Schema.WorkloadReference] = Json.format[Schema.WorkloadReference]
	given fmtWorkloadProperties: Format[Schema.WorkloadProperties] = Json.format[Schema.WorkloadProperties]
	given fmtLookupDiscoveredWorkloadResponse: Format[Schema.LookupDiscoveredWorkloadResponse] = Json.format[Schema.LookupDiscoveredWorkloadResponse]
	given fmtListWorkloadsResponse: Format[Schema.ListWorkloadsResponse] = Json.format[Schema.ListWorkloadsResponse]
	given fmtWorkload: Format[Schema.Workload] = Json.format[Schema.Workload]
	given fmtWorkloadStateEnum: Format[Schema.Workload.StateEnum] = JsonEnumFormat[Schema.Workload.StateEnum]
	given fmtListApplicationsResponse: Format[Schema.ListApplicationsResponse] = Json.format[Schema.ListApplicationsResponse]
	given fmtApplication: Format[Schema.Application] = Json.format[Schema.Application]
	given fmtScope: Format[Schema.Scope] = Json.format[Schema.Scope]
	given fmtApplicationStateEnum: Format[Schema.Application.StateEnum] = JsonEnumFormat[Schema.Application.StateEnum]
	given fmtScopeTypeEnum: Format[Schema.Scope.TypeEnum] = JsonEnumFormat[Schema.Scope.TypeEnum]
	given fmtListLocationsResponse: Format[Schema.ListLocationsResponse] = Json.format[Schema.ListLocationsResponse]
	given fmtLocation: Format[Schema.Location] = Json.format[Schema.Location]
	given fmtSetIamPolicyRequest: Format[Schema.SetIamPolicyRequest] = Json.format[Schema.SetIamPolicyRequest]
	given fmtPolicy: Format[Schema.Policy] = Json.format[Schema.Policy]
	given fmtBinding: Format[Schema.Binding] = Json.format[Schema.Binding]
	given fmtAuditConfig: Format[Schema.AuditConfig] = Json.format[Schema.AuditConfig]
	given fmtExpr: Format[Schema.Expr] = Json.format[Schema.Expr]
	given fmtAuditLogConfig: Format[Schema.AuditLogConfig] = Json.format[Schema.AuditLogConfig]
	given fmtAuditLogConfigLogTypeEnum: Format[Schema.AuditLogConfig.LogTypeEnum] = JsonEnumFormat[Schema.AuditLogConfig.LogTypeEnum]
	given fmtTestIamPermissionsRequest: Format[Schema.TestIamPermissionsRequest] = Json.format[Schema.TestIamPermissionsRequest]
	given fmtTestIamPermissionsResponse: Format[Schema.TestIamPermissionsResponse] = Json.format[Schema.TestIamPermissionsResponse]
	given fmtReconciliationOperationMetadata: Format[Schema.ReconciliationOperationMetadata] = Json.format[Schema.ReconciliationOperationMetadata]
	given fmtReconciliationOperationMetadataExclusiveActionEnum: Format[Schema.ReconciliationOperationMetadata.ExclusiveActionEnum] = JsonEnumFormat[Schema.ReconciliationOperationMetadata.ExclusiveActionEnum]
	given fmtOperationMetadata: Format[Schema.OperationMetadata] = Json.format[Schema.OperationMetadata]
	given fmtAssetLocation: Format[Schema.AssetLocation] = Json.format[Schema.AssetLocation]
	given fmtIsolationExpectations: Format[Schema.IsolationExpectations] = Json.format[Schema.IsolationExpectations]
	given fmtLocationData: Format[Schema.LocationData] = Json.format[Schema.LocationData]
	given fmtCloudAsset: Format[Schema.CloudAsset] = Json.format[Schema.CloudAsset]
	given fmtExtraParameter: Format[Schema.ExtraParameter] = Json.format[Schema.ExtraParameter]
	given fmtIsolationExpectationsZoneIsolationEnum: Format[Schema.IsolationExpectations.ZoneIsolationEnum] = JsonEnumFormat[Schema.IsolationExpectations.ZoneIsolationEnum]
	given fmtIsolationExpectationsZoneSeparationEnum: Format[Schema.IsolationExpectations.ZoneSeparationEnum] = JsonEnumFormat[Schema.IsolationExpectations.ZoneSeparationEnum]
	given fmtIsolationExpectationsZsOrgPolicyEnum: Format[Schema.IsolationExpectations.ZsOrgPolicyEnum] = JsonEnumFormat[Schema.IsolationExpectations.ZsOrgPolicyEnum]
	given fmtIsolationExpectationsZsRegionStateEnum: Format[Schema.IsolationExpectations.ZsRegionStateEnum] = JsonEnumFormat[Schema.IsolationExpectations.ZsRegionStateEnum]
	given fmtIsolationExpectationsZiOrgPolicyEnum: Format[Schema.IsolationExpectations.ZiOrgPolicyEnum] = JsonEnumFormat[Schema.IsolationExpectations.ZiOrgPolicyEnum]
	given fmtIsolationExpectationsZiRegionPolicyEnum: Format[Schema.IsolationExpectations.ZiRegionPolicyEnum] = JsonEnumFormat[Schema.IsolationExpectations.ZiRegionPolicyEnum]
	given fmtIsolationExpectationsZiRegionStateEnum: Format[Schema.IsolationExpectations.ZiRegionStateEnum] = JsonEnumFormat[Schema.IsolationExpectations.ZiRegionStateEnum]
	given fmtRequirementOverride: Format[Schema.RequirementOverride] = Json.format[Schema.RequirementOverride]
	given fmtRequirementOverrideZiOverrideEnum: Format[Schema.RequirementOverride.ZiOverrideEnum] = JsonEnumFormat[Schema.RequirementOverride.ZiOverrideEnum]
	given fmtRequirementOverrideZsOverrideEnum: Format[Schema.RequirementOverride.ZsOverrideEnum] = JsonEnumFormat[Schema.RequirementOverride.ZsOverrideEnum]
	given fmtDirectLocationAssignment: Format[Schema.DirectLocationAssignment] = Json.format[Schema.DirectLocationAssignment]
	given fmtSpannerLocation: Format[Schema.SpannerLocation] = Json.format[Schema.SpannerLocation]
	given fmtCloudAssetComposition: Format[Schema.CloudAssetComposition] = Json.format[Schema.CloudAssetComposition]
	given fmtTenantProjectProxy: Format[Schema.TenantProjectProxy] = Json.format[Schema.TenantProjectProxy]
	given fmtBlobstoreLocation: Format[Schema.BlobstoreLocation] = Json.format[Schema.BlobstoreLocation]
	given fmtPlacerLocation: Format[Schema.PlacerLocation] = Json.format[Schema.PlacerLocation]
	given fmtLocationAssignment: Format[Schema.LocationAssignment] = Json.format[Schema.LocationAssignment]
	given fmtLocationAssignmentLocationTypeEnum: Format[Schema.LocationAssignment.LocationTypeEnum] = JsonEnumFormat[Schema.LocationAssignment.LocationTypeEnum]
	given fmtRegionalMigDistributionPolicy: Format[Schema.RegionalMigDistributionPolicy] = Json.format[Schema.RegionalMigDistributionPolicy]
	given fmtZoneConfiguration: Format[Schema.ZoneConfiguration] = Json.format[Schema.ZoneConfiguration]
}
