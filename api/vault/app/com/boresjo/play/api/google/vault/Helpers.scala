package com.boresjo.play.api.google.vault

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putListSchemaOperation: Conversion[List[Schema.Operation], Option[List[Schema.Operation]]] = (fun: List[Schema.Operation]) => Option(fun)
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putMapStringJsValue: Conversion[Map[String, JsValue], Option[Map[String, JsValue]]] = (fun: Map[String, JsValue]) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putSchemaStatus: Conversion[Schema.Status, Option[Schema.Status]] = (fun: Schema.Status) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putListMapStringJsValue: Conversion[List[Map[String, JsValue]], Option[List[Map[String, JsValue]]]] = (fun: List[Map[String, JsValue]]) => Option(fun)
		given putSchemaMatterStateEnum: Conversion[Schema.Matter.StateEnum, Option[Schema.Matter.StateEnum]] = (fun: Schema.Matter.StateEnum) => Option(fun)
		given putListSchemaMatterPermission: Conversion[List[Schema.MatterPermission], Option[List[Schema.MatterPermission]]] = (fun: List[Schema.MatterPermission]) => Option(fun)
		given putSchemaMatterMatterRegionEnum: Conversion[Schema.Matter.MatterRegionEnum, Option[Schema.Matter.MatterRegionEnum]] = (fun: Schema.Matter.MatterRegionEnum) => Option(fun)
		given putSchemaMatterPermissionRoleEnum: Conversion[Schema.MatterPermission.RoleEnum, Option[Schema.MatterPermission.RoleEnum]] = (fun: Schema.MatterPermission.RoleEnum) => Option(fun)
		given putSchemaMatter: Conversion[Schema.Matter, Option[Schema.Matter]] = (fun: Schema.Matter) => Option(fun)
		given putListSchemaMatter: Conversion[List[Schema.Matter], Option[List[Schema.Matter]]] = (fun: List[Schema.Matter]) => Option(fun)
		given putSchemaMatterPermission: Conversion[Schema.MatterPermission, Option[Schema.MatterPermission]] = (fun: Schema.MatterPermission) => Option(fun)
		given putSchemaQuery: Conversion[Schema.Query, Option[Schema.Query]] = (fun: Schema.Query) => Option(fun)
		given putSchemaCountArtifactsRequestViewEnum: Conversion[Schema.CountArtifactsRequest.ViewEnum, Option[Schema.CountArtifactsRequest.ViewEnum]] = (fun: Schema.CountArtifactsRequest.ViewEnum) => Option(fun)
		given putSchemaQueryCorpusEnum: Conversion[Schema.Query.CorpusEnum, Option[Schema.Query.CorpusEnum]] = (fun: Schema.Query.CorpusEnum) => Option(fun)
		given putSchemaQueryDataScopeEnum: Conversion[Schema.Query.DataScopeEnum, Option[Schema.Query.DataScopeEnum]] = (fun: Schema.Query.DataScopeEnum) => Option(fun)
		given putSchemaQuerySearchMethodEnum: Conversion[Schema.Query.SearchMethodEnum, Option[Schema.Query.SearchMethodEnum]] = (fun: Schema.Query.SearchMethodEnum) => Option(fun)
		given putSchemaQueryMethodEnum: Conversion[Schema.Query.MethodEnum, Option[Schema.Query.MethodEnum]] = (fun: Schema.Query.MethodEnum) => Option(fun)
		given putSchemaAccountInfo: Conversion[Schema.AccountInfo, Option[Schema.AccountInfo]] = (fun: Schema.AccountInfo) => Option(fun)
		given putSchemaOrgUnitInfo: Conversion[Schema.OrgUnitInfo, Option[Schema.OrgUnitInfo]] = (fun: Schema.OrgUnitInfo) => Option(fun)
		given putSchemaSharedDriveInfo: Conversion[Schema.SharedDriveInfo, Option[Schema.SharedDriveInfo]] = (fun: Schema.SharedDriveInfo) => Option(fun)
		given putSchemaHangoutsChatInfo: Conversion[Schema.HangoutsChatInfo, Option[Schema.HangoutsChatInfo]] = (fun: Schema.HangoutsChatInfo) => Option(fun)
		given putSchemaSitesUrlInfo: Conversion[Schema.SitesUrlInfo, Option[Schema.SitesUrlInfo]] = (fun: Schema.SitesUrlInfo) => Option(fun)
		given putSchemaTeamDriveInfo: Conversion[Schema.TeamDriveInfo, Option[Schema.TeamDriveInfo]] = (fun: Schema.TeamDriveInfo) => Option(fun)
		given putSchemaMailOptions: Conversion[Schema.MailOptions, Option[Schema.MailOptions]] = (fun: Schema.MailOptions) => Option(fun)
		given putSchemaDriveOptions: Conversion[Schema.DriveOptions, Option[Schema.DriveOptions]] = (fun: Schema.DriveOptions) => Option(fun)
		given putSchemaHangoutsChatOptions: Conversion[Schema.HangoutsChatOptions, Option[Schema.HangoutsChatOptions]] = (fun: Schema.HangoutsChatOptions) => Option(fun)
		given putSchemaVoiceOptions: Conversion[Schema.VoiceOptions, Option[Schema.VoiceOptions]] = (fun: Schema.VoiceOptions) => Option(fun)
		given putSchemaCalendarOptions: Conversion[Schema.CalendarOptions, Option[Schema.CalendarOptions]] = (fun: Schema.CalendarOptions) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putSchemaMailOptionsClientSideEncryptedOptionEnum: Conversion[Schema.MailOptions.ClientSideEncryptedOptionEnum, Option[Schema.MailOptions.ClientSideEncryptedOptionEnum]] = (fun: Schema.MailOptions.ClientSideEncryptedOptionEnum) => Option(fun)
		given putSchemaDriveOptionsClientSideEncryptedOptionEnum: Conversion[Schema.DriveOptions.ClientSideEncryptedOptionEnum, Option[Schema.DriveOptions.ClientSideEncryptedOptionEnum]] = (fun: Schema.DriveOptions.ClientSideEncryptedOptionEnum) => Option(fun)
		given putListSchemaVoiceOptionsCoveredDataEnum: Conversion[List[Schema.VoiceOptions.CoveredDataEnum], Option[List[Schema.VoiceOptions.CoveredDataEnum]]] = (fun: List[Schema.VoiceOptions.CoveredDataEnum]) => Option(fun)
		given putListSchemaCalendarOptionsResponseStatusesEnum: Conversion[List[Schema.CalendarOptions.ResponseStatusesEnum], Option[List[Schema.CalendarOptions.ResponseStatusesEnum]]] = (fun: List[Schema.CalendarOptions.ResponseStatusesEnum]) => Option(fun)
		given putSchemaUserInfo: Conversion[Schema.UserInfo, Option[Schema.UserInfo]] = (fun: Schema.UserInfo) => Option(fun)
		given putSchemaExportOptions: Conversion[Schema.ExportOptions, Option[Schema.ExportOptions]] = (fun: Schema.ExportOptions) => Option(fun)
		given putSchemaExportStatusEnum: Conversion[Schema.Export.StatusEnum, Option[Schema.Export.StatusEnum]] = (fun: Schema.Export.StatusEnum) => Option(fun)
		given putSchemaExportStats: Conversion[Schema.ExportStats, Option[Schema.ExportStats]] = (fun: Schema.ExportStats) => Option(fun)
		given putSchemaCloudStorageSink: Conversion[Schema.CloudStorageSink, Option[Schema.CloudStorageSink]] = (fun: Schema.CloudStorageSink) => Option(fun)
		given putSchemaMailExportOptions: Conversion[Schema.MailExportOptions, Option[Schema.MailExportOptions]] = (fun: Schema.MailExportOptions) => Option(fun)
		given putSchemaGroupsExportOptions: Conversion[Schema.GroupsExportOptions, Option[Schema.GroupsExportOptions]] = (fun: Schema.GroupsExportOptions) => Option(fun)
		given putSchemaDriveExportOptions: Conversion[Schema.DriveExportOptions, Option[Schema.DriveExportOptions]] = (fun: Schema.DriveExportOptions) => Option(fun)
		given putSchemaHangoutsChatExportOptions: Conversion[Schema.HangoutsChatExportOptions, Option[Schema.HangoutsChatExportOptions]] = (fun: Schema.HangoutsChatExportOptions) => Option(fun)
		given putSchemaVoiceExportOptions: Conversion[Schema.VoiceExportOptions, Option[Schema.VoiceExportOptions]] = (fun: Schema.VoiceExportOptions) => Option(fun)
		given putSchemaCalendarExportOptions: Conversion[Schema.CalendarExportOptions, Option[Schema.CalendarExportOptions]] = (fun: Schema.CalendarExportOptions) => Option(fun)
		given putSchemaExportOptionsRegionEnum: Conversion[Schema.ExportOptions.RegionEnum, Option[Schema.ExportOptions.RegionEnum]] = (fun: Schema.ExportOptions.RegionEnum) => Option(fun)
		given putSchemaMailExportOptionsExportFormatEnum: Conversion[Schema.MailExportOptions.ExportFormatEnum, Option[Schema.MailExportOptions.ExportFormatEnum]] = (fun: Schema.MailExportOptions.ExportFormatEnum) => Option(fun)
		given putSchemaGroupsExportOptionsExportFormatEnum: Conversion[Schema.GroupsExportOptions.ExportFormatEnum, Option[Schema.GroupsExportOptions.ExportFormatEnum]] = (fun: Schema.GroupsExportOptions.ExportFormatEnum) => Option(fun)
		given putSchemaHangoutsChatExportOptionsExportFormatEnum: Conversion[Schema.HangoutsChatExportOptions.ExportFormatEnum, Option[Schema.HangoutsChatExportOptions.ExportFormatEnum]] = (fun: Schema.HangoutsChatExportOptions.ExportFormatEnum) => Option(fun)
		given putSchemaVoiceExportOptionsExportFormatEnum: Conversion[Schema.VoiceExportOptions.ExportFormatEnum, Option[Schema.VoiceExportOptions.ExportFormatEnum]] = (fun: Schema.VoiceExportOptions.ExportFormatEnum) => Option(fun)
		given putSchemaCalendarExportOptionsExportFormatEnum: Conversion[Schema.CalendarExportOptions.ExportFormatEnum, Option[Schema.CalendarExportOptions.ExportFormatEnum]] = (fun: Schema.CalendarExportOptions.ExportFormatEnum) => Option(fun)
		given putListSchemaCloudStorageFile: Conversion[List[Schema.CloudStorageFile], Option[List[Schema.CloudStorageFile]]] = (fun: List[Schema.CloudStorageFile]) => Option(fun)
		given putListSchemaExport: Conversion[List[Schema.Export], Option[List[Schema.Export]]] = (fun: List[Schema.Export]) => Option(fun)
		given putListSchemaHeldAccount: Conversion[List[Schema.HeldAccount], Option[List[Schema.HeldAccount]]] = (fun: List[Schema.HeldAccount]) => Option(fun)
		given putSchemaHeldOrgUnit: Conversion[Schema.HeldOrgUnit, Option[Schema.HeldOrgUnit]] = (fun: Schema.HeldOrgUnit) => Option(fun)
		given putSchemaHoldCorpusEnum: Conversion[Schema.Hold.CorpusEnum, Option[Schema.Hold.CorpusEnum]] = (fun: Schema.Hold.CorpusEnum) => Option(fun)
		given putSchemaCorpusQuery: Conversion[Schema.CorpusQuery, Option[Schema.CorpusQuery]] = (fun: Schema.CorpusQuery) => Option(fun)
		given putSchemaHeldDriveQuery: Conversion[Schema.HeldDriveQuery, Option[Schema.HeldDriveQuery]] = (fun: Schema.HeldDriveQuery) => Option(fun)
		given putSchemaHeldMailQuery: Conversion[Schema.HeldMailQuery, Option[Schema.HeldMailQuery]] = (fun: Schema.HeldMailQuery) => Option(fun)
		given putSchemaHeldGroupsQuery: Conversion[Schema.HeldGroupsQuery, Option[Schema.HeldGroupsQuery]] = (fun: Schema.HeldGroupsQuery) => Option(fun)
		given putSchemaHeldHangoutsChatQuery: Conversion[Schema.HeldHangoutsChatQuery, Option[Schema.HeldHangoutsChatQuery]] = (fun: Schema.HeldHangoutsChatQuery) => Option(fun)
		given putSchemaHeldVoiceQuery: Conversion[Schema.HeldVoiceQuery, Option[Schema.HeldVoiceQuery]] = (fun: Schema.HeldVoiceQuery) => Option(fun)
		given putSchemaHeldCalendarQuery: Conversion[Schema.HeldCalendarQuery, Option[Schema.HeldCalendarQuery]] = (fun: Schema.HeldCalendarQuery) => Option(fun)
		given putListSchemaHeldVoiceQueryCoveredDataEnum: Conversion[List[Schema.HeldVoiceQuery.CoveredDataEnum], Option[List[Schema.HeldVoiceQuery.CoveredDataEnum]]] = (fun: List[Schema.HeldVoiceQuery.CoveredDataEnum]) => Option(fun)
		given putListSchemaHold: Conversion[List[Schema.Hold], Option[List[Schema.Hold]]] = (fun: List[Schema.Hold]) => Option(fun)
		given putListSchemaAddHeldAccountResult: Conversion[List[Schema.AddHeldAccountResult], Option[List[Schema.AddHeldAccountResult]]] = (fun: List[Schema.AddHeldAccountResult]) => Option(fun)
		given putSchemaHeldAccount: Conversion[Schema.HeldAccount, Option[Schema.HeldAccount]] = (fun: Schema.HeldAccount) => Option(fun)
		given putListSchemaStatus: Conversion[List[Schema.Status], Option[List[Schema.Status]]] = (fun: List[Schema.Status]) => Option(fun)
		given putListSchemaSavedQuery: Conversion[List[Schema.SavedQuery], Option[List[Schema.SavedQuery]]] = (fun: List[Schema.SavedQuery]) => Option(fun)
		given putSchemaMailCountResult: Conversion[Schema.MailCountResult, Option[Schema.MailCountResult]] = (fun: Schema.MailCountResult) => Option(fun)
		given putSchemaGroupsCountResult: Conversion[Schema.GroupsCountResult, Option[Schema.GroupsCountResult]] = (fun: Schema.GroupsCountResult) => Option(fun)
		given putListSchemaAccountCountError: Conversion[List[Schema.AccountCountError], Option[List[Schema.AccountCountError]]] = (fun: List[Schema.AccountCountError]) => Option(fun)
		given putListSchemaAccountCount: Conversion[List[Schema.AccountCount], Option[List[Schema.AccountCount]]] = (fun: List[Schema.AccountCount]) => Option(fun)
		given putSchemaAccountCountErrorErrorTypeEnum: Conversion[Schema.AccountCountError.ErrorTypeEnum, Option[Schema.AccountCountError.ErrorTypeEnum]] = (fun: Schema.AccountCountError.ErrorTypeEnum) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
