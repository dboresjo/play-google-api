package com.boresjo.play.api.google.driveactivity

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtQueryDriveActivityRequest: Format[Schema.QueryDriveActivityRequest] = Json.format[Schema.QueryDriveActivityRequest]
	given fmtConsolidationStrategy: Format[Schema.ConsolidationStrategy] = Json.format[Schema.ConsolidationStrategy]
	given fmtNoConsolidation: Format[Schema.NoConsolidation] = Json.format[Schema.NoConsolidation]
	given fmtLegacy: Format[Schema.Legacy] = Json.format[Schema.Legacy]
	given fmtQueryDriveActivityResponse: Format[Schema.QueryDriveActivityResponse] = Json.format[Schema.QueryDriveActivityResponse]
	given fmtDriveActivity: Format[Schema.DriveActivity] = Json.format[Schema.DriveActivity]
	given fmtActionDetail: Format[Schema.ActionDetail] = Json.format[Schema.ActionDetail]
	given fmtActor: Format[Schema.Actor] = Json.format[Schema.Actor]
	given fmtAction: Format[Schema.Action] = Json.format[Schema.Action]
	given fmtTarget: Format[Schema.Target] = Json.format[Schema.Target]
	given fmtTimeRange: Format[Schema.TimeRange] = Json.format[Schema.TimeRange]
	given fmtCreate: Format[Schema.Create] = Json.format[Schema.Create]
	given fmtEdit: Format[Schema.Edit] = Json.format[Schema.Edit]
	given fmtMove: Format[Schema.Move] = Json.format[Schema.Move]
	given fmtRename: Format[Schema.Rename] = Json.format[Schema.Rename]
	given fmtDelete: Format[Schema.Delete] = Json.format[Schema.Delete]
	given fmtRestore: Format[Schema.Restore] = Json.format[Schema.Restore]
	given fmtPermissionChange: Format[Schema.PermissionChange] = Json.format[Schema.PermissionChange]
	given fmtComment: Format[Schema.Comment] = Json.format[Schema.Comment]
	given fmtDataLeakPreventionChange: Format[Schema.DataLeakPreventionChange] = Json.format[Schema.DataLeakPreventionChange]
	given fmtApplicationReference: Format[Schema.ApplicationReference] = Json.format[Schema.ApplicationReference]
	given fmtSettingsChange: Format[Schema.SettingsChange] = Json.format[Schema.SettingsChange]
	given fmtAppliedLabelChange: Format[Schema.AppliedLabelChange] = Json.format[Schema.AppliedLabelChange]
	given fmtNew: Format[Schema.New] = Json.format[Schema.New]
	given fmtUpload: Format[Schema.Upload] = Json.format[Schema.Upload]
	given fmtCopy: Format[Schema.Copy] = Json.format[Schema.Copy]
	given fmtTargetReference: Format[Schema.TargetReference] = Json.format[Schema.TargetReference]
	given fmtDriveItemReference: Format[Schema.DriveItemReference] = Json.format[Schema.DriveItemReference]
	given fmtDriveReference: Format[Schema.DriveReference] = Json.format[Schema.DriveReference]
	given fmtTeamDriveReference: Format[Schema.TeamDriveReference] = Json.format[Schema.TeamDriveReference]
	given fmtFile: Format[Schema.File] = Json.format[Schema.File]
	given fmtFolder: Format[Schema.Folder] = Json.format[Schema.Folder]
	given fmtDriveFile: Format[Schema.DriveFile] = Json.format[Schema.DriveFile]
	given fmtDriveFolder: Format[Schema.DriveFolder] = Json.format[Schema.DriveFolder]
	given fmtFolderTypeEnum: Format[Schema.Folder.TypeEnum] = JsonEnumFormat[Schema.Folder.TypeEnum]
	given fmtDriveFolderTypeEnum: Format[Schema.DriveFolder.TypeEnum] = JsonEnumFormat[Schema.DriveFolder.TypeEnum]
	given fmtDeleteTypeEnum: Format[Schema.Delete.TypeEnum] = JsonEnumFormat[Schema.Delete.TypeEnum]
	given fmtRestoreTypeEnum: Format[Schema.Restore.TypeEnum] = JsonEnumFormat[Schema.Restore.TypeEnum]
	given fmtPermission: Format[Schema.Permission] = Json.format[Schema.Permission]
	given fmtPermissionRoleEnum: Format[Schema.Permission.RoleEnum] = JsonEnumFormat[Schema.Permission.RoleEnum]
	given fmtUser: Format[Schema.User] = Json.format[Schema.User]
	given fmtGroup: Format[Schema.Group] = Json.format[Schema.Group]
	given fmtDomain: Format[Schema.Domain] = Json.format[Schema.Domain]
	given fmtAnyone: Format[Schema.Anyone] = Json.format[Schema.Anyone]
	given fmtKnownUser: Format[Schema.KnownUser] = Json.format[Schema.KnownUser]
	given fmtDeletedUser: Format[Schema.DeletedUser] = Json.format[Schema.DeletedUser]
	given fmtUnknownUser: Format[Schema.UnknownUser] = Json.format[Schema.UnknownUser]
	given fmtPost: Format[Schema.Post] = Json.format[Schema.Post]
	given fmtAssignment: Format[Schema.Assignment] = Json.format[Schema.Assignment]
	given fmtSuggestion: Format[Schema.Suggestion] = Json.format[Schema.Suggestion]
	given fmtPostSubtypeEnum: Format[Schema.Post.SubtypeEnum] = JsonEnumFormat[Schema.Post.SubtypeEnum]
	given fmtAssignmentSubtypeEnum: Format[Schema.Assignment.SubtypeEnum] = JsonEnumFormat[Schema.Assignment.SubtypeEnum]
	given fmtSuggestionSubtypeEnum: Format[Schema.Suggestion.SubtypeEnum] = JsonEnumFormat[Schema.Suggestion.SubtypeEnum]
	given fmtDataLeakPreventionChangeTypeEnum: Format[Schema.DataLeakPreventionChange.TypeEnum] = JsonEnumFormat[Schema.DataLeakPreventionChange.TypeEnum]
	given fmtApplicationReferenceTypeEnum: Format[Schema.ApplicationReference.TypeEnum] = JsonEnumFormat[Schema.ApplicationReference.TypeEnum]
	given fmtRestrictionChange: Format[Schema.RestrictionChange] = Json.format[Schema.RestrictionChange]
	given fmtRestrictionChangeFeatureEnum: Format[Schema.RestrictionChange.FeatureEnum] = JsonEnumFormat[Schema.RestrictionChange.FeatureEnum]
	given fmtRestrictionChangeNewRestrictionEnum: Format[Schema.RestrictionChange.NewRestrictionEnum] = JsonEnumFormat[Schema.RestrictionChange.NewRestrictionEnum]
	given fmtAppliedLabelChangeDetail: Format[Schema.AppliedLabelChangeDetail] = Json.format[Schema.AppliedLabelChangeDetail]
	given fmtAppliedLabelChangeDetailTypesEnum: Format[Schema.AppliedLabelChangeDetail.TypesEnum] = JsonEnumFormat[Schema.AppliedLabelChangeDetail.TypesEnum]
	given fmtFieldValueChange: Format[Schema.FieldValueChange] = Json.format[Schema.FieldValueChange]
	given fmtFieldValue: Format[Schema.FieldValue] = Json.format[Schema.FieldValue]
	given fmtText: Format[Schema.Text] = Json.format[Schema.Text]
	given fmtTextList: Format[Schema.TextList] = Json.format[Schema.TextList]
	given fmtSelection: Format[Schema.Selection] = Json.format[Schema.Selection]
	given fmtSelectionList: Format[Schema.SelectionList] = Json.format[Schema.SelectionList]
	given fmtInteger: Format[Schema.Integer] = Json.format[Schema.Integer]
	given fmtSingleUser: Format[Schema.SingleUser] = Json.format[Schema.SingleUser]
	given fmtUserList: Format[Schema.UserList] = Json.format[Schema.UserList]
	given fmtDate: Format[Schema.Date] = Json.format[Schema.Date]
	given fmtAnonymousUser: Format[Schema.AnonymousUser] = Json.format[Schema.AnonymousUser]
	given fmtImpersonation: Format[Schema.Impersonation] = Json.format[Schema.Impersonation]
	given fmtSystemEvent: Format[Schema.SystemEvent] = Json.format[Schema.SystemEvent]
	given fmtAdministrator: Format[Schema.Administrator] = Json.format[Schema.Administrator]
	given fmtSystemEventTypeEnum: Format[Schema.SystemEvent.TypeEnum] = JsonEnumFormat[Schema.SystemEvent.TypeEnum]
	given fmtDriveItem: Format[Schema.DriveItem] = Json.format[Schema.DriveItem]
	given fmtDrive: Format[Schema.Drive] = Json.format[Schema.Drive]
	given fmtFileComment: Format[Schema.FileComment] = Json.format[Schema.FileComment]
	given fmtTeamDrive: Format[Schema.TeamDrive] = Json.format[Schema.TeamDrive]
	given fmtOwner: Format[Schema.Owner] = Json.format[Schema.Owner]
}
