package com.boresjo.play.api.google.vmwareengine

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtListOperationsResponse: Format[Schema.ListOperationsResponse] = Json.format[Schema.ListOperationsResponse]
	given fmtOperation: Format[Schema.Operation] = Json.format[Schema.Operation]
	given fmtStatus: Format[Schema.Status] = Json.format[Schema.Status]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtListPrivateCloudsResponse: Format[Schema.ListPrivateCloudsResponse] = Json.format[Schema.ListPrivateCloudsResponse]
	given fmtPrivateCloud: Format[Schema.PrivateCloud] = Json.format[Schema.PrivateCloud]
	given fmtPrivateCloudStateEnum: Format[Schema.PrivateCloud.StateEnum] = JsonEnumFormat[Schema.PrivateCloud.StateEnum]
	given fmtNetworkConfig: Format[Schema.NetworkConfig] = Json.format[Schema.NetworkConfig]
	given fmtManagementCluster: Format[Schema.ManagementCluster] = Json.format[Schema.ManagementCluster]
	given fmtHcx: Format[Schema.Hcx] = Json.format[Schema.Hcx]
	given fmtNsx: Format[Schema.Nsx] = Json.format[Schema.Nsx]
	given fmtVcenter: Format[Schema.Vcenter] = Json.format[Schema.Vcenter]
	given fmtPrivateCloudTypeEnum: Format[Schema.PrivateCloud.TypeEnum] = JsonEnumFormat[Schema.PrivateCloud.TypeEnum]
	given fmtNodeTypeConfig: Format[Schema.NodeTypeConfig] = Json.format[Schema.NodeTypeConfig]
	given fmtStretchedClusterConfig: Format[Schema.StretchedClusterConfig] = Json.format[Schema.StretchedClusterConfig]
	given fmtHcxStateEnum: Format[Schema.Hcx.StateEnum] = JsonEnumFormat[Schema.Hcx.StateEnum]
	given fmtNsxStateEnum: Format[Schema.Nsx.StateEnum] = JsonEnumFormat[Schema.Nsx.StateEnum]
	given fmtVcenterStateEnum: Format[Schema.Vcenter.StateEnum] = JsonEnumFormat[Schema.Vcenter.StateEnum]
	given fmtUndeletePrivateCloudRequest: Format[Schema.UndeletePrivateCloudRequest] = Json.format[Schema.UndeletePrivateCloudRequest]
	given fmtListClustersResponse: Format[Schema.ListClustersResponse] = Json.format[Schema.ListClustersResponse]
	given fmtCluster: Format[Schema.Cluster] = Json.format[Schema.Cluster]
	given fmtClusterStateEnum: Format[Schema.Cluster.StateEnum] = JsonEnumFormat[Schema.Cluster.StateEnum]
	given fmtAutoscalingSettings: Format[Schema.AutoscalingSettings] = Json.format[Schema.AutoscalingSettings]
	given fmtAutoscalingPolicy: Format[Schema.AutoscalingPolicy] = Json.format[Schema.AutoscalingPolicy]
	given fmtThresholds: Format[Schema.Thresholds] = Json.format[Schema.Thresholds]
	given fmtListNodesResponse: Format[Schema.ListNodesResponse] = Json.format[Schema.ListNodesResponse]
	given fmtNode: Format[Schema.Node] = Json.format[Schema.Node]
	given fmtNodeStateEnum: Format[Schema.Node.StateEnum] = JsonEnumFormat[Schema.Node.StateEnum]
	given fmtListExternalAddressesResponse: Format[Schema.ListExternalAddressesResponse] = Json.format[Schema.ListExternalAddressesResponse]
	given fmtExternalAddress: Format[Schema.ExternalAddress] = Json.format[Schema.ExternalAddress]
	given fmtExternalAddressStateEnum: Format[Schema.ExternalAddress.StateEnum] = JsonEnumFormat[Schema.ExternalAddress.StateEnum]
	given fmtFetchNetworkPolicyExternalAddressesResponse: Format[Schema.FetchNetworkPolicyExternalAddressesResponse] = Json.format[Schema.FetchNetworkPolicyExternalAddressesResponse]
	given fmtListSubnetsResponse: Format[Schema.ListSubnetsResponse] = Json.format[Schema.ListSubnetsResponse]
	given fmtSubnet: Format[Schema.Subnet] = Json.format[Schema.Subnet]
	given fmtSubnetStateEnum: Format[Schema.Subnet.StateEnum] = JsonEnumFormat[Schema.Subnet.StateEnum]
	given fmtListExternalAccessRulesResponse: Format[Schema.ListExternalAccessRulesResponse] = Json.format[Schema.ListExternalAccessRulesResponse]
	given fmtExternalAccessRule: Format[Schema.ExternalAccessRule] = Json.format[Schema.ExternalAccessRule]
	given fmtExternalAccessRuleActionEnum: Format[Schema.ExternalAccessRule.ActionEnum] = JsonEnumFormat[Schema.ExternalAccessRule.ActionEnum]
	given fmtIpRange: Format[Schema.IpRange] = Json.format[Schema.IpRange]
	given fmtExternalAccessRuleStateEnum: Format[Schema.ExternalAccessRule.StateEnum] = JsonEnumFormat[Schema.ExternalAccessRule.StateEnum]
	given fmtListLoggingServersResponse: Format[Schema.ListLoggingServersResponse] = Json.format[Schema.ListLoggingServersResponse]
	given fmtLoggingServer: Format[Schema.LoggingServer] = Json.format[Schema.LoggingServer]
	given fmtLoggingServerProtocolEnum: Format[Schema.LoggingServer.ProtocolEnum] = JsonEnumFormat[Schema.LoggingServer.ProtocolEnum]
	given fmtLoggingServerSourceTypeEnum: Format[Schema.LoggingServer.SourceTypeEnum] = JsonEnumFormat[Schema.LoggingServer.SourceTypeEnum]
	given fmtListNodeTypesResponse: Format[Schema.ListNodeTypesResponse] = Json.format[Schema.ListNodeTypesResponse]
	given fmtNodeType: Format[Schema.NodeType] = Json.format[Schema.NodeType]
	given fmtNodeTypeKindEnum: Format[Schema.NodeType.KindEnum] = JsonEnumFormat[Schema.NodeType.KindEnum]
	given fmtNodeTypeCapabilitiesEnum: Format[Schema.NodeType.CapabilitiesEnum] = JsonEnumFormat[Schema.NodeType.CapabilitiesEnum]
	given fmtCredentials: Format[Schema.Credentials] = Json.format[Schema.Credentials]
	given fmtResetNsxCredentialsRequest: Format[Schema.ResetNsxCredentialsRequest] = Json.format[Schema.ResetNsxCredentialsRequest]
	given fmtResetVcenterCredentialsRequest: Format[Schema.ResetVcenterCredentialsRequest] = Json.format[Schema.ResetVcenterCredentialsRequest]
	given fmtDnsForwarding: Format[Schema.DnsForwarding] = Json.format[Schema.DnsForwarding]
	given fmtForwardingRule: Format[Schema.ForwardingRule] = Json.format[Schema.ForwardingRule]
	given fmtNetworkPeering: Format[Schema.NetworkPeering] = Json.format[Schema.NetworkPeering]
	given fmtNetworkPeeringStateEnum: Format[Schema.NetworkPeering.StateEnum] = JsonEnumFormat[Schema.NetworkPeering.StateEnum]
	given fmtNetworkPeeringPeerNetworkTypeEnum: Format[Schema.NetworkPeering.PeerNetworkTypeEnum] = JsonEnumFormat[Schema.NetworkPeering.PeerNetworkTypeEnum]
	given fmtListNetworkPeeringsResponse: Format[Schema.ListNetworkPeeringsResponse] = Json.format[Schema.ListNetworkPeeringsResponse]
	given fmtListPeeringRoutesResponse: Format[Schema.ListPeeringRoutesResponse] = Json.format[Schema.ListPeeringRoutesResponse]
	given fmtPeeringRoute: Format[Schema.PeeringRoute] = Json.format[Schema.PeeringRoute]
	given fmtPeeringRouteTypeEnum: Format[Schema.PeeringRoute.TypeEnum] = JsonEnumFormat[Schema.PeeringRoute.TypeEnum]
	given fmtPeeringRouteDirectionEnum: Format[Schema.PeeringRoute.DirectionEnum] = JsonEnumFormat[Schema.PeeringRoute.DirectionEnum]
	given fmtHcxActivationKey: Format[Schema.HcxActivationKey] = Json.format[Schema.HcxActivationKey]
	given fmtHcxActivationKeyStateEnum: Format[Schema.HcxActivationKey.StateEnum] = JsonEnumFormat[Schema.HcxActivationKey.StateEnum]
	given fmtListHcxActivationKeysResponse: Format[Schema.ListHcxActivationKeysResponse] = Json.format[Schema.ListHcxActivationKeysResponse]
	given fmtNetworkPolicy: Format[Schema.NetworkPolicy] = Json.format[Schema.NetworkPolicy]
	given fmtNetworkService: Format[Schema.NetworkService] = Json.format[Schema.NetworkService]
	given fmtNetworkServiceStateEnum: Format[Schema.NetworkService.StateEnum] = JsonEnumFormat[Schema.NetworkService.StateEnum]
	given fmtListNetworkPoliciesResponse: Format[Schema.ListNetworkPoliciesResponse] = Json.format[Schema.ListNetworkPoliciesResponse]
	given fmtListManagementDnsZoneBindingsResponse: Format[Schema.ListManagementDnsZoneBindingsResponse] = Json.format[Schema.ListManagementDnsZoneBindingsResponse]
	given fmtManagementDnsZoneBinding: Format[Schema.ManagementDnsZoneBinding] = Json.format[Schema.ManagementDnsZoneBinding]
	given fmtManagementDnsZoneBindingStateEnum: Format[Schema.ManagementDnsZoneBinding.StateEnum] = JsonEnumFormat[Schema.ManagementDnsZoneBinding.StateEnum]
	given fmtRepairManagementDnsZoneBindingRequest: Format[Schema.RepairManagementDnsZoneBindingRequest] = Json.format[Schema.RepairManagementDnsZoneBindingRequest]
	given fmtVmwareEngineNetwork: Format[Schema.VmwareEngineNetwork] = Json.format[Schema.VmwareEngineNetwork]
	given fmtVpcNetwork: Format[Schema.VpcNetwork] = Json.format[Schema.VpcNetwork]
	given fmtVmwareEngineNetworkStateEnum: Format[Schema.VmwareEngineNetwork.StateEnum] = JsonEnumFormat[Schema.VmwareEngineNetwork.StateEnum]
	given fmtVmwareEngineNetworkTypeEnum: Format[Schema.VmwareEngineNetwork.TypeEnum] = JsonEnumFormat[Schema.VmwareEngineNetwork.TypeEnum]
	given fmtVpcNetworkTypeEnum: Format[Schema.VpcNetwork.TypeEnum] = JsonEnumFormat[Schema.VpcNetwork.TypeEnum]
	given fmtListVmwareEngineNetworksResponse: Format[Schema.ListVmwareEngineNetworksResponse] = Json.format[Schema.ListVmwareEngineNetworksResponse]
	given fmtPrivateConnection: Format[Schema.PrivateConnection] = Json.format[Schema.PrivateConnection]
	given fmtPrivateConnectionStateEnum: Format[Schema.PrivateConnection.StateEnum] = JsonEnumFormat[Schema.PrivateConnection.StateEnum]
	given fmtPrivateConnectionTypeEnum: Format[Schema.PrivateConnection.TypeEnum] = JsonEnumFormat[Schema.PrivateConnection.TypeEnum]
	given fmtPrivateConnectionRoutingModeEnum: Format[Schema.PrivateConnection.RoutingModeEnum] = JsonEnumFormat[Schema.PrivateConnection.RoutingModeEnum]
	given fmtPrivateConnectionPeeringStateEnum: Format[Schema.PrivateConnection.PeeringStateEnum] = JsonEnumFormat[Schema.PrivateConnection.PeeringStateEnum]
	given fmtListPrivateConnectionsResponse: Format[Schema.ListPrivateConnectionsResponse] = Json.format[Schema.ListPrivateConnectionsResponse]
	given fmtListPrivateConnectionPeeringRoutesResponse: Format[Schema.ListPrivateConnectionPeeringRoutesResponse] = Json.format[Schema.ListPrivateConnectionPeeringRoutesResponse]
	given fmtGrantDnsBindPermissionRequest: Format[Schema.GrantDnsBindPermissionRequest] = Json.format[Schema.GrantDnsBindPermissionRequest]
	given fmtPrincipal: Format[Schema.Principal] = Json.format[Schema.Principal]
	given fmtDnsBindPermission: Format[Schema.DnsBindPermission] = Json.format[Schema.DnsBindPermission]
	given fmtRevokeDnsBindPermissionRequest: Format[Schema.RevokeDnsBindPermissionRequest] = Json.format[Schema.RevokeDnsBindPermissionRequest]
	given fmtListLocationsResponse: Format[Schema.ListLocationsResponse] = Json.format[Schema.ListLocationsResponse]
	given fmtLocation: Format[Schema.Location] = Json.format[Schema.Location]
	given fmtSetIamPolicyRequest: Format[Schema.SetIamPolicyRequest] = Json.format[Schema.SetIamPolicyRequest]
	given fmtPolicy: Format[Schema.Policy] = Json.format[Schema.Policy]
	given fmtBinding: Format[Schema.Binding] = Json.format[Schema.Binding]
	given fmtAuditConfig: Format[Schema.AuditConfig] = Json.format[Schema.AuditConfig]
	given fmtExpr: Format[Schema.Expr] = Json.format[Schema.Expr]
	given fmtAuditLogConfig: Format[Schema.AuditLogConfig] = Json.format[Schema.AuditLogConfig]
	given fmtAuditLogConfigLogTypeEnum: Format[Schema.AuditLogConfig.LogTypeEnum] = JsonEnumFormat[Schema.AuditLogConfig.LogTypeEnum]
	given fmtTestIamPermissionsRequest: Format[Schema.TestIamPermissionsRequest] = Json.format[Schema.TestIamPermissionsRequest]
	given fmtTestIamPermissionsResponse: Format[Schema.TestIamPermissionsResponse] = Json.format[Schema.TestIamPermissionsResponse]
	given fmtOperationMetadata: Format[Schema.OperationMetadata] = Json.format[Schema.OperationMetadata]
	given fmtLocationMetadata: Format[Schema.LocationMetadata] = Json.format[Schema.LocationMetadata]
	given fmtLocationMetadataCapabilitiesEnum: Format[Schema.LocationMetadata.CapabilitiesEnum] = JsonEnumFormat[Schema.LocationMetadata.CapabilitiesEnum]
}
