package com.boresjo.play.api.google.adexchangebuyer2

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Helpers {
	import Schema.*
	object AutoOption {
		given putString: Conversion[String, Option[String]] = (fun: String) => Option(fun)
		given putSchemaHtmlContent: Conversion[Schema.HtmlContent, Option[Schema.HtmlContent]] = (fun: Schema.HtmlContent) => Option(fun)
		given putSchemaVideoContent: Conversion[Schema.VideoContent, Option[Schema.VideoContent]] = (fun: Schema.VideoContent) => Option(fun)
		given putSchemaNativeContent: Conversion[Schema.NativeContent, Option[Schema.NativeContent]] = (fun: Schema.NativeContent) => Option(fun)
		given putListString: Conversion[List[String], Option[List[String]]] = (fun: List[String]) => Option(fun)
		given putListInt: Conversion[List[Int], Option[List[Int]]] = (fun: List[Int]) => Option(fun)
		given putListSchemaCreativeAttributesEnum: Conversion[List[Schema.Creative.AttributesEnum], Option[List[Schema.Creative.AttributesEnum]]] = (fun: List[Schema.Creative.AttributesEnum]) => Option(fun)
		given putListSchemaCreativeRestrictedCategoriesEnum: Conversion[List[Schema.Creative.RestrictedCategoriesEnum], Option[List[Schema.Creative.RestrictedCategoriesEnum]]] = (fun: List[Schema.Creative.RestrictedCategoriesEnum]) => Option(fun)
		given putSchemaCreativeDealsStatusEnum: Conversion[Schema.Creative.DealsStatusEnum, Option[Schema.Creative.DealsStatusEnum]] = (fun: Schema.Creative.DealsStatusEnum) => Option(fun)
		given putSchemaCreativeOpenAuctionStatusEnum: Conversion[Schema.Creative.OpenAuctionStatusEnum, Option[Schema.Creative.OpenAuctionStatusEnum]] = (fun: Schema.Creative.OpenAuctionStatusEnum) => Option(fun)
		given putListSchemaServingRestriction: Conversion[List[Schema.ServingRestriction], Option[List[Schema.ServingRestriction]]] = (fun: List[Schema.ServingRestriction]) => Option(fun)
		given putListSchemaCorrection: Conversion[List[Schema.Correction], Option[List[Schema.Correction]]] = (fun: List[Schema.Correction]) => Option(fun)
		given putSchemaAdTechnologyProviders: Conversion[Schema.AdTechnologyProviders, Option[Schema.AdTechnologyProviders]] = (fun: Schema.AdTechnologyProviders) => Option(fun)
		given putInt: Conversion[Int, Option[Int]] = (fun: Int) => Option(fun)
		given putSchemaImage: Conversion[Schema.Image, Option[Schema.Image]] = (fun: Schema.Image) => Option(fun)
		given putBigDecimal: Conversion[BigDecimal, Option[BigDecimal]] = (fun: BigDecimal) => Option(fun)
		given putSchemaServingRestrictionStatusEnum: Conversion[Schema.ServingRestriction.StatusEnum, Option[Schema.ServingRestriction.StatusEnum]] = (fun: Schema.ServingRestriction.StatusEnum) => Option(fun)
		given putListSchemaServingContext: Conversion[List[Schema.ServingContext], Option[List[Schema.ServingContext]]] = (fun: List[Schema.ServingContext]) => Option(fun)
		given putListSchemaDisapproval: Conversion[List[Schema.Disapproval], Option[List[Schema.Disapproval]]] = (fun: List[Schema.Disapproval]) => Option(fun)
		given putSchemaDisapproval: Conversion[Schema.Disapproval, Option[Schema.Disapproval]] = (fun: Schema.Disapproval) => Option(fun)
		given putSchemaServingContextAllEnum: Conversion[Schema.ServingContext.AllEnum, Option[Schema.ServingContext.AllEnum]] = (fun: Schema.ServingContext.AllEnum) => Option(fun)
		given putSchemaLocationContext: Conversion[Schema.LocationContext, Option[Schema.LocationContext]] = (fun: Schema.LocationContext) => Option(fun)
		given putSchemaPlatformContext: Conversion[Schema.PlatformContext, Option[Schema.PlatformContext]] = (fun: Schema.PlatformContext) => Option(fun)
		given putSchemaAuctionContext: Conversion[Schema.AuctionContext, Option[Schema.AuctionContext]] = (fun: Schema.AuctionContext) => Option(fun)
		given putSchemaSecurityContext: Conversion[Schema.SecurityContext, Option[Schema.SecurityContext]] = (fun: Schema.SecurityContext) => Option(fun)
		given putSchemaAppContext: Conversion[Schema.AppContext, Option[Schema.AppContext]] = (fun: Schema.AppContext) => Option(fun)
		given putListSchemaPlatformContextPlatformsEnum: Conversion[List[Schema.PlatformContext.PlatformsEnum], Option[List[Schema.PlatformContext.PlatformsEnum]]] = (fun: List[Schema.PlatformContext.PlatformsEnum]) => Option(fun)
		given putListSchemaAuctionContextAuctionTypesEnum: Conversion[List[Schema.AuctionContext.AuctionTypesEnum], Option[List[Schema.AuctionContext.AuctionTypesEnum]]] = (fun: List[Schema.AuctionContext.AuctionTypesEnum]) => Option(fun)
		given putListSchemaSecurityContextSecuritiesEnum: Conversion[List[Schema.SecurityContext.SecuritiesEnum], Option[List[Schema.SecurityContext.SecuritiesEnum]]] = (fun: List[Schema.SecurityContext.SecuritiesEnum]) => Option(fun)
		given putListSchemaAppContextAppTypesEnum: Conversion[List[Schema.AppContext.AppTypesEnum], Option[List[Schema.AppContext.AppTypesEnum]]] = (fun: List[Schema.AppContext.AppTypesEnum]) => Option(fun)
		given putSchemaDisapprovalReasonEnum: Conversion[Schema.Disapproval.ReasonEnum, Option[Schema.Disapproval.ReasonEnum]] = (fun: Schema.Disapproval.ReasonEnum) => Option(fun)
		given putSchemaCorrectionTypeEnum: Conversion[Schema.Correction.TypeEnum, Option[Schema.Correction.TypeEnum]] = (fun: Schema.Correction.TypeEnum) => Option(fun)
		given putBoolean: Conversion[Boolean, Option[Boolean]] = (fun: Boolean) => Option(fun)
		given putListSchemaCreative: Conversion[List[Schema.Creative], Option[List[Schema.Creative]]] = (fun: List[Schema.Creative]) => Option(fun)
		given putSchemaCreativeDealAssociation: Conversion[Schema.CreativeDealAssociation, Option[Schema.CreativeDealAssociation]] = (fun: Schema.CreativeDealAssociation) => Option(fun)
		given putListSchemaCreativeDealAssociation: Conversion[List[Schema.CreativeDealAssociation], Option[List[Schema.CreativeDealAssociation]]] = (fun: List[Schema.CreativeDealAssociation]) => Option(fun)
		given putListSchemaImpressionMetricsRow: Conversion[List[Schema.ImpressionMetricsRow], Option[List[Schema.ImpressionMetricsRow]]] = (fun: List[Schema.ImpressionMetricsRow]) => Option(fun)
		given putSchemaMetricValue: Conversion[Schema.MetricValue, Option[Schema.MetricValue]] = (fun: Schema.MetricValue) => Option(fun)
		given putSchemaRowDimensions: Conversion[Schema.RowDimensions, Option[Schema.RowDimensions]] = (fun: Schema.RowDimensions) => Option(fun)
		given putSchemaTimeInterval: Conversion[Schema.TimeInterval, Option[Schema.TimeInterval]] = (fun: Schema.TimeInterval) => Option(fun)
		given putListSchemaBidMetricsRow: Conversion[List[Schema.BidMetricsRow], Option[List[Schema.BidMetricsRow]]] = (fun: List[Schema.BidMetricsRow]) => Option(fun)
		given putListSchemaCalloutStatusRow: Conversion[List[Schema.CalloutStatusRow], Option[List[Schema.CalloutStatusRow]]] = (fun: List[Schema.CalloutStatusRow]) => Option(fun)
		given putListSchemaBidResponseWithoutBidsStatusRow: Conversion[List[Schema.BidResponseWithoutBidsStatusRow], Option[List[Schema.BidResponseWithoutBidsStatusRow]]] = (fun: List[Schema.BidResponseWithoutBidsStatusRow]) => Option(fun)
		given putSchemaBidResponseWithoutBidsStatusRowStatusEnum: Conversion[Schema.BidResponseWithoutBidsStatusRow.StatusEnum, Option[Schema.BidResponseWithoutBidsStatusRow.StatusEnum]] = (fun: Schema.BidResponseWithoutBidsStatusRow.StatusEnum) => Option(fun)
		given putListSchemaCreativeStatusRow: Conversion[List[Schema.CreativeStatusRow], Option[List[Schema.CreativeStatusRow]]] = (fun: List[Schema.CreativeStatusRow]) => Option(fun)
		given putListSchemaNonBillableWinningBidStatusRow: Conversion[List[Schema.NonBillableWinningBidStatusRow], Option[List[Schema.NonBillableWinningBidStatusRow]]] = (fun: List[Schema.NonBillableWinningBidStatusRow]) => Option(fun)
		given putSchemaNonBillableWinningBidStatusRowStatusEnum: Conversion[Schema.NonBillableWinningBidStatusRow.StatusEnum, Option[Schema.NonBillableWinningBidStatusRow.StatusEnum]] = (fun: Schema.NonBillableWinningBidStatusRow.StatusEnum) => Option(fun)
		given putListSchemaFilteredBidDetailRow: Conversion[List[Schema.FilteredBidDetailRow], Option[List[Schema.FilteredBidDetailRow]]] = (fun: List[Schema.FilteredBidDetailRow]) => Option(fun)
		given putSchemaListCreativeStatusBreakdownByDetailResponseDetailTypeEnum: Conversion[Schema.ListCreativeStatusBreakdownByDetailResponse.DetailTypeEnum, Option[Schema.ListCreativeStatusBreakdownByDetailResponse.DetailTypeEnum]] = (fun: Schema.ListCreativeStatusBreakdownByDetailResponse.DetailTypeEnum) => Option(fun)
		given putListSchemaFilteredBidCreativeRow: Conversion[List[Schema.FilteredBidCreativeRow], Option[List[Schema.FilteredBidCreativeRow]]] = (fun: List[Schema.FilteredBidCreativeRow]) => Option(fun)
		given putSchemaClientRoleEnum: Conversion[Schema.Client.RoleEnum, Option[Schema.Client.RoleEnum]] = (fun: Schema.Client.RoleEnum) => Option(fun)
		given putSchemaClientStatusEnum: Conversion[Schema.Client.StatusEnum, Option[Schema.Client.StatusEnum]] = (fun: Schema.Client.StatusEnum) => Option(fun)
		given putSchemaClientEntityTypeEnum: Conversion[Schema.Client.EntityTypeEnum, Option[Schema.Client.EntityTypeEnum]] = (fun: Schema.Client.EntityTypeEnum) => Option(fun)
		given putListSchemaClient: Conversion[List[Schema.Client], Option[List[Schema.Client]]] = (fun: List[Schema.Client]) => Option(fun)
		given putListSchemaClientUser: Conversion[List[Schema.ClientUser], Option[List[Schema.ClientUser]]] = (fun: List[Schema.ClientUser]) => Option(fun)
		given putSchemaClientUserStatusEnum: Conversion[Schema.ClientUser.StatusEnum, Option[Schema.ClientUser.StatusEnum]] = (fun: Schema.ClientUser.StatusEnum) => Option(fun)
		given putListSchemaClientUserInvitation: Conversion[List[Schema.ClientUserInvitation], Option[List[Schema.ClientUserInvitation]]] = (fun: List[Schema.ClientUserInvitation]) => Option(fun)
		given putSchemaRelativeDateRange: Conversion[Schema.RelativeDateRange, Option[Schema.RelativeDateRange]] = (fun: Schema.RelativeDateRange) => Option(fun)
		given putSchemaAbsoluteDateRange: Conversion[Schema.AbsoluteDateRange, Option[Schema.AbsoluteDateRange]] = (fun: Schema.AbsoluteDateRange) => Option(fun)
		given putSchemaRealtimeTimeRange: Conversion[Schema.RealtimeTimeRange, Option[Schema.RealtimeTimeRange]] = (fun: Schema.RealtimeTimeRange) => Option(fun)
		given putSchemaFilterSetTimeSeriesGranularityEnum: Conversion[Schema.FilterSet.TimeSeriesGranularityEnum, Option[Schema.FilterSet.TimeSeriesGranularityEnum]] = (fun: Schema.FilterSet.TimeSeriesGranularityEnum) => Option(fun)
		given putListSchemaFilterSetFormatsEnum: Conversion[List[Schema.FilterSet.FormatsEnum], Option[List[Schema.FilterSet.FormatsEnum]]] = (fun: List[Schema.FilterSet.FormatsEnum]) => Option(fun)
		given putSchemaFilterSetFormatEnum: Conversion[Schema.FilterSet.FormatEnum, Option[Schema.FilterSet.FormatEnum]] = (fun: Schema.FilterSet.FormatEnum) => Option(fun)
		given putSchemaFilterSetEnvironmentEnum: Conversion[Schema.FilterSet.EnvironmentEnum, Option[Schema.FilterSet.EnvironmentEnum]] = (fun: Schema.FilterSet.EnvironmentEnum) => Option(fun)
		given putListSchemaFilterSetPlatformsEnum: Conversion[List[Schema.FilterSet.PlatformsEnum], Option[List[Schema.FilterSet.PlatformsEnum]]] = (fun: List[Schema.FilterSet.PlatformsEnum]) => Option(fun)
		given putListSchemaFilterSetBreakdownDimensionsEnum: Conversion[List[Schema.FilterSet.BreakdownDimensionsEnum], Option[List[Schema.FilterSet.BreakdownDimensionsEnum]]] = (fun: List[Schema.FilterSet.BreakdownDimensionsEnum]) => Option(fun)
		given putSchemaDate: Conversion[Schema.Date, Option[Schema.Date]] = (fun: Schema.Date) => Option(fun)
		given putListSchemaFilterSet: Conversion[List[Schema.FilterSet], Option[List[Schema.FilterSet]]] = (fun: List[Schema.FilterSet]) => Option(fun)
		given putListSchemaDeal: Conversion[List[Schema.Deal], Option[List[Schema.Deal]]] = (fun: List[Schema.Deal]) => Option(fun)
		given putSchemaProposalOriginatorRoleEnum: Conversion[Schema.Proposal.OriginatorRoleEnum, Option[Schema.Proposal.OriginatorRoleEnum]] = (fun: Schema.Proposal.OriginatorRoleEnum) => Option(fun)
		given putSchemaSeller: Conversion[Schema.Seller, Option[Schema.Seller]] = (fun: Schema.Seller) => Option(fun)
		given putSchemaBuyer: Conversion[Schema.Buyer, Option[Schema.Buyer]] = (fun: Schema.Buyer) => Option(fun)
		given putSchemaProposalProposalStateEnum: Conversion[Schema.Proposal.ProposalStateEnum, Option[Schema.Proposal.ProposalStateEnum]] = (fun: Schema.Proposal.ProposalStateEnum) => Option(fun)
		given putSchemaPrivateData: Conversion[Schema.PrivateData, Option[Schema.PrivateData]] = (fun: Schema.PrivateData) => Option(fun)
		given putListSchemaContactInformation: Conversion[List[Schema.ContactInformation], Option[List[Schema.ContactInformation]]] = (fun: List[Schema.ContactInformation]) => Option(fun)
		given putSchemaProposalLastUpdaterOrCommentorRoleEnum: Conversion[Schema.Proposal.LastUpdaterOrCommentorRoleEnum, Option[Schema.Proposal.LastUpdaterOrCommentorRoleEnum]] = (fun: Schema.Proposal.LastUpdaterOrCommentorRoleEnum) => Option(fun)
		given putListSchemaNote: Conversion[List[Schema.Note], Option[List[Schema.Note]]] = (fun: List[Schema.Note]) => Option(fun)
		given putSchemaDealTerms: Conversion[Schema.DealTerms, Option[Schema.DealTerms]] = (fun: Schema.DealTerms) => Option(fun)
		given putListSchemaTargetingCriteria: Conversion[List[Schema.TargetingCriteria], Option[List[Schema.TargetingCriteria]]] = (fun: List[Schema.TargetingCriteria]) => Option(fun)
		given putSchemaMarketplaceTargeting: Conversion[Schema.MarketplaceTargeting, Option[Schema.MarketplaceTargeting]] = (fun: Schema.MarketplaceTargeting) => Option(fun)
		given putSchemaCreativeRestrictions: Conversion[Schema.CreativeRestrictions, Option[Schema.CreativeRestrictions]] = (fun: Schema.CreativeRestrictions) => Option(fun)
		given putSchemaDealSyndicationProductEnum: Conversion[Schema.Deal.SyndicationProductEnum, Option[Schema.Deal.SyndicationProductEnum]] = (fun: Schema.Deal.SyndicationProductEnum) => Option(fun)
		given putSchemaDealCreativePreApprovalPolicyEnum: Conversion[Schema.Deal.CreativePreApprovalPolicyEnum, Option[Schema.Deal.CreativePreApprovalPolicyEnum]] = (fun: Schema.Deal.CreativePreApprovalPolicyEnum) => Option(fun)
		given putSchemaDealCreativeSafeFrameCompatibilityEnum: Conversion[Schema.Deal.CreativeSafeFrameCompatibilityEnum, Option[Schema.Deal.CreativeSafeFrameCompatibilityEnum]] = (fun: Schema.Deal.CreativeSafeFrameCompatibilityEnum) => Option(fun)
		given putSchemaDealServingMetadata: Conversion[Schema.DealServingMetadata, Option[Schema.DealServingMetadata]] = (fun: Schema.DealServingMetadata) => Option(fun)
		given putSchemaDealProgrammaticCreativeSourceEnum: Conversion[Schema.Deal.ProgrammaticCreativeSourceEnum, Option[Schema.Deal.ProgrammaticCreativeSourceEnum]] = (fun: Schema.Deal.ProgrammaticCreativeSourceEnum) => Option(fun)
		given putSchemaDeliveryControl: Conversion[Schema.DeliveryControl, Option[Schema.DeliveryControl]] = (fun: Schema.DeliveryControl) => Option(fun)
		given putSchemaDealTermsBrandingTypeEnum: Conversion[Schema.DealTerms.BrandingTypeEnum, Option[Schema.DealTerms.BrandingTypeEnum]] = (fun: Schema.DealTerms.BrandingTypeEnum) => Option(fun)
		given putSchemaPrice: Conversion[Schema.Price, Option[Schema.Price]] = (fun: Schema.Price) => Option(fun)
		given putSchemaGuaranteedFixedPriceTerms: Conversion[Schema.GuaranteedFixedPriceTerms, Option[Schema.GuaranteedFixedPriceTerms]] = (fun: Schema.GuaranteedFixedPriceTerms) => Option(fun)
		given putSchemaNonGuaranteedFixedPriceTerms: Conversion[Schema.NonGuaranteedFixedPriceTerms, Option[Schema.NonGuaranteedFixedPriceTerms]] = (fun: Schema.NonGuaranteedFixedPriceTerms) => Option(fun)
		given putSchemaNonGuaranteedAuctionTerms: Conversion[Schema.NonGuaranteedAuctionTerms, Option[Schema.NonGuaranteedAuctionTerms]] = (fun: Schema.NonGuaranteedAuctionTerms) => Option(fun)
		given putSchemaPricePricingTypeEnum: Conversion[Schema.Price.PricingTypeEnum, Option[Schema.Price.PricingTypeEnum]] = (fun: Schema.Price.PricingTypeEnum) => Option(fun)
		given putSchemaMoney: Conversion[Schema.Money, Option[Schema.Money]] = (fun: Schema.Money) => Option(fun)
		given putListSchemaPricePerBuyer: Conversion[List[Schema.PricePerBuyer], Option[List[Schema.PricePerBuyer]]] = (fun: List[Schema.PricePerBuyer]) => Option(fun)
		given putSchemaGuaranteedFixedPriceTermsReservationTypeEnum: Conversion[Schema.GuaranteedFixedPriceTerms.ReservationTypeEnum, Option[Schema.GuaranteedFixedPriceTerms.ReservationTypeEnum]] = (fun: Schema.GuaranteedFixedPriceTerms.ReservationTypeEnum) => Option(fun)
		given putListSchemaTargetingValue: Conversion[List[Schema.TargetingValue], Option[List[Schema.TargetingValue]]] = (fun: List[Schema.TargetingValue]) => Option(fun)
		given putSchemaCreativeSize: Conversion[Schema.CreativeSize, Option[Schema.CreativeSize]] = (fun: Schema.CreativeSize) => Option(fun)
		given putSchemaDayPartTargeting: Conversion[Schema.DayPartTargeting, Option[Schema.DayPartTargeting]] = (fun: Schema.DayPartTargeting) => Option(fun)
		given putSchemaCreativeSizeCreativeSizeTypeEnum: Conversion[Schema.CreativeSize.CreativeSizeTypeEnum, Option[Schema.CreativeSize.CreativeSizeTypeEnum]] = (fun: Schema.CreativeSize.CreativeSizeTypeEnum) => Option(fun)
		given putSchemaSize: Conversion[Schema.Size, Option[Schema.Size]] = (fun: Schema.Size) => Option(fun)
		given putListSchemaSize: Conversion[List[Schema.Size], Option[List[Schema.Size]]] = (fun: List[Schema.Size]) => Option(fun)
		given putSchemaCreativeSizeSkippableAdTypeEnum: Conversion[Schema.CreativeSize.SkippableAdTypeEnum, Option[Schema.CreativeSize.SkippableAdTypeEnum]] = (fun: Schema.CreativeSize.SkippableAdTypeEnum) => Option(fun)
		given putSchemaCreativeSizeNativeTemplateEnum: Conversion[Schema.CreativeSize.NativeTemplateEnum, Option[Schema.CreativeSize.NativeTemplateEnum]] = (fun: Schema.CreativeSize.NativeTemplateEnum) => Option(fun)
		given putListSchemaCreativeSizeAllowedFormatsEnum: Conversion[List[Schema.CreativeSize.AllowedFormatsEnum], Option[List[Schema.CreativeSize.AllowedFormatsEnum]]] = (fun: List[Schema.CreativeSize.AllowedFormatsEnum]) => Option(fun)
		given putSchemaDayPartTargetingTimeZoneTypeEnum: Conversion[Schema.DayPartTargeting.TimeZoneTypeEnum, Option[Schema.DayPartTargeting.TimeZoneTypeEnum]] = (fun: Schema.DayPartTargeting.TimeZoneTypeEnum) => Option(fun)
		given putListSchemaDayPart: Conversion[List[Schema.DayPart], Option[List[Schema.DayPart]]] = (fun: List[Schema.DayPart]) => Option(fun)
		given putSchemaDayPartDayOfWeekEnum: Conversion[Schema.DayPart.DayOfWeekEnum, Option[Schema.DayPart.DayOfWeekEnum]] = (fun: Schema.DayPart.DayOfWeekEnum) => Option(fun)
		given putSchemaTimeOfDay: Conversion[Schema.TimeOfDay, Option[Schema.TimeOfDay]] = (fun: Schema.TimeOfDay) => Option(fun)
		given putSchemaCriteriaTargeting: Conversion[Schema.CriteriaTargeting, Option[Schema.CriteriaTargeting]] = (fun: Schema.CriteriaTargeting) => Option(fun)
		given putSchemaInventorySizeTargeting: Conversion[Schema.InventorySizeTargeting, Option[Schema.InventorySizeTargeting]] = (fun: Schema.InventorySizeTargeting) => Option(fun)
		given putSchemaTechnologyTargeting: Conversion[Schema.TechnologyTargeting, Option[Schema.TechnologyTargeting]] = (fun: Schema.TechnologyTargeting) => Option(fun)
		given putSchemaPlacementTargeting: Conversion[Schema.PlacementTargeting, Option[Schema.PlacementTargeting]] = (fun: Schema.PlacementTargeting) => Option(fun)
		given putSchemaVideoTargeting: Conversion[Schema.VideoTargeting, Option[Schema.VideoTargeting]] = (fun: Schema.VideoTargeting) => Option(fun)
		given putListSchemaAdSize: Conversion[List[Schema.AdSize], Option[List[Schema.AdSize]]] = (fun: List[Schema.AdSize]) => Option(fun)
		given putSchemaAdSizeSizeTypeEnum: Conversion[Schema.AdSize.SizeTypeEnum, Option[Schema.AdSize.SizeTypeEnum]] = (fun: Schema.AdSize.SizeTypeEnum) => Option(fun)
		given putSchemaOperatingSystemTargeting: Conversion[Schema.OperatingSystemTargeting, Option[Schema.OperatingSystemTargeting]] = (fun: Schema.OperatingSystemTargeting) => Option(fun)
		given putSchemaUrlTargeting: Conversion[Schema.UrlTargeting, Option[Schema.UrlTargeting]] = (fun: Schema.UrlTargeting) => Option(fun)
		given putSchemaMobileApplicationTargeting: Conversion[Schema.MobileApplicationTargeting, Option[Schema.MobileApplicationTargeting]] = (fun: Schema.MobileApplicationTargeting) => Option(fun)
		given putSchemaFirstPartyMobileApplicationTargeting: Conversion[Schema.FirstPartyMobileApplicationTargeting, Option[Schema.FirstPartyMobileApplicationTargeting]] = (fun: Schema.FirstPartyMobileApplicationTargeting) => Option(fun)
		given putListSchemaVideoTargetingTargetedPositionTypesEnum: Conversion[List[Schema.VideoTargeting.TargetedPositionTypesEnum], Option[List[Schema.VideoTargeting.TargetedPositionTypesEnum]]] = (fun: List[Schema.VideoTargeting.TargetedPositionTypesEnum]) => Option(fun)
		given putListSchemaVideoTargetingExcludedPositionTypesEnum: Conversion[List[Schema.VideoTargeting.ExcludedPositionTypesEnum], Option[List[Schema.VideoTargeting.ExcludedPositionTypesEnum]]] = (fun: List[Schema.VideoTargeting.ExcludedPositionTypesEnum]) => Option(fun)
		given putSchemaCreativeRestrictionsCreativeFormatEnum: Conversion[Schema.CreativeRestrictions.CreativeFormatEnum, Option[Schema.CreativeRestrictions.CreativeFormatEnum]] = (fun: Schema.CreativeRestrictions.CreativeFormatEnum) => Option(fun)
		given putListSchemaCreativeSpecification: Conversion[List[Schema.CreativeSpecification], Option[List[Schema.CreativeSpecification]]] = (fun: List[Schema.CreativeSpecification]) => Option(fun)
		given putSchemaCreativeRestrictionsSkippableAdTypeEnum: Conversion[Schema.CreativeRestrictions.SkippableAdTypeEnum, Option[Schema.CreativeRestrictions.SkippableAdTypeEnum]] = (fun: Schema.CreativeRestrictions.SkippableAdTypeEnum) => Option(fun)
		given putSchemaAdSize: Conversion[Schema.AdSize, Option[Schema.AdSize]] = (fun: Schema.AdSize) => Option(fun)
		given putSchemaDealPauseStatus: Conversion[Schema.DealPauseStatus, Option[Schema.DealPauseStatus]] = (fun: Schema.DealPauseStatus) => Option(fun)
		given putSchemaDealPauseStatusFirstPausedByEnum: Conversion[Schema.DealPauseStatus.FirstPausedByEnum, Option[Schema.DealPauseStatus.FirstPausedByEnum]] = (fun: Schema.DealPauseStatus.FirstPausedByEnum) => Option(fun)
		given putSchemaDeliveryControlDeliveryRateTypeEnum: Conversion[Schema.DeliveryControl.DeliveryRateTypeEnum, Option[Schema.DeliveryControl.DeliveryRateTypeEnum]] = (fun: Schema.DeliveryControl.DeliveryRateTypeEnum) => Option(fun)
		given putListSchemaFrequencyCap: Conversion[List[Schema.FrequencyCap], Option[List[Schema.FrequencyCap]]] = (fun: List[Schema.FrequencyCap]) => Option(fun)
		given putSchemaDeliveryControlCreativeBlockingLevelEnum: Conversion[Schema.DeliveryControl.CreativeBlockingLevelEnum, Option[Schema.DeliveryControl.CreativeBlockingLevelEnum]] = (fun: Schema.DeliveryControl.CreativeBlockingLevelEnum) => Option(fun)
		given putSchemaFrequencyCapTimeUnitTypeEnum: Conversion[Schema.FrequencyCap.TimeUnitTypeEnum, Option[Schema.FrequencyCap.TimeUnitTypeEnum]] = (fun: Schema.FrequencyCap.TimeUnitTypeEnum) => Option(fun)
		given putSchemaNoteCreatorRoleEnum: Conversion[Schema.Note.CreatorRoleEnum, Option[Schema.Note.CreatorRoleEnum]] = (fun: Schema.Note.CreatorRoleEnum) => Option(fun)
		given putListSchemaProposal: Conversion[List[Schema.Proposal], Option[List[Schema.Proposal]]] = (fun: List[Schema.Proposal]) => Option(fun)
		given putSchemaNote: Conversion[Schema.Note, Option[Schema.Note]] = (fun: Schema.Note) => Option(fun)
		given putSchemaProductSyndicationProductEnum: Conversion[Schema.Product.SyndicationProductEnum, Option[Schema.Product.SyndicationProductEnum]] = (fun: Schema.Product.SyndicationProductEnum) => Option(fun)
		given putListSchemaProduct: Conversion[List[Schema.Product], Option[List[Schema.Product]]] = (fun: List[Schema.Product]) => Option(fun)
		given putListSchemaPublisherProfileMobileApplication: Conversion[List[Schema.PublisherProfileMobileApplication], Option[List[Schema.PublisherProfileMobileApplication]]] = (fun: List[Schema.PublisherProfileMobileApplication]) => Option(fun)
		given putSchemaPublisherProfileMobileApplicationAppStoreEnum: Conversion[Schema.PublisherProfileMobileApplication.AppStoreEnum, Option[Schema.PublisherProfileMobileApplication.AppStoreEnum]] = (fun: Schema.PublisherProfileMobileApplication.AppStoreEnum) => Option(fun)
		given putListSchemaPublisherProfile: Conversion[List[Schema.PublisherProfile], Option[List[Schema.PublisherProfile]]] = (fun: List[Schema.PublisherProfile]) => Option(fun)
	}
	object OptionDefault {
		given getString: Conversion[Option[String], String] = (fun: Option[String]) => fun.getOrElse("")
	}
}
