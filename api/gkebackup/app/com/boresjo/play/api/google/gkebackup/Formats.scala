package com.boresjo.play.api.google.gkebackup

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, AuthToken, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Formats {
	given fmtGoogleLongrunningListOperationsResponse: Format[Schema.GoogleLongrunningListOperationsResponse] = Json.format[Schema.GoogleLongrunningListOperationsResponse]
	given fmtGoogleLongrunningOperation: Format[Schema.GoogleLongrunningOperation] = Json.format[Schema.GoogleLongrunningOperation]
	given fmtGoogleRpcStatus: Format[Schema.GoogleRpcStatus] = Json.format[Schema.GoogleRpcStatus]
	given fmtEmpty: Format[Schema.Empty] = Json.format[Schema.Empty]
	given fmtGoogleLongrunningCancelOperationRequest: Format[Schema.GoogleLongrunningCancelOperationRequest] = Json.format[Schema.GoogleLongrunningCancelOperationRequest]
	given fmtBackupPlan: Format[Schema.BackupPlan] = Json.format[Schema.BackupPlan]
	given fmtRetentionPolicy: Format[Schema.RetentionPolicy] = Json.format[Schema.RetentionPolicy]
	given fmtSchedule: Format[Schema.Schedule] = Json.format[Schema.Schedule]
	given fmtBackupConfig: Format[Schema.BackupConfig] = Json.format[Schema.BackupConfig]
	given fmtBackupPlanStateEnum: Format[Schema.BackupPlan.StateEnum] = JsonEnumFormat[Schema.BackupPlan.StateEnum]
	given fmtRpoConfig: Format[Schema.RpoConfig] = Json.format[Schema.RpoConfig]
	given fmtExclusionWindow: Format[Schema.ExclusionWindow] = Json.format[Schema.ExclusionWindow]
	given fmtTimeOfDay: Format[Schema.TimeOfDay] = Json.format[Schema.TimeOfDay]
	given fmtDate: Format[Schema.Date] = Json.format[Schema.Date]
	given fmtDayOfWeekList: Format[Schema.DayOfWeekList] = Json.format[Schema.DayOfWeekList]
	given fmtDayOfWeekListDaysOfWeekEnum: Format[Schema.DayOfWeekList.DaysOfWeekEnum] = JsonEnumFormat[Schema.DayOfWeekList.DaysOfWeekEnum]
	given fmtNamespaces: Format[Schema.Namespaces] = Json.format[Schema.Namespaces]
	given fmtNamespacedNames: Format[Schema.NamespacedNames] = Json.format[Schema.NamespacedNames]
	given fmtEncryptionKey: Format[Schema.EncryptionKey] = Json.format[Schema.EncryptionKey]
	given fmtNamespacedName: Format[Schema.NamespacedName] = Json.format[Schema.NamespacedName]
	given fmtListBackupPlansResponse: Format[Schema.ListBackupPlansResponse] = Json.format[Schema.ListBackupPlansResponse]
	given fmtBackup: Format[Schema.Backup] = Json.format[Schema.Backup]
	given fmtClusterMetadata: Format[Schema.ClusterMetadata] = Json.format[Schema.ClusterMetadata]
	given fmtBackupStateEnum: Format[Schema.Backup.StateEnum] = JsonEnumFormat[Schema.Backup.StateEnum]
	given fmtListBackupsResponse: Format[Schema.ListBackupsResponse] = Json.format[Schema.ListBackupsResponse]
	given fmtListVolumeBackupsResponse: Format[Schema.ListVolumeBackupsResponse] = Json.format[Schema.ListVolumeBackupsResponse]
	given fmtVolumeBackup: Format[Schema.VolumeBackup] = Json.format[Schema.VolumeBackup]
	given fmtVolumeBackupFormatEnum: Format[Schema.VolumeBackup.FormatEnum] = JsonEnumFormat[Schema.VolumeBackup.FormatEnum]
	given fmtVolumeBackupStateEnum: Format[Schema.VolumeBackup.StateEnum] = JsonEnumFormat[Schema.VolumeBackup.StateEnum]
	given fmtRestorePlan: Format[Schema.RestorePlan] = Json.format[Schema.RestorePlan]
	given fmtRestoreConfig: Format[Schema.RestoreConfig] = Json.format[Schema.RestoreConfig]
	given fmtRestorePlanStateEnum: Format[Schema.RestorePlan.StateEnum] = JsonEnumFormat[Schema.RestorePlan.StateEnum]
	given fmtRestoreConfigVolumeDataRestorePolicyEnum: Format[Schema.RestoreConfig.VolumeDataRestorePolicyEnum] = JsonEnumFormat[Schema.RestoreConfig.VolumeDataRestorePolicyEnum]
	given fmtRestoreConfigClusterResourceConflictPolicyEnum: Format[Schema.RestoreConfig.ClusterResourceConflictPolicyEnum] = JsonEnumFormat[Schema.RestoreConfig.ClusterResourceConflictPolicyEnum]
	given fmtRestoreConfigNamespacedResourceRestoreModeEnum: Format[Schema.RestoreConfig.NamespacedResourceRestoreModeEnum] = JsonEnumFormat[Schema.RestoreConfig.NamespacedResourceRestoreModeEnum]
	given fmtClusterResourceRestoreScope: Format[Schema.ClusterResourceRestoreScope] = Json.format[Schema.ClusterResourceRestoreScope]
	given fmtSubstitutionRule: Format[Schema.SubstitutionRule] = Json.format[Schema.SubstitutionRule]
	given fmtTransformationRule: Format[Schema.TransformationRule] = Json.format[Schema.TransformationRule]
	given fmtVolumeDataRestorePolicyBinding: Format[Schema.VolumeDataRestorePolicyBinding] = Json.format[Schema.VolumeDataRestorePolicyBinding]
	given fmtRestoreOrder: Format[Schema.RestoreOrder] = Json.format[Schema.RestoreOrder]
	given fmtGroupKind: Format[Schema.GroupKind] = Json.format[Schema.GroupKind]
	given fmtTransformationRuleAction: Format[Schema.TransformationRuleAction] = Json.format[Schema.TransformationRuleAction]
	given fmtResourceFilter: Format[Schema.ResourceFilter] = Json.format[Schema.ResourceFilter]
	given fmtTransformationRuleActionOpEnum: Format[Schema.TransformationRuleAction.OpEnum] = JsonEnumFormat[Schema.TransformationRuleAction.OpEnum]
	given fmtVolumeDataRestorePolicyBindingPolicyEnum: Format[Schema.VolumeDataRestorePolicyBinding.PolicyEnum] = JsonEnumFormat[Schema.VolumeDataRestorePolicyBinding.PolicyEnum]
	given fmtVolumeDataRestorePolicyBindingVolumeTypeEnum: Format[Schema.VolumeDataRestorePolicyBinding.VolumeTypeEnum] = JsonEnumFormat[Schema.VolumeDataRestorePolicyBinding.VolumeTypeEnum]
	given fmtGroupKindDependency: Format[Schema.GroupKindDependency] = Json.format[Schema.GroupKindDependency]
	given fmtListRestorePlansResponse: Format[Schema.ListRestorePlansResponse] = Json.format[Schema.ListRestorePlansResponse]
	given fmtRestore: Format[Schema.Restore] = Json.format[Schema.Restore]
	given fmtRestoreStateEnum: Format[Schema.Restore.StateEnum] = JsonEnumFormat[Schema.Restore.StateEnum]
	given fmtFilter: Format[Schema.Filter] = Json.format[Schema.Filter]
	given fmtVolumeDataRestorePolicyOverride: Format[Schema.VolumeDataRestorePolicyOverride] = Json.format[Schema.VolumeDataRestorePolicyOverride]
	given fmtResourceSelector: Format[Schema.ResourceSelector] = Json.format[Schema.ResourceSelector]
	given fmtVolumeDataRestorePolicyOverridePolicyEnum: Format[Schema.VolumeDataRestorePolicyOverride.PolicyEnum] = JsonEnumFormat[Schema.VolumeDataRestorePolicyOverride.PolicyEnum]
	given fmtListRestoresResponse: Format[Schema.ListRestoresResponse] = Json.format[Schema.ListRestoresResponse]
	given fmtListVolumeRestoresResponse: Format[Schema.ListVolumeRestoresResponse] = Json.format[Schema.ListVolumeRestoresResponse]
	given fmtVolumeRestore: Format[Schema.VolumeRestore] = Json.format[Schema.VolumeRestore]
	given fmtVolumeRestoreVolumeTypeEnum: Format[Schema.VolumeRestore.VolumeTypeEnum] = JsonEnumFormat[Schema.VolumeRestore.VolumeTypeEnum]
	given fmtVolumeRestoreStateEnum: Format[Schema.VolumeRestore.StateEnum] = JsonEnumFormat[Schema.VolumeRestore.StateEnum]
	given fmtGetBackupIndexDownloadUrlResponse: Format[Schema.GetBackupIndexDownloadUrlResponse] = Json.format[Schema.GetBackupIndexDownloadUrlResponse]
	given fmtListLocationsResponse: Format[Schema.ListLocationsResponse] = Json.format[Schema.ListLocationsResponse]
	given fmtLocation: Format[Schema.Location] = Json.format[Schema.Location]
	given fmtSetIamPolicyRequest: Format[Schema.SetIamPolicyRequest] = Json.format[Schema.SetIamPolicyRequest]
	given fmtPolicy: Format[Schema.Policy] = Json.format[Schema.Policy]
	given fmtBinding: Format[Schema.Binding] = Json.format[Schema.Binding]
	given fmtAuditConfig: Format[Schema.AuditConfig] = Json.format[Schema.AuditConfig]
	given fmtExpr: Format[Schema.Expr] = Json.format[Schema.Expr]
	given fmtAuditLogConfig: Format[Schema.AuditLogConfig] = Json.format[Schema.AuditLogConfig]
	given fmtAuditLogConfigLogTypeEnum: Format[Schema.AuditLogConfig.LogTypeEnum] = JsonEnumFormat[Schema.AuditLogConfig.LogTypeEnum]
	given fmtTestIamPermissionsRequest: Format[Schema.TestIamPermissionsRequest] = Json.format[Schema.TestIamPermissionsRequest]
	given fmtTestIamPermissionsResponse: Format[Schema.TestIamPermissionsResponse] = Json.format[Schema.TestIamPermissionsResponse]
	given fmtOperationMetadata: Format[Schema.OperationMetadata] = Json.format[Schema.OperationMetadata]
}
