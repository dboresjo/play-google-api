package com.boresjo.play.api.google.adsense

import play.api.libs.json.*
import play.api.libs.ws.{WSClient, WSRequest}
import com.boresjo.play.api.{PlayApi, RequestSigner, JsonEnumFormat}

import javax.inject.*
import scala.concurrent.{ExecutionContext, Future}

object Schema {
	object Account {
		enum StateEnum extends Enum[StateEnum] { case STATE_UNSPECIFIED, READY, NEEDS_ATTENTION, CLOSED }
	}
	case class Account(
	  /** Output only. Resource name of the account. Format: accounts/pub-[0-9]+ */
		name: Option[String] = None,
	  /** Output only. Display name of this account. */
		displayName: Option[String] = None,
	  /** Output only. Whether this account is premium. */
		premium: Option[Boolean] = None,
	  /** The account time zone, as used by reporting. For more information, see [changing the time zone of your reports](https://support.google.com/adsense/answer/9830725). */
		timeZone: Option[Schema.TimeZone] = None,
	  /** Output only. Creation time of the account. */
		createTime: Option[String] = None,
	  /** Output only. Outstanding tasks that need to be completed as part of the sign-up process for a new account. e.g. "billing-profile-creation", "phone-pin-verification". */
		pendingTasks: Option[List[String]] = None,
	  /** Output only. State of the account. */
		state: Option[Schema.Account.StateEnum] = None
	)
	
	case class TimeZone(
	  /** IANA Time Zone Database time zone, e.g. "America/New_York". */
		id: Option[String] = None,
	  /** Optional. IANA Time Zone Database version number, e.g. "2019a". */
		version: Option[String] = None
	)
	
	case class ListAccountsResponse(
	  /** The accounts returned in this list response. */
		accounts: Option[List[Schema.Account]] = None,
	  /** Continuation token used to page through accounts. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	case class ListChildAccountsResponse(
	  /** The accounts returned in this list response. */
		accounts: Option[List[Schema.Account]] = None,
	  /** Continuation token used to page through accounts. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	case class AdBlockingRecoveryTag(
	  /** The ad blocking recovery tag. Note that the message generated by the tag can be blocked by an ad blocking extension. If this is not your desired outcome, then you'll need to use it in conjunction with the error protection code. */
		tag: Option[String] = None,
	  /** Error protection code that can be used in conjunction with the tag. It'll display a message to users if an [ad blocking extension blocks their access to your site](https://support.google.com/adsense/answer/11575480). */
		errorProtectionCode: Option[String] = None
	)
	
	case class ListAdClientsResponse(
	  /** The ad clients returned in this list response. */
		adClients: Option[List[Schema.AdClient]] = None,
	  /** Continuation token used to page through ad clients. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	object AdClient {
		enum StateEnum extends Enum[StateEnum] { case STATE_UNSPECIFIED, READY, GETTING_READY, REQUIRES_REVIEW }
	}
	case class AdClient(
	  /** Output only. Resource name of the ad client. Format: accounts/{account}/adclients/{adclient} */
		name: Option[String] = None,
	  /** Output only. Unique ID of the ad client as used in the `AD_CLIENT_ID` reporting dimension. Present only if the ad client supports reporting. */
		reportingDimensionId: Option[String] = None,
	  /** Output only. Reporting product code of the ad client. For example, "AFC" for AdSense for Content. Corresponds to the `PRODUCT_CODE` dimension, and present only if the ad client supports reporting. */
		productCode: Option[String] = None,
	  /** Output only. State of the ad client. */
		state: Option[Schema.AdClient.StateEnum] = None
	)
	
	case class AdClientAdCode(
	  /** Output only. The AdSense code snippet to add to the head of an HTML page. */
		adCode: Option[String] = None,
	  /** Output only. The AdSense code snippet to add to the head of an AMP page. */
		ampHead: Option[String] = None,
	  /** Output only. The AdSense code snippet to add to the body of an AMP page. */
		ampBody: Option[String] = None
	)
	
	object AdUnit {
		enum StateEnum extends Enum[StateEnum] { case STATE_UNSPECIFIED, ACTIVE, ARCHIVED }
	}
	case class AdUnit(
	  /** Output only. Resource name of the ad unit. Format: accounts/{account}/adclients/{adclient}/adunits/{adunit} */
		name: Option[String] = None,
	  /** Output only. Unique ID of the ad unit as used in the `AD_UNIT_ID` reporting dimension. */
		reportingDimensionId: Option[String] = None,
	  /** Required. Display name of the ad unit, as provided when the ad unit was created. */
		displayName: Option[String] = None,
	  /** Required. State of the ad unit. */
		state: Option[Schema.AdUnit.StateEnum] = None,
	  /** Required. Settings specific to content ads (AFC). */
		contentAdsSettings: Option[Schema.ContentAdsSettings] = None
	)
	
	object ContentAdsSettings {
		enum TypeEnum extends Enum[TypeEnum] { case TYPE_UNSPECIFIED, DISPLAY, FEED, ARTICLE, MATCHED_CONTENT, LINK }
	}
	case class ContentAdsSettings(
	  /** Required. Size of the ad unit. e.g. "728x90", "1x3" (for responsive ad units). */
		size: Option[String] = None,
	  /** Required. Type of the ad unit. */
		`type`: Option[Schema.ContentAdsSettings.TypeEnum] = None
	)
	
	case class ListAdUnitsResponse(
	  /** The ad units returned in the list response. */
		adUnits: Option[List[Schema.AdUnit]] = None,
	  /** Continuation token used to page through ad units. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	case class AdUnitAdCode(
	  /** Output only. The code snippet to add to the body of an HTML page. */
		adCode: Option[String] = None
	)
	
	case class ListLinkedAdUnitsResponse(
	  /** The ad units returned in the list response. */
		adUnits: Option[List[Schema.AdUnit]] = None,
	  /** Continuation token used to page through ad units. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	case class ListAlertsResponse(
	  /** The alerts returned in this list response. */
		alerts: Option[List[Schema.Alert]] = None
	)
	
	object Alert {
		enum SeverityEnum extends Enum[SeverityEnum] { case SEVERITY_UNSPECIFIED, INFO, WARNING, SEVERE }
	}
	case class Alert(
	  /** Output only. Resource name of the alert. Format: accounts/{account}/alerts/{alert} */
		name: Option[String] = None,
	  /** Output only. Severity of this alert. */
		severity: Option[Schema.Alert.SeverityEnum] = None,
	  /** Output only. The localized alert message. This may contain HTML markup, such as phrase elements or links. */
		message: Option[String] = None,
	  /** Output only. Type of alert. This identifies the broad type of this alert, and provides a stable machine-readable identifier that will not be translated. For example, "payment-hold". */
		`type`: Option[String] = None
	)
	
	case class CustomChannel(
	  /** Output only. Resource name of the custom channel. Format: accounts/{account}/adclients/{adclient}/customchannels/{customchannel} */
		name: Option[String] = None,
	  /** Output only. Unique ID of the custom channel as used in the `CUSTOM_CHANNEL_ID` reporting dimension. */
		reportingDimensionId: Option[String] = None,
	  /** Required. Display name of the custom channel. */
		displayName: Option[String] = None,
	  /** Whether the custom channel is active and collecting data. See https://support.google.com/adsense/answer/10077192. */
		active: Option[Boolean] = None
	)
	
	case class ListCustomChannelsResponse(
	  /** The custom channels returned in this list response. */
		customChannels: Option[List[Schema.CustomChannel]] = None,
	  /** Continuation token used to page through alerts. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	case class ListLinkedCustomChannelsResponse(
	  /** The custom channels returned in this list response. */
		customChannels: Option[List[Schema.CustomChannel]] = None,
	  /** Continuation token used to page through alerts. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	case class Empty(
	
	)
	
	case class ListPaymentsResponse(
	  /** The payments returned in this list response. */
		payments: Option[List[Schema.Payment]] = None
	)
	
	case class Payment(
	  /** Output only. Resource name of the payment. Format: - accounts/{account}/payments/unpaid for unpaid (current) AdSense earnings. - accounts/{account}/payments/youtube-unpaid for unpaid (current) YouTube earnings. - accounts/{account}/payments/yyyy-MM-dd for paid AdSense earnings. - accounts/{account}/payments/youtube-yyyy-MM-dd for paid YouTube earnings. */
		name: Option[String] = None,
	  /** Output only. For paid earnings, the date that the payment was credited. For unpaid earnings, this field is empty. Payment dates are always returned in the billing timezone (America/Los_Angeles). */
		date: Option[Schema.Date] = None,
	  /** Output only. The amount of unpaid or paid earnings, as a formatted string, including the currency. E.g. "¥1,235 JPY", "$1,234.57", "£87.65". */
		amount: Option[String] = None
	)
	
	case class Date(
	  /** Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year. */
		year: Option[Int] = None,
	  /** Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day. */
		month: Option[Int] = None,
	  /** Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant. */
		day: Option[Int] = None
	)
	
	object PolicyIssue {
		enum EntityTypeEnum extends Enum[EntityTypeEnum] { case ENTITY_TYPE_UNSPECIFIED, SITE, SITE_SECTION, PAGE }
		enum ActionEnum extends Enum[ActionEnum] { case ENFORCEMENT_ACTION_UNSPECIFIED, WARNED, AD_SERVING_RESTRICTED, AD_SERVING_DISABLED, AD_SERVED_WITH_CLICK_CONFIRMATION, AD_PERSONALIZATION_RESTRICTED }
	}
	case class PolicyIssue(
	  /** Required. Resource name of the entity with policy issues. Format: accounts/{account}/policyIssues/{policy_issue} */
		name: Option[String] = None,
	  /** Required. Type of the entity indicating if the entity is a site, site-section, or page. */
		entityType: Option[Schema.PolicyIssue.EntityTypeEnum] = None,
	  /** Required. Hostname/domain of the entity (for example "foo.com" or "www.foo.com"). This _should_ be a bare domain/host name without any protocol. This will be present for all policy issues. */
		site: Option[String] = None,
	  /** Optional. Prefix of the site-section having policy issues (For example "foo.com/bar-section"). This will be present if the `entity_type` is `SITE_SECTION` and will be absent for other entity types. */
		siteSection: Option[String] = None,
	  /** Optional. URI of the page having policy violations (for example "foo.com/bar" or "www.foo.com/bar"). This will be present if the `entity_type` is `PAGE` and will be absent for other entity types. */
		uri: Option[String] = None,
	  /** Optional. List of ad clients associated with the policy issue (either as the primary ad client or an associated host/secondary ad client). In the latter case, this will be an ad client that is not owned by the current account. */
		adClients: Option[List[String]] = None,
	  /** Required. Unordered list. The policy topics that this entity was found to violate over the past seven days. */
		policyTopics: Option[List[Schema.PolicyTopic]] = None,
	  /** Required. Total number of ad requests affected by the policy violations over the past seven days. */
		adRequestCount: Option[String] = None,
	  /** Required. The most severe action taken on the entity over the past seven days. */
		action: Option[Schema.PolicyIssue.ActionEnum] = None,
	  /** Required. The date (in the America/Los_Angeles timezone) when policy violations were first detected on the entity. */
		firstDetectedDate: Option[Schema.Date] = None,
	  /** Required. The date (in the America/Los_Angeles timezone) when policy violations were last detected on the entity. */
		lastDetectedDate: Option[Schema.Date] = None,
	  /** Optional. The date (in the America/Los_Angeles timezone) when the entity will have ad serving demand restricted or ad serving disabled. This is present only for issues with a `WARNED` enforcement action. See https://support.google.com/adsense/answer/11066888. */
		warningEscalationDate: Option[Schema.Date] = None
	)
	
	case class PolicyTopic(
	  /** Required. The policy topic. For example, "sexual-content" or "ads-obscuring-content"." */
		topic: Option[String] = None,
	  /** Required. Indicates if this is a policy violation or not. When the value is true, issues that are instances of this topic must be addressed to remain in compliance with the partner's agreements with Google. A false value indicates that it's not mandatory to fix the issues but advertising demand might be restricted. */
		mustFix: Option[Boolean] = None
	)
	
	case class ListPolicyIssuesResponse(
	  /** The policy issues returned in the list response. */
		policyIssues: Option[List[Schema.PolicyIssue]] = None,
	  /** Continuation token used to page through policy issues. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	case class ReportResult(
	  /** The total number of rows matched by the report request. */
		totalMatchedRows: Option[String] = None,
	  /** The header information; one for each dimension in the request, followed by one for each metric in the request. */
		headers: Option[List[Schema.Header]] = None,
	  /** The output rows of the report. Each row is a list of cells; one for each dimension in the request, followed by one for each metric in the request. */
		rows: Option[List[Schema.Row]] = None,
	  /** The totals of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty. */
		totals: Option[Schema.Row] = None,
	  /** The averages of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty. */
		averages: Option[Schema.Row] = None,
	  /** Any warnings associated with generation of the report. These warnings are always returned in English. */
		warnings: Option[List[String]] = None,
	  /** Required. Start date of the range (inclusive). */
		startDate: Option[Schema.Date] = None,
	  /** Required. End date of the range (inclusive). */
		endDate: Option[Schema.Date] = None
	)
	
	object Header {
		enum TypeEnum extends Enum[TypeEnum] { case HEADER_TYPE_UNSPECIFIED, DIMENSION, METRIC_TALLY, METRIC_RATIO, METRIC_CURRENCY, METRIC_MILLISECONDS, METRIC_DECIMAL }
	}
	case class Header(
	  /** Required. Name of the header. */
		name: Option[String] = None,
	  /** Required. Type of the header. */
		`type`: Option[Schema.Header.TypeEnum] = None,
	  /** The [ISO-4217 currency code](https://en.wikipedia.org/wiki/ISO_4217) of this column. Only present if the header type is METRIC_CURRENCY. */
		currencyCode: Option[String] = None
	)
	
	case class Row(
	  /** Cells in the row. */
		cells: Option[List[Schema.Cell]] = None
	)
	
	case class Cell(
	  /** Value in the cell. The dimension cells contain strings, and the metric cells contain numbers. */
		value: Option[String] = None
	)
	
	case class HttpBody(
	  /** The HTTP Content-Type header value specifying the content type of the body. */
		contentType: Option[String] = None,
	  /** The HTTP request/response body as raw binary. */
		data: Option[String] = None,
	  /** Application specific response metadata. Must be set in the first response for streaming APIs. */
		extensions: Option[List[Map[String, JsValue]]] = None
	)
	
	case class SavedReport(
	  /** Output only. Resource name of the report. Format: accounts/{account}/reports/{report} */
		name: Option[String] = None,
	  /** Report title as specified by publisher. */
		title: Option[String] = None
	)
	
	case class ListSavedReportsResponse(
	  /** The reports returned in this list response. */
		savedReports: Option[List[Schema.SavedReport]] = None,
	  /** Continuation token used to page through reports. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	object Site {
		enum StateEnum extends Enum[StateEnum] { case STATE_UNSPECIFIED, REQUIRES_REVIEW, GETTING_READY, READY, NEEDS_ATTENTION }
	}
	case class Site(
	  /** Output only. Resource name of a site. Format: accounts/{account}/sites/{site} */
		name: Option[String] = None,
	  /** Output only. Unique ID of the site as used in the `OWNED_SITE_ID` reporting dimension. */
		reportingDimensionId: Option[String] = None,
	  /** Domain (or subdomain) of the site, e.g. "example.com" or "www.example.com". This is used in the `OWNED_SITE_DOMAIN_NAME` reporting dimension. */
		domain: Option[String] = None,
	  /** Output only. State of a site. */
		state: Option[Schema.Site.StateEnum] = None,
	  /** Whether auto ads is turned on for the site. */
		autoAdsEnabled: Option[Boolean] = None
	)
	
	case class ListSitesResponse(
	  /** The sites returned in this list response. */
		sites: Option[List[Schema.Site]] = None,
	  /** Continuation token used to page through sites. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
	
	case class UrlChannel(
	  /** Output only. Resource name of the URL channel. Format: accounts/{account}/adclients/{adclient}/urlchannels/{urlchannel} */
		name: Option[String] = None,
	  /** Output only. Unique ID of the custom channel as used in the `URL_CHANNEL_ID` reporting dimension. */
		reportingDimensionId: Option[String] = None,
	  /** URI pattern of the channel. Does not include "http://" or "https://". Example: www.example.com/home */
		uriPattern: Option[String] = None
	)
	
	case class ListUrlChannelsResponse(
	  /** The url channels returned in this list response. */
		urlChannels: Option[List[Schema.UrlChannel]] = None,
	  /** Continuation token used to page through url channels. To retrieve the next page of the results, set the next request's "page_token" value to this. */
		nextPageToken: Option[String] = None
	)
}
